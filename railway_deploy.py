#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
railway_deploy.py ‚Äì —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
- –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω—É –ø—Ä–∏ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ
- –∫–Ω–æ–ø–∫–∞ ¬´üë§ Aloqaga_chiqish¬ª —Å @username –∏–ª–∏ –±–µ–∑
- –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: ƒ∞‚Üíi,  º‚Üí', —Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ –≤–∞–∂–µ–Ω
- –≤—Å–µ —Ä–∞–π–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã –∏ –∫—Ä—É–ø–Ω—ã–µ –ø–æ—Å—ë–ª–∫–∏ (–ü–∏—à–∞–≥–∞—Ä–¥–∞–Ω, –ß–∏–Ω–∞–∑, ‚Ä¶)
"""
import os
import sys
import time
import signal
import logging
import threading
import re
import unicodedata
import traceback
from datetime import datetime
from flask import Flask, request, jsonify
import requests

# ========== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ==========
BOT_TOKEN     = os.environ.get('TELEGRAM_BOT_TOKEN')
MAIN_GROUP_ID = int(os.environ.get('MAIN_GROUP_ID', '-1002259378109'))
ADMIN_USER_ID = int(os.environ.get('ADMIN_USER_ID', '8101326669'))
BOT_USERNAME  = os.getenv("BOT_USERNAME", "yukmarkazi_bot")  # –±–µ–∑ @
API_URL       = f"https://api.telegram.org/bot{BOT_TOKEN}" if BOT_TOKEN else None
# ========== –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ==========
last_update_id = 0
stop_polling = False
bot_status = "–ê–ö–¢–ò–í–ï–ù"
message_count = 0
bot_start_time = datetime.now()
logger = logging.getLogger(__name__)

# ========== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ==========
def init_logging():
    logging.basicConfig(
        level=logging.INFO,
        format='[%(asctime)s] %(levelname)s: %(message)s',
        handlers=[
            logging.FileHandler('bot.log', encoding='utf-8'),
            logging.StreamHandler()
        ]
    )

# ========== REGION_KEYWORDS ==========
REGION_KEYWORDS = {
    'toshkent': {
        'topic_id': 101362,
        'keywords': [
            # —Å—Ç–æ–ª–∏—Ü–∞
            'toshkent', 'tashkent', 'toshkent shahri', 'tashkent city',
            'tosh-kent', 'tash-kent', 'tosh ºkent', 'tash ºkent', 'toshkentdan', 'TOSHKEN–î–ê–ù',
            'toshkent ƒ∞', 'toshkent i', 'TOSHKENT', 'TASHKENT', 'toshkendan', 'toshken',
            'tosh', 'toshkentga', '—Ç–æ—à–∫–µ–Ω—Ç', '—Ç–æ—à–∫–µ–Ω—Ç–≥–∞', '—Ç–æ—à–∫–µ–Ω–¥–∞–Ω', '—Ç–∞—à–∫–µ–Ω—Ç', '—Ç–∞—à–∫–µ–Ω—Çga', 
            # —Ä–∞–π–æ–Ω—ã –≥–æ—Ä–æ–¥–∞
            'yashnobod', 'yashnobod tumani', 'yunusobod', 'yunusobod tumani',
            'mirzo-ulugbek', 'mirzo ulugbek', 'mirzo-ulugbek tumani',
            'olmazor', 'olmazor tumani', 'uchtepa', 'uchtepa tumani',
            'shayxontoxur', 'shayxontohur', 'shayxontoxur tumani',
            'chilonzor', 'chilon-zor', 'chilonzor tumani',
            'sergeli', 'sergeli tumani', 'sergili', '—Å–µ—Ä–≥–µ–ª–∏', '—Å–µ—Ä–≥–∏–ª–∏',
            'yakkasaroy', 'yakkasaray', 'yakkasaroy tumani',
            'mirobod', 'mirabad', 'mirobod tumani', 'bektemir', 'bektemir tumani',
            # –æ–±–ª–∞—Å—Ç–∏ –∏ —Ä–∞–π–æ–Ω—ã –¢–∞—à–∫–µ–Ω—Ç—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
            'bekobod', 'bekabad', 'bekobod tumani', 'bekabad tumani', 'angren', 'angiren', 'angren i', 'angren ƒ∞', '–∞–Ω–≥—Ä–µ–Ω', '–∞–Ω–≥—Ä–µ–Ωga', '–∞–Ω–≥—Ä–µ–Ωdan',
            'xasanboy', 'hasanboy', 'xasanboydan', '—Ö–∞—Å–∞–Ω–±–æ–π', '—Ö–∞—Å–∞–Ω–±–æ–π–¥–∞–Ω', '–∞–Ω–≥—Ä–µ–Ω', '–∞–Ω–≥—Ä–µ–Ωga', '–∞–Ω–≥—Ä–µ–Ωdan', 'angren', 'angren i', 'angren ƒ∞', 'angiren',
            'olmaliq', 'alma-lyk', 'olmalik', 'olmaliq tumani', 'olmaliq i',
            'ohangaron', 'axangaron', 'ohan ºgaron', 'ohangaron tumani', 'ohangaron i',
            'angren', 'angren ƒ∞', 'angiren', 'angren i',
            'chirchiq', 'chirchik', 'chirchik ƒ∞', 'chir-chiq', 'chirchiq i',
            'yangiyul', "yangiyo'l", 'yangiyul tumani', 'yangiyul i', "yangiyo'l tumani",
            'parkent', 'parkent tumani', 'piskent', 'piskent tumani', 'bekobod', 'bekabad', '–±–µ–∫–∞–±–∞–¥', '–±–µ–∫–æ–±–æ–¥',
            'quyichirchiq', 'quyichirchiq tumani',
            'bo ªka', 'boka', 'bo ªka tumani', 'boka tumani', 'chinaz', 'chinazdan', 'chinaz tumani', 'chinoz', 'chinozdan', '—á–∏–Ω–æ', '—á–∏–Ω–æ–∑', '—á–∏–Ω–æ–∑–¥–∞–Ω',
            'zangiota', 'zangiota tumani',
            'qibray', 'qibray tumani',
            'yuqorichirchiq', 'toshkent', 'tashkent', 'toshkent shahri', 'tashkent city', 'toshkentga', 'tashkentga', 'toshkentdan', 'tashkentdan',
            'towkent', 'towkentga', 'towkentdan', 'tosh-kent', 'tash-kent', 'tosh ºkent', 'tash ºkent', 'toshkent ƒ∞', 'toshkent i', 'TOSHKENT', 'TASHKENT',
            'tosh', 'toshkentga', '—Ç–æ—à–∫–µ–Ω—Ç', '—Ç–æ—à–∫–µ–Ω—Ç–≥–∞', '—Ç–æ—à–∫–µ–Ω–¥–∞–Ω', '—Ç–∞—à–∫–µ–Ω—Ç', '—Ç–∞—à–∫–µ–Ω—Ç–≥–∞', '—Ç–∞—à–∫–µ–Ω–¥–∞–Ω', 'ta≈ükent', 'ta≈ükentte', 'ta≈ükentten',
            # —Ä–∞–π–æ–Ω—ã –≥–æ—Ä–æ–¥–∞
            'yashnobod', 'yashnobod tumani', 'yunusobod', 'yunusobod tumani', 'yunusabad', 'yunusoboddan',
            'mirzo-ulugbek', 'mirzo ulugbek', 'mirzo-ulugbek tumani', 'mirzoulugbek', 'mirzoulugbekdan',
            'olmazor', 'olmazor tumani', 'uchtepa', 'uchtepa tumani', 'uchtepadan', 'uchtepaga',
            'shayxontoxur', 'shayxontohur', 'shayxontoxur tumani', 'shayxontoxurdan',
            'chilonzor', 'chilon-zor', 'chilonzor tumani', 'chilonzordan', 'chilonzor ga',
            'sergeli', 'sergeli tumani', 'sergili', '—Å–µ—Ä–≥–µ–ª–∏', '—Å–µ—Ä–≥–∏–ª–∏', 'sergeliga', 'sergelidan',
            'yakkasaroy', 'yakkasaray', 'yakkasaroy tumani', 'yakkasaroyga', 'yakkasaroydan',
            'mirobod', 'mirabad', 'mirobod tumani', 'bektemir', 'bektemir tumani', 'bektemirdan',
            # –æ–±–ª–∞—Å—Ç–∏ –¢–∞—à–∫–µ–Ω—Ç—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏
            'bekobod', 'bekabad', 'bekobod tumani', 'bekabad tumani', '–±–µ–∫–∞–±–∞–¥', '–±–µ–∫–æ–±–æ–¥', 'bekobodga', 'bekoboddan',
            'xasanboy', 'hasanboy', 'xasanboydan', '—Ö–∞—Å–∞–Ω–±–æ–π', '—Ö–∞—Å–∞–Ω–±–æ–π–¥–∞–Ω', 'xasanboyga',
            'olmaliq', 'alma-lyk', 'olmalik', 'olmaliq tumani', 'olmaliq i', 'olmalƒ±k', 'olmaliqga', 'olmaliqdan',
            'ohangaron', 'axangaron', 'ohan ºgaron', 'ohangaron tumani', 'ohangaron i', 'ohangaronga', 'ohangarondan',
            'angren', 'angren ƒ∞', 'angiren', 'angren i', 'angrenga', 'angrendan',
            'chirchiq', 'chirchik', 'chirchik ƒ∞', 'chir-chiq', 'chirchiq i', '√ßir√ßik', 'chirchiqga', 'chirchiqdan',
            'yangiyul', "yangiyo'l", 'yangiyul tumani', 'yangiyul i', "yangiyo'l tumani", "yangiyo'ldan", "yangiyo'lga",
            'parkent', 'parkent tumani', 'parkentga', 'parkentdan',
            'piskent', 'piskent tumani', 'piskentga', 'piskentdan',
            'quyichirchiq', 'quyichirchiq tumani', 'quyichirchiqga',
            'bo ªka', 'boka', 'bo ªka tumani', 'boka tumani', 'bo ªkaga', 'bo ªkadan',
            'chinaz', 'chinazdan', 'chinaz tumani', 'chinoz', 'chinozdan', '—á–∏–Ω–æ', '—á–∏–Ω–æ–∑', '—á–∏–Ω–æ–∑–¥–∞–Ω', 'chinazga',
            'zangiota', 'zangiota tumani', 'zangiotaga', 'zangiotadan',
            'qibray', 'qibray tumani', 'qibrayga', 'qibraydan',
            'yuqorichirchiq', 'yuqorichirchiq tumani', 'yuqorichirchiqga',
            'nurafshon', 'nurafshon tumani', 'nurafshonga', 'nurafshondan',
            'akhangaran', 'axangaran', 'akhangaran tumani', 'akhangaranga', 'akhangarandan', 'yuqorichirchiq tumani',
            'nurafshon', 'nurafshon tumani',
            'akhangaran', 'axangaran', 'akhangaran tumani',
            'forish', 'forish tumani', 'ustarkhan', 'ustarkhan tumani',
            'gazalkent', 'gazalkent tumani', 'keles', 'keles tumani',
            'tashkent region', 'toshkent viloyati', 'tashkent oblast'
        ]
    },
    'andijon': {
        'topic_id': 101387,
        'keywords': [
            'andijon', 'andijan', 'andijon ƒ∞', 'andijon º', 'andijon i', "andijon'",
            '–∞–Ω–¥–∏–∂–æ–Ω', '–∞–Ω–¥–∏–∂–æ–Ω–≥–∞', '–∞–Ω–¥–∏–∂–æ–Ω–¥–∞–Ω', '–∞–Ω–¥–∏–∂–æ–Ω', '–∞–Ω–¥–∏–∂–æ–Ω–≥–∞',
            'andijonga', 'andijon-ga', 'andijon ga',
            'asaka', 'asaka ƒ∞', 'asaka º', 'asaka tumani', 'asaka i', "asaka'",
            'marhamat', 'marxamat', 'marhamat tumani', 'marhamat i',
            'shahrixon', 'shahrixon tumani', 'shaxrixon', 'shahrixon i',
            'xoja-obod', 'xojaobod', 'xoja ºobod', "xoja'obod", "xoja'obod",
            'qorgontepa', 'qurghontepa', 'qurg ªontepa', 'qurghontepa i',
            'oltinkol', 'oltinko ªl', 'oltinkol tumani', 'oltinkol i', 'andijon', 'andijan', 'andijon ƒ∞', 'andijon º', 'andijon i', "andijon'", '–∞–Ω–¥–∏–∂–æ–Ω', '–∞–Ω–¥–∏–∂–æ–Ω–≥–∞', '–∞–Ω–¥–∏–∂–æ–Ω–¥–∞–Ω',
            'andijonga', 'andijon-ga', 'andijon ga', 'andijondan', 'andijan i', 'andijandan',
            'asaka', 'asaka ƒ∞', 'asaka º', 'asaka tumani', 'asaka i', "asaka'", 'asakaga', 'asakadan',
            'marhamat', 'marxamat', 'marhamat tumani', 'marhamat i', 'marhamatga', 'marhamatdan',
            'shahrixon', 'shahrixon tumani', 'shaxrixon', 'shahrixon i', 'shahrixonga', 'shahrixondan',
            'xoja-obod', 'xojaobod', 'xoja ºobod', "xoja'obod", "xoja'obod", 'xojaobod tumani', 'xojaobodga',
            'qorgontepa', 'qurghontepa', 'qurg ªontepa', 'qurghontepa i', 'qorgontepaga', 'qorgontepadan',
            'oltinkol', 'oltinko ªl', 'oltinkol tumani', 'oltinkol i', 'oltinkolga', 'oltinkoldan'
        ]
    },
    'fargona': {
        'topic_id': 101382,
        'keywords': [
            "farg'ona", "farg ªona", 'fargona', 'fergana', 'farg-on-a',
            'fargona ƒ∞', 'fargona i', "farg'ona ƒ∞", "farg ªona ƒ∞",
            'qoqon', 'kokand', 'quqon', 'qo ºqon', 'qoqon ƒ∞', 'qoqon i',
            '–∫–æ–∫–∞–Ω–¥', '–∫–æ–∫–∞–Ω–¥ga', '–∫–æ–∫–∞–Ω–¥dan',
            'margilon', 'margilan', 'margilon ƒ∞', 'margilon i',
            'quvasoy', 'kuvasay', 'quvasoy ƒ∞', 'quvasoy i', 'quvasoy º', 'quvasoy', 'kuvasay', '–∫—É–≤–∞—Å–∞–π', '–∫—É–≤–∞—Å–æ–π', 'quvasoydan', '–∫—É–≤–∞—Å–æ–π–¥–∞–Ω',
            'beshariq', 'besharik', 'beshariq ƒ∞', 'beshariq i',
            "bog'dod", 'bogdod', "bog ªdod", "bog'dod ƒ∞", "bog'dod i",
            "bog'doddan", 'bogdoddan', '–±–æ–≥–¥–æ–¥', '–±–æ–≥–¥–æ–¥dan',
            'oltiarik', 'oltiarik ƒ∞', 'oltiarik i',
            'rishton', 'rishtan', 'rishton ƒ∞', 'rishton i',
            'sox', 'sox tumani', 'sox ƒ∞', 'sox i', 'fargona', 'fergana', 'farg-on-a', 'fargona ƒ∞', 'fargona i', "farg'ona ƒ∞", "farg ªona ƒ∞",
            'farg ªonaga', 'farg ªonadan', 'ferganaga', 'fergandadan', 'farg ªona viloyati', 'fargona viloyati',
            'qoqon', 'kokand', 'quqon', "qo'qon", 'qoqon ƒ∞', 'qoqon i', 'qoqonga', 'qoqondan', '–∫–æ–∫–∞–Ω–¥', '–∫–æ–∫–∞–Ω–¥ga', '–∫–æ–∫–∞–Ω–¥dan',
            'margilon', 'margilan', 'margilon ƒ∞', 'margilon i', 'margilonga', 'margilondan',
            'quvasoy', 'kuvasay', 'quvasoy ƒ∞', 'quvasoy i', 'quvasoy º', "quvasoy'", 'quvasoyga', 'quvasoydan',
            'beshariq', 'besharik', 'beshariq ƒ∞', 'beshariq i', 'beshariqqa', 'beshariqdan',
            "bog'dod", 'bogdod', "bog ªdod", "bog'dod ƒ∞", "bog'dod i", "bog'dodga", "bog'doddan",
            'oltiarik', 'oltiarik ƒ∞', 'oltiarik i', 'oltiarikka', 'oltiarikdan',
            'rishton', 'rishtan', 'rishton ƒ∞', 'rishton i', 'rishtonga', 'rishtondan',
            'sox', 'sox tumani', 'sox ƒ∞', 'sox i', 'soxga', 'soxdan'
        ]
    },
    'namangan': {
        'topic_id': 101383,
        'keywords': [
            'namangan', 'namangan ƒ∞', 'namangan º', 'namangan i', "namangan'",
            '–Ω–∞–º–∞–Ω–≥–∞–Ω', '–Ω–∞–º–∞–Ω–≥–∞–Ω–≥–∞', '–Ω–∞–º–∞–Ω–≥–∞–Ω–¥–∞–Ω', '–Ω–∞–º–∞–Ω–≥–∞–Ω',
            'chortoq', 'chartak', 'chortoq ƒ∞', 'chortoq i', 'chortoq º',
            'yangiqorgon', 'yangikurgan', 'yangi-qorƒüon', 'yangikurgan i',
            'chust', 'chust tumani', 'chust ƒ∞', 'chust i', 'chust º', "chust'",
            '—á—É—Å—Ç', '—á—É—Å—Ç–≥–∞', '—á—É—Å—Çd–∞–Ω',
            'kosonsoy', 'kosonsoy tumani', 'kosonsoy ƒ∞', 'kosonsoy i',
            'mullomirsoy', 'mullomir ºsoy', "mullomir'soy",
            'uchqorgon', 'uch-qorƒüon', 'uchqo ªrg ªon', 'uchqorgon i',
            'pop', 'pop tumani', 'pop ƒ∞', 'pop i', 'namangan', 'namangan ƒ∞', 'namangan º', 'namangan i', "namangan'", '–Ω–∞–º–∞–Ω–≥–∞–Ω', '–Ω–∞–º–∞–Ω–≥–∞–Ω–≥–∞', '–Ω–∞–º–∞–Ω–≥–∞–Ω–¥–∞–Ω',
            'chortoq', 'chartak', 'chortoq ƒ∞', 'chortoq i', 'chortoq º', "chortoq'", 'chortoqqa', 'chortoqdan',
            'yangiqorgon', 'yangikurgan', 'yangi-qorƒüon', 'yangikurgan i', 'yangiqorgonga', 'yangiqorgondan',
            'chust', 'chust tumani', 'chust ƒ∞', 'chust i', 'chust º', "chust'", '—á—É—Å—Ç', '—á—É—Å—Ç–≥–∞', '—á—É—Å—Ç–¥–∞–Ω', 'chustga', 'chustdan',
            'kosonsoy', 'kosonsoy tumani', 'kosonsoy ƒ∞', 'kosonsoy i', 'kosonsoyga', 'kosonsoydan',
            'mullomirsoy', "mullomir'soy", 'mullomir ºsoy', 'mullomirsoy tumani', 'mullomirsoyga', 'mullomirsoydan',
            'uchqorgon', 'uch-qorƒüon', 'uchqo ªrg ªon', 'uchqorgon i', 'uchqorgonga', 'uchqorgondan',
            'pop', 'pop tumani', 'pop ƒ∞', 'pop i', 'popga', 'popdan'
        ]
    },
    'buxoro': {
        'topic_id': 101372,
        'keywords': [
            'buxoro', 'bukhara', 'buxara', 'buxoro ƒ∞', 'buxoro º', 'buxoro i', "buxoro'",
            '–±—É—Ö–æ—Ä–æ', '–±—É—Ö–æ—Ä–æ–≥–∞', '–±—É—Ö–æ—Ä–æ–¥–∞–Ω', '–±—É—Ö–∞—Ä–∞',
            'alat', 'alat tumani', 'alat ƒ∞', 'alat i',
            "g'ijduvon", 'gijduvon', "g ªijduvon", "g'ijduvon ƒ∞", "g'ijduvon i",
            'kogon', 'kogon tumani', 'kogon ƒ∞', 'kogon i',
            'romitan', 'romitan tumani', 'romitan ƒ∞', 'romitan i',
            'shofirkon', 'shofirkon ƒ∞', 'shofirkon tumani', 'shofirkon i',
            'qorako ªl', 'qorakol', 'qorakol ƒ∞', 'qorakol i', 'buxoro', 'bukhara', 'buxara', 'buxoro ƒ∞', 'buxoro º', 'buxoro i', "buxoro'", '–±—É—Ö–æ—Ä–æ', '–±—É—Ö–æ—Ä–æ–≥–∞', '–±—É—Ö–æ—Ä–æ–¥–∞–Ω', '–±—É—Ö–∞—Ä–∞',
            'alat', 'alat tumani', 'alat ƒ∞', 'alat i', 'alatga', 'alatdan',
            "g'ijduvon", 'gijduvon', "g ªijduvon", "g'ijduvon ƒ∞", "g'ijduvon i", "g'ijduvonga", "g'ijduvondan",
            'kogon', 'kogon tumani', 'kogon ƒ∞', 'kogon i', 'kogonga', 'kogondan',
            'romitan', 'romitan tumani', 'romitan ƒ∞', 'romitan i', 'romitanga', 'romitandan',
            'shofirkon', 'shofirkon ƒ∞', 'shofirkon tumani', 'shofirkon i', 'shofirkonga', 'shofirkondan',
            'qorako ªl', 'qorakol', 'qorakol ƒ∞', 'qorakol i', 'qorakolga', 'qorakoldan'
        ]
    },
    'samarqand': {
        'topic_id': 101369,
        'keywords': [
            'samarqand', 'samarkand', 'samarqand ƒ∞', 'samarqand º', 'samarqand i', "samarqand'", 'samarkand', 'samarqand', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥ga', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥dan',
            '—Å–∞–º–∞—Ä–∫–∞–Ω–¥', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥ga', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥dan',
            'urgut', 'urgut tumani', 'urgut ƒ∞', 'urgut i',
            'kattaqorgon', 'kattakurgan', 'katta-qorƒüon', 'kattaqo ªrg ªon', 'kattaqorgon i',
            "kattaqo'rg'on", "kattaqo'rg'ondan", '–∫–∞—Ç—Ç–∞–∫—É—Ä–≥–∞–Ω',
            'payariq', 'payariq tumani', 'payarik', 'payariq i',
            'ishtixon', 'ishtixon tumani', 'ishtixon ƒ∞', 'ishtixon i',
            'jomboy', 'jomboy tumani', 'jomboy ƒ∞', 'jomboy i',
            'nurabod', 'nurabod tumani', 'nurabod i', 'samarqand', 'samarkand', 'samarqand ƒ∞', 'samarqand º', 'samarqand i', "samarqand'", '—Å–∞–º–∞—Ä–∫–∞–Ω–¥', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥ga', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥dan',
            'urgut', 'urgut tumani', 'urgut ƒ∞', 'urgut i', 'urgutga', 'urgutdan',
            'kattaqorgon', 'kattakurgan', 'katta-qorƒüon', 'kattaqo ªrg ªon', 'kattaqorgon i', "kattaqo'rg'on", "kattaqo'rg'ondan", '–∫–∞—Ç—Ç–∞–∫—É—Ä–≥–∞–Ω',
            'kattaqorgonga', 'kattaqorgondan',
            'payariq', 'payariq tumani', 'payarik', 'payariq i', 'payariqqa', 'payariqdan',
            'ishtixon', 'ishtixon tumani', 'ishtixon ƒ∞', 'ishtixon i', 'ishtixonga', 'ishtixondan',
            'jomboy', 'jomboy tumani', 'jomboy ƒ∞', 'jomboy i', 'jomboyga', 'jomboydan',
            'nurabod', 'nurabod tumani', 'nurabod i', 'nurabodga', 'nuraboddan'
        ]
    },
    'qashqadaryo': {
        'topic_id': 101380,
        'keywords': [
            'qarshi', 'karshi', 'qarshi ƒ∞', 'qarshi º', 'qarshi i', "qarshi'",
            'qashqadaryo', '–∫–∞—à–∫–∞–¥–∞—Ä—ë', '–∫–∞—à–∫–∞–¥–∞—Ä—ëd–∞–Ω', '–∫–∞—à–∫–∞–¥–∞—Ä—å—ë',
            'shahrisabz', 'shahrisabz ƒ∞', 'shakhrisabz', 'shahri-sabz', 'shahrisabz i',
            'koson', 'koson tumani', 'koson ƒ∞', 'koson i',
            'guzar', 'guzar tumani', 'guzar ƒ∞', 'guzar i',
            'muborak', 'muborak tumani', 'muborak ƒ∞', 'muborak i',
            'chiroqchi', 'chiroqchi tumani', 'chiroqchi ƒ∞', 'chiroqchi i',
            'yakkabog', 'yakkabog ª', 'yakkabog ƒ∞', 'yakkabog i', 'qarshi', 'karshi', 'qarshi ƒ∞', 'qarshi º', 'qarshi i', "qarshi'", 'qarshiga', 'qarshidan',
            'qashqadaryo', '–∫–∞—à–∫–∞–¥–∞—Ä—ë', '–∫–∞—à–∫–∞–¥–∞—Ä—ëga', '–∫–∞—à–∫–∞–¥–∞—Ä—ë–¥–∞–Ω', '–∫–∞—à–∫–∞–¥–∞—Ä—å—ë', 'qashqadaryoga', 'qashqadaryodan',
            'shahrisabz', 'shahrisabz ƒ∞', 'shakhrisabz', 'shahri-sabz', 'shahrisabz i', 'shahrisabzga', 'shahrisabzdan',
            'koson', 'koson tumani', 'koson ƒ∞', 'koson i', 'kosonga', 'kosondan',
            'guzar', 'guzar tumani', 'guzar ƒ∞', 'guzar i', 'guzarga', 'guzardan',
            'muborak', 'muborak tumani', 'muborak ƒ∞', 'muborak i', 'muborakka', 'muborakdan',
            'chiroqchi', 'chiroqchi tumani', 'chiroqchi ƒ∞', 'chiroqchi i', 'chiroqchiga', 'chiroqchidan',
            'yakkabog', 'yakkabog ª', 'yakkabog ƒ∞', 'yakkabog i', 'yakkabogga', 'yakkabogdan'
        ]
    },
    'surxondaryo': {
        'topic_id': 101363,
        'keywords': [
            'termiz', 'termez', 'termiz ƒ∞', 'termiz º', 'termiz i', "termiz'",
            'denov', 'denau', 'denov ƒ∞', 'denov º', 'denov i', "denov'",
            'boysun', 'boysun tumani', 'boysun ƒ∞', 'boysun i', 'surxondaryo', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë–≥–∞', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—å–µ',
            'sherobod', 'sherobod tumani', 'sherobod ƒ∞', 'sherobod i',
            'qumqorgon', 'qumqorƒüon', 'qumqo ªrg ªon', 'qumqorgon i',
            'uzun', 'uzun tumani', 'uzun i', 'termiz', 'termez', 'termiz ƒ∞', 'termiz º', 'termiz i', "termiz'", 'termizga', 'termizdan',
            'denov', 'denau', 'denov ƒ∞', 'denov º', 'denov i', "denov'", 'denovga', 'denovdan',
            'boysun', 'boysun tumani', 'boysun ƒ∞', 'boysun i', 'boysunga', 'boysundan',
            'surxondaryo', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—ëga', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë–¥–∞–Ω', '—Å—É—Ä—Ö–æ–Ω–¥–∞—Ä—å–µ', 'surxondaryoga', 'surxondaryodan',
            'sherobod', 'sherobod tumani', 'sherobod ƒ∞', 'sherobod i', 'sherobodga', 'sheroboddan',
            'qumqorgon', 'qumqorƒüon', 'qumqo ªrg ªon', 'qumqorgon i', 'qumqorgonga', 'qumqorgondan',
            'uzun', 'uzun tumani', 'uzun i', 'uzunga', 'uzundan'
        ]
    },
    'navoiy': {
        'topic_id': 101379,
        'keywords': [
            'navoiy', 'navoi', 'navoiy ƒ∞', 'navoi ƒ∞', 'navoiy i', 'navoi i',
            '–Ω–∞–≤–æ–∏–π', '–Ω–∞–≤–æ–∏–π–≥–∞', '–Ω–∞–≤–æ–∏–π–¥–∞–Ω', '–Ω–∞–≤–æ–∏',
            'zarafshon', 'zarafshan', 'zarafshon ƒ∞', 'zarafshon i',
            'karmana', 'karmana tumani', 'karmana ƒ∞', 'karmana i',
            'nurota', 'nurota tumani', 'nurota ƒ∞', 'nurota i',
            'konimex', 'konimex tumani', 'konimex ƒ∞', 'konimex i',
            'uchquduq', 'uchquduk', 'uch-quduq', 'uchquduq i', 'navoiy', 'navoi', 'navoiy ƒ∞', 'navoi ƒ∞', 'navoiy i', 'navoi i', '–Ω–∞–≤–æ–∏–π', '–Ω–∞–≤–æ–∏–π–≥–∞', '–Ω–∞–≤–æ–∏–π–¥–∞–Ω', '–Ω–∞–≤–æ–∏',
            'navoiyga', 'navoiydan', 'navoiy viloyati', 'navoi viloyati',
            'zarafshon', 'zarafshan', 'zarafshon ƒ∞', 'zarafshon i', 'zarafshonga', 'zarafshondan',
            'karmana', 'karmana tumani', 'karmana ƒ∞', 'karmana i', 'karmanaga', 'karmanadan',
            'nurota', 'nurota tumani', 'nurota ƒ∞', 'nurota i', 'nurotaga', 'nurotadan',
            'konimex', 'konimex tumani', 'konimex ƒ∞', 'konimex i', 'konimexga', 'konimexdan',
            'uchquduq', 'uchquduk', 'uch-quduq', 'uchquduq i', 'uchquduqqa', 'uchquduqdan'
        ]
    },
    'sirdaryo': {
        'topic_id': 101378,
        'keywords': [
            'guliston', 'gulistan', 'guliston ƒ∞', 'guliston º', 'guliston i', "guliston'",
            'shirin', 'shirin tumani', 'shirin ƒ∞', 'shirin i',
            'boyovut', 'bayaut', 'boyovut tumani', 'boyovut ƒ∞', 'boyovut i',
            'sirdaryo', 'sirdaryo ƒ∞', 'sirdaryo º', 'sirdaryo i', "sirdaryo'",
            '—Å–∏—Ä–¥–∞—Ä—ë', '—Å–∏—Ä–¥–∞—Ä—ë–≥–∞', '—Å–∏—Ä–¥–∞—Ä—ë–¥–∞–Ω', '—Å—ã—Ä–¥–∞—Ä—å—è',
            'mirzaobod', 'mirzaobod tumani', 'mirzaobod i', 'guliston', 'gulistan', 'guliston ƒ∞', 'guliston º', 'guliston i', "guliston'", 'gulistonga', 'gulistondan',
            'shirin', 'shirin tumani', 'shirin ƒ∞', 'shirin i', 'shiringa', 'shirindan',
            'boyovut', 'bayaut', 'boyovut tumani', 'boyovut ƒ∞', 'boyovut i', 'boyovutga', 'boyovutdan',
            'sirdaryo', 'sirdaryo ƒ∞', 'sirdaryo º', 'sirdaryo i', "sirdaryo'", '—Å–∏—Ä–¥–∞—Ä—ë', '—Å–∏—Ä–¥–∞—Ä—ëga', '—Å–∏—Ä–¥–∞—Ä—ë–¥–∞–Ω', '—Å—ã—Ä–¥–∞—Ä—å—è',
            'mirzaobod', 'mirzaobod tumani', 'mirzaobod i', 'mirzaobodga', 'mirzaoboddan'
        ]
    },
    'jizzax': {
        'topic_id': 101377,
        'keywords': [
            'jizzax', 'jizzax ƒ∞', 'jizzax i', 'jizzakh', 'jiz-zax', '–∂–∏–∑–∑–∞—Ö', '–¥–∂–∏–∑–∞–∫',
            'gallaaral', 'gallaaral ƒ∞', 'gallaaral i', 'galla-aral', 'gallaa ºral', "galla'aral",
            'pakhtakor', 'pakhtakor ƒ∞', 'pakhtakor i', 'pakhtakor tumani',
            'zomin', 'zomin tumani', 'zomin ƒ∞', 'zomin i',
            'pishagar', 'pishagaron', 'pishagardan', 'pishagar ƒ∞', 'pishagar i', "pishagar'",
            'forish', 'forish tumani', 'forish ƒ∞', 'forish i',
            'arnasoy', 'arnasoy tumani', 'arnasoy ƒ∞', 'arnasoy i',
            'baxmal', 'baxmal tumani', 'baxmal i',
            'pishagardan', '–ø–∏—à–∞–≥–∞—Ä–¥–∞–Ω', 'pishagardan i', 'pishagardan ƒ∞', 'jizzax', 'jizzax ƒ∞', 'jizzax i', 'jizzakh', 'jiz-zax', '–∂–∏–∑–∑–∞—Ö', '–¥–∂–∏–∑–∞–∫', 'jizzaxga', 'jizzaxdan',
            'gallaaral', 'gallaaral ƒ∞', 'gallaaral i', 'galla-aral', 'gallaa ºral', "galla'aral", 'gallaaralga', 'gallaaraldan',
            'pakhtakor', 'pakhtakor ƒ∞', 'pakhtakor i', 'pakhtakor tumani', 'pakhtakorga', 'pakhtakordan',
            'zomin', 'zomin tumani', 'zomin ƒ∞', 'zomin i', 'zominga', 'zomindan',
            'pishagar', 'pishagaron', 'pishagardan', 'pishagar ƒ∞', 'pishagar i', "pishagar'", 'pishagar–≥–∞', 'pishagardan',
            'forish', 'forish tumani', 'forish ƒ∞', 'forish i', 'forishga', 'forishdan',
            'arnasoy', 'arnasoy tumani', 'arnasoy ƒ∞', 'arnasoy i', 'arnasoyga', 'arnasoydan',
            'baxmal', 'baxmal tumani', 'baxmal i', 'baxmalga', 'baxmaldan'
        ]
    },
    'xorazm': {
        'topic_id': 101660,
        'keywords': [
            'xorazm', 'xorezm', 'xorazm ƒ∞', 'xorezm ƒ∞', 'xorazm i', 'xorezm i',
            '—Ö–æ—Ä–∞–∑–º', '—Ö–æ—Ä–∞–∑–º–≥–∞', '—Ö–æ—Ä–∞–∑–º–¥–∞–Ω', '—Ö–æ—Ä–µ–∑–º',
            'xiva', 'khiva', 'xiva ƒ∞', 'xiva º', 'xiva i', "xiva'",
            # —É—Ä–≥–∞–Ω—á —É–¥–∞–ª–µ–Ω - —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ä–µ–≥–∏–æ–Ω
            'shovot', 'shavat', 'shovot ƒ∞', 'shovot i', "shovot'", 'shovot º',
            'yangiariq', 'yangiariq tumani', 'yangiariq ƒ∞', 'yangiariq i',
            'bog ªot', 'bogot', 'bog ªot tumani', 'bog ªot ƒ∞', 'bog ªot i',
            'xazarasp', 'hazarasp', 'xazarasp tumani', 'xazarasp i',
            'gurlan', 'gurlan tumani', 'gurlan ƒ∞', 'gurlan i',
            'qoshkopir', 'koshkupir', 'qoshkopir tumani', 'qoshkopir i',
            'tuproqqala', 'tuprak kala', 'tuproqqala tumani', 'tuproqqala i',
            'pitnak', 'pitnak shaharcha', 'pitnak posyolok',
            'khanka', 'xanka', 'khanka shaharcha',
            'dashoguz', 'dashoguz yuli', 'urganch-dashoguz', 'xorazm', 'xorezm', 'xorazm ƒ∞', 'xorezm ƒ∞', 'xorazm i', 'xorezm i', '—Ö–æ—Ä–∞–∑–º', '—Ö–æ—Ä–∞–∑–ºga', '—Ö–æ—Ä–∞–∑–ºdan', '—Ö–æ—Ä–µ–∑–º',
            'xiva', 'khiva', 'xiva ƒ∞', 'xiva º', 'xiva i', "xiva'", 'xivaga', 'xivadan',
            'shovot', 'shavat', 'shovot ƒ∞', 'shovot i', "shovot'", 'shovot º', 'shovotga', 'shovotdan',
            'yangiariq', 'yangiariq tumani', 'yangiariq ƒ∞', 'yangiariq i', 'yangiariqqa', 'yangiariqdan',
            'bog ªot', 'bogot', 'bog ªot tumani', 'bog ªot ƒ∞', 'bog ªot i', 'bog ªotga', 'bog ªotdan',
            'xazarasp', 'hazarasp', 'xazarasp tumani', 'xazarasp i', 'xazaraspga', 'xazaraspdan',
            'gurlan', 'gurlan tumani', 'gurlan ƒ∞', 'gurlan i', 'gurlanga', 'gurlandan',
            'qoshkopir', 'koshkupir', 'qoshkopir tumani', 'qoshkopir i', 'qoshkopirga', 'qoshkopirdan',
            'tuproqqala', 'tuprak kala', 'tuproqqala tumani', 'tuproqqala i', 'tuproqqalaga', 'tuproqqaladan',
            'pitnak', 'pitnak shaharcha', 'pitnak posyolok', 'pitnakka', 'pitnakdan',
            'khanka', 'xanka', 'khanka shaharcha', 'khankaga', 'khankadan',
            'dashoguz', 'dashoguz yuli', 'urganch-dashoguz', 'dashoguzga', 'dashoguzdan'
        ]
    },
    'urganch': {
        'topic_id': 101375,
        'keywords': [
            'urganch', 'urgench', 'urganch ƒ∞', 'urganch º', 'urganch i', "urganch'",
            '—É—Ä–≥–µ–Ω—á', 'urgench ƒ∞', 'urgench i', 'urganchga', '—É—Ä–≥–µ–Ω—á–≥–∞',
            'urgenchdan', 'urganchdan', '—É—Ä–≥–µ–Ω—á–¥–∞–Ω', 'urgench city', 'urganch shahar', 'urganch', 'urgench', 'urganch ƒ∞', 'urganch º', 'urganch i', "urganch'", '—É—Ä–≥–µ–Ω—á', 'urgench ƒ∞', 'urgench i',
            'urganchga', '—É—Ä–≥–µ–Ω—á–≥–∞', 'urgenchdan', 'urganchdan', '—É—Ä–≥–µ–Ω—á–¥–∞–Ω', 'urgench city', 'urganch shahar'
        ]
    },
    'nukus': {
        'topic_id': 101376,
        'keywords': [
            'nukus', 'nukus ƒ∞', 'nukus º', 'nukus i', "nukus'", 'no ªkis', 'nokis',
            'kegeyli', 'kegeyli tumani', 'kegeyli ƒ∞', 'kegeyli i',
            'muynoq', 'muynaq', 'muynoq ƒ∞', 'muynoq i',
            'takhiatash', 'takhiatash tumani', 'takhiatash ƒ∞', 'takhiatash i', 'nukus', 'nukus ƒ∞', 'nukus º', 'nukus i', "nukus'", 'no ªkis', 'nokis', 'nukusga', 'nukusdan',
            'kegeyli', 'kegeyli tumani', 'kegeyli ƒ∞', 'kegeyli i', 'kegeyliga', 'kegeylidan',
            'muynoq', 'muynaq', 'muynoq ƒ∞', 'muynoq i', 'muynoqqa', 'muynoqdan',
            'takhiatash', 'takhiatash tumani', 'takhiatash ƒ∞', 'takhiatash i', 'takhiatashga', 'takhiatashdan'
        ]
    },
    'qoraqalpoq': {
        'topic_id': 101381,
        'keywords': [
            'qoraqalpoq', 'qaraqalpaqstan', 'qoraqalpoq ƒ∞', 'qaraqalpaq-stan', 'qoraqalpoq i',
            'qorakalpoq', 'karakalpakstan', 'qorakalpoq ƒ∞', 'qorakalpoq i',
            'turtkul', 'turtkul ƒ∞', 'turtkul º', 'turtkul tumani', 'turtkul i', "turtkul'",
            'khojeli', 'xojeli', 'hodjeyli', 'xojeli ƒ∞', 'xojeli i', 'khojeli º', "xojeli'",
            'amudarya', 'amudaryo', 'amudarya tumani', 'amudarya ƒ∞', 'amudarya i',
            'chimboy', 'chimboy tumani', 'chimboy ƒ∞', 'chimboy i', 'qoraqalpoq', 'qaraqalpaqstan', 'qoraqalpoq ƒ∞', 'qaraqalpaq-stan', 'qoraqalpoq i', 'qorakalpoq', 'karakalpakstan',
            'turtkul', 'turtkul ƒ∞', 'turtkul º', 'turtkul tumani', 'turtkul i', "turtkul'", 'turtkulga', 'turtkuldan',
            'khojeli', 'xojeli', 'hodjeyli', 'xojeli ƒ∞', 'xojeli i', 'khojeli º', "xojeli'", 'xojeliga', 'xojelidan',
            'amudarya', 'amudaryo', 'amudarya tumani', 'amudarya ƒ∞', 'amudarya i', 'amudaryaga', 'amudaryadan',
            'chimboy', 'chimboy tumani', 'chimboy ƒ∞', 'chimboy i', 'chimboyga', 'chimboydan'
        ]
    },
    'fura_bozor': {
        'topic_id': 101361,
        'keywords': [
            'fura bazar', 'fura bozor', 'fura bozori', '—Ñ—É—Ä–∞ –±–æ–∑–æ—Ä', 'bozor fura', 'fura bazar', 'fura bozor', 'fura bozori', '—Ñ—É—Ä–∞ –±–æ–∑–æ—Ä', 'bozor fura', 'fura bozoriga', 'fura bozordan'
        ]
    },
    'reklama': {
        'topic_id': 101360,
        'keywords': [
            'reklama', 'reklama post', '—Ä–µ–∫–ª–∞–º–∞', 'reklama berish', 'reklama joylashtirish', 'reklama', 'reklama post', '—Ä–µ–∫–ª–∞–º–∞', 'reklama berish', 'reklama joylashtirish', 'reklamaga', 'reklamadan'
        ]
    },
    'yangiliklar': {
        'topic_id': 101359,
        'keywords': [
            'yangilik', 'yangiliklar', '–Ω–æ–≤–æ—Å—Ç–∏', 'news', 'xabar', "so'ngi yangiliklar", 'yangilik', 'yangiliklar', '–Ω–æ–≤–æ—Å—Ç–∏', 'news', 'xabar', "so'ngi yangiliklar", 'yangiliklarga', 'yangiliklardan'
        ]
    },
    'xalqaro': {
        'topic_id': 101367,
        'keywords': [
            # –†–æ—Å—Å–∏—è
            'russia', 'rosiya', 'russia ƒ∞', 'rosiya ƒ∞', 'russia i', 'rosiya i',
            'moskva', 'moscow', 'moskva ƒ∞', 'moskva º', 'moskva i', "moskva'",
            '–º–æ—Å–∫–≤–∞', '–º–æ—Å–∫–æ–≤—Å–∫–∞—è', '–º–æ—Å–∫–≤–∞ –æ–±–ª', '–º–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
            'spb', 'sankt-peterburg', 'piter', 'saint-petersburg', 'spb ƒ∞', 'spb i',
            '—Å–ø–±', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–∏—Ç–µ—Ä', '–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥',
            'krasnodar', 'krasnodar ƒ∞', 'krasnodar i', 'voronej', '–≤–æ—Ä–æ–Ω–µ–∂', 'qazoq', '–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'irkutsk', '–∏—Ä–∫—É—Ç—Å–∫',
            'rostov', 'rostov-na-donu', 'rostov ƒ∞', 'rostov i',
            'volgograd', 'volgograd ƒ∞', 'volgograd i',
            'kazan', 'kazan ƒ∞', 'kazan i',
            'nizhny novgorod', 'nizhniy novgorod', 'nizhny novgorod ƒ∞', 'nizhny i',
            'samara', 'samara ƒ∞', 'samara i',
            'ufa', 'ufa ƒ∞', 'ufa i',
            'perm', 'perm ƒ∞', 'perm i',
            'krasnoyarsk', 'krasnoyarsk ƒ∞', 'krasnoyarsk i',
            'novosibirsk', 'novosibirsk ƒ∞', 'novosibirsk i',
            '–±–∞—Ä–Ω–∞—É–ª', 'barnaul', 'barnaulskaya',
            'yekaterinburg', 'ekaterinburg', 'yekaterinburg ƒ∞', 'yekaterinburg i',
            'chelyabinsk', 'chelyabinsk ƒ∞', 'chelyabinsk i',
            'omsk', 'omsk ƒ∞', 'omsk i',
            'voronezh', 'voronezh ƒ∞', 'voronezh i',
            'sochi', 'sochi ƒ∞', 'sochi i',
            'tolyatti', 'tolyatti ƒ∞', 'tolyatti i',
            'belgorod', 'belgorod ƒ∞', 'belgorod i',
            'tula', 'tula ƒ∞', 'tula i',
            'yaroslavl', 'yaroslavl ƒ∞', 'yaroslavl i',
            'tver', 'tver ƒ∞', 'tver i',
            'ivanovo', 'ivanovo ƒ∞', 'ivanovo i',
            'vladivostok', 'vladivostok ƒ∞', 'vladivostok i',
            'irkutsk', 'irkutsk ƒ∞', 'irkutsk i',
            'khabarovsk', 'khabarovsk ƒ∞', 'khabarovsk i',

            # –£–∫—Ä–∞–∏–Ω–∞
            'ukraine', 'ukraina', 'ukraine ƒ∞', 'ukraina ƒ∞', 'ukraine i', 'ukraina i',
            'kiev', 'kyiv', 'kiev ƒ∞', 'kyiv ƒ∞', 'kiev i', 'kyiv i',
            'kharkiv', 'kharkov', 'kharkiv ƒ∞', 'kharkiv i',
            'odessa', 'odesa', 'odessa ƒ∞', 'odessa i',
            'dnipro', 'dnepr', 'dnipro ƒ∞', 'dnipro i',
            'lviv', 'lviv ƒ∞', 'lviv i',

            # –ë–µ–ª–∞—Ä—É—Å—å
            'belarus', 'belarus ƒ∞', 'belarus i',
            'minsk', 'minsk ƒ∞', 'minsk i',
            'brest', 'brest ƒ∞', 'brest i',
            'grodno', 'grodno ƒ∞', 'grodno i',
            'gomel', 'gomel ƒ∞', 'gomel i',

            # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
            'kazakhstan', 'qazaqstan', 'kazakhstan ƒ∞', 'qazaq-stan', 'kazakhstan i',
            'almaty', 'alma-ata', 'almaty ƒ∞', 'almaty i',
            'astana', 'nur-sultan', 'astana ƒ∞', 'astana i',
            'shymkent', 'shymkent ƒ∞', 'shymkent i',
            'karaganda', 'karaganda ƒ∞', 'karaganda i',
            'aktobe', 'aktobe ƒ∞', 'aktobe i',
            'pavlodar', 'pavlodar ƒ∞', 'pavlodar i',

            # –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω
            'kyrgyzstan', 'kirgiziya', 'kyrgyzstan ƒ∞', 'kyrgyzstan i',
            'bishkek', 'bishkek ƒ∞', 'bishkek i',
            'osh', 'osh ƒ∞', 'osh i',

            # –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω
            'tajikistan', 'tojikiston', 'tajikistan ƒ∞', 'tajikistan i',
            'dushanbe', 'dushanbe ƒ∞', 'dushanbe i',
            'khujand', 'khujand ƒ∞', 'khujand i',

            # –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω
            'turkmenistan', 'turkmenistan ƒ∞', 'turkmenistan i',
            'ashgabat', 'ashgabat ƒ∞', 'ashgabat i',
            'turkmenbashy', 'turkmenbashy ƒ∞', 'turkmenbashy i',

            # –¢—É—Ä—Ü–∏—è
            'turkey', 'turkiya', 'turkey ƒ∞', 'turkiya ƒ∞', 'turkey i', 'turkiya i',
            'istanbul', 'stambul', 'istanbul ƒ∞', 'stambul ƒ∞', 'istanbul i', 'stambul i',
            'ankara', 'ankara ƒ∞', 'ankara i',
            'izmir', 'izmir ƒ∞', 'izmir i',
            'antalya', 'antalya ƒ∞', 'antalya i',

            # –î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã
            'iran', 'iran ƒ∞', 'iran i',
            'afganistan', 'afghanistan', 'afghanistan ƒ∞', 'afghanistan i',
            'china', 'xitoy', 'china ƒ∞', 'xitoy ƒ∞', 'china i', 'xitoy i',
            'india', 'xindiston', 'india ƒ∞', 'xindiston ƒ∞', 'india i', 'xindiston i',
            'poland', 'polsha', 'poland ƒ∞', 'polsha ƒ∞', 'poland i', 'polsha i',
            'germany', 'germaniya', 'germany ƒ∞', 'germaniya ƒ∞', 'germany i', 'germaniya i',
            'europe', 'europa', 'europe ƒ∞', 'europa ƒ∞', 'europe i', 'europa i',

            # –û–±—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
            'international', 'xalqaro', 'international ƒ∞', 'xalqaro ƒ∞', 'international i', 'xalqaro i',
            'cis', 'mda', 'cis ƒ∞', 'mda ƒ∞', 'cis i', 'mda i', 'tomsk shahardan', 'tomsk', 'tomskdan', 'tomskga',
            'import', 'export', 'import ƒ∞', 'export ƒ∞', 'import i', 'export i', 'russia', 'rosiya', 'russia ƒ∞', 'rosiya ƒ∞', 'russia i', 'rosiya i',
            'moskva', 'moscow', 'moskva ƒ∞', 'moskva º', 'moskva i', "moskva'", '–º–æ—Å–∫–≤–∞', '–º–æ—Å–∫–≤–∞ga', '–º–æ—Å–∫–≤–∞dan',
            'spb', 'sankt-peterburg', 'piter', 'saint-petersburg', 'spb ƒ∞', 'spb i', '—Å–ø–±', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–∏—Ç–µ—Ä', '–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥',
            'krasnodar', 'krasnodar ƒ∞', 'krasnodar i', 'voronej', '–≤–æ—Ä–æ–Ω–µ–∂', 'krasnodarga', 'krasnadardan',
            'rostov', 'rostov-na-donu', 'rostov ƒ∞', 'rostov i', 'rostovga', 'rostovdan', 'tomsk', 'tomsk shahardan', 'tomskdan', 'tomskga',
            'volgograd', 'volgograd ƒ∞', 'volgograd i', 'volgogradga', 'volgograddan',
            'kazan', 'kazan ƒ∞', 'kazan i', 'kazanga', 'kazandan',
            'nizhny novgorod', 'nizhniy novgorod', 'nizhny novgorod ƒ∞', 'nizhny i', 'nizhnyga', 'nizhnydan',
            'samara', 'samara ƒ∞', 'samara i', 'samaranga', 'samaradan',
            'ufa', 'ufa ƒ∞', 'ufa i', 'ufaga', 'ufadan',
            'perm', 'perm ƒ∞', 'perm i', 'permga', 'permdan',
            'krasnoyarsk', 'krasnoyarsk ƒ∞', 'krasnoyarsk i', 'krasnoyarskga', 'krasnoyarskdan',
            'novosibirsk', 'novosibirsk ƒ∞', 'novosibirsk i', 'novosibirskga', 'novosibirskdan',
            'yekaterinburg', 'ekaterinburg', 'yekaterinburg ƒ∞', 'yekaterinburg i', 'yekaterinburgga', 'yekaterinburgdan',
            'chelyabinsk', 'chelyabinsk ƒ∞', 'chelyabinsk i', 'chelyabinskga', 'chelyabinskdan',
            'omsk', 'omsk ƒ∞', 'omsk i', 'omskga', 'omskdan',
            'voronezh', 'voronezh ƒ∞', 'voronezh i', 'voronezhga', 'voronezhdan',
            'sochi', 'sochi ƒ∞', 'sochi i', 'sochiga', 'sochidan',
            'tolyatti', 'tolyatti ƒ∞', 'tolyatti i', 'tolyattiga', 'tolyattidan',
            'belgorod', 'belgorod ƒ∞', 'belgorod i', 'belgorodga', 'belgroddan',

            # –£–∫—Ä–∞–∏–Ω–∞
            'ukraine', 'ukraina', 'ukraine ƒ∞', 'ukraina ƒ∞', 'ukraine i', 'ukraina i',
            'kiev', 'kyiv', 'kiev ƒ∞', 'kyiv ƒ∞', 'kiev i', 'kyiv i', 'kievga', 'kievdan',
            'kharkiv', 'kharkov', 'kharkiv ƒ∞', 'kharkiv i', 'kharkivga', 'kharkivdan',
            'odessa', 'odesa', 'odessa ƒ∞', 'odessa i', 'odessaga', 'odessadan',
            'dnipro', 'dnepr', 'dnipro ƒ∞', 'dnipro i', 'dniproga', 'dniprodan',
            'lviv', 'lviv ƒ∞', 'lviv i', 'lvivga', 'lvivdan',

            # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
            'kazakhstan', 'qazaqstan', 'kazakhstan ƒ∞', 'qazaq-stan', 'kazakhstan i', 'qazaqstan i',
            'almaty', 'alma-ata', 'almaty ƒ∞', 'almaty i', 'almatyga', 'almatydan',
            'astana', 'nur-sultan', 'astana ƒ∞', 'astana i', 'astanaga', 'astanadan',
            'shymkent', 'shymkent ƒ∞', 'shymkent i', 'shymkentga', 'shymkentdan',
            'karaganda', 'karaganda ƒ∞', 'karaganda i', 'karagandaga', 'karagandadan',
            'aktobe', 'aktobe ƒ∞', 'aktobe i', 'aktobega', 'aktobedan',
            'pavlodar', 'pavlodar ƒ∞', 'pavlodar i', 'pavlodarga', 'pavlodardan',

            # –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω
            'kyrgyzstan', 'kirgiziya', 'kyrgyzstan ƒ∞', 'kyrgyzstan i',
            'bishkek', 'bishkek ƒ∞', 'bishkek i', 'bishkekke', 'bishkekdan',
            'osh', 'osh ƒ∞', 'osh i', 'oshga', 'oshdan',

            # –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω
            'tajikistan', 'tojikiston', 'tajikistan ƒ∞', 'tajikistan i',
            'dushanbe', 'dushanbe ƒ∞', 'dushanbe i', 'dushanbega', 'dushanbedan',
            'khujand', 'khujand ƒ∞', 'khujand i', 'khujandga', 'khujanddan',

            # –¢—É—Ä—Ü–∏—è
            'turkey', 'turkiya', 'turkey ƒ∞', 'turkiya ƒ∞', 'turkey i', 'turkiya i',
            'istanbul', 'stambul', 'istanbul ƒ∞', 'stambul ƒ∞', 'istanbul i', 'stambul i', 'istanbula', 'istanbuldan',
            'ankara', 'ankara ƒ∞', 'ankara i', 'ankaraga', 'ankaradan',
            'izmir', 'izmir ƒ∞', 'izmir i', 'izmirga', 'izmirndan',
            'antalya', 'antalya ƒ∞', 'antalya i', 'antalyaga', 'antalyadan',

            # –û–±—â–∏–µ
            'international', 'xalqaro', 'import', 'export', 'xalqaro yuk', 'importga', 'exportga'
        ]
    }
}

# ========== –†—è–¥–æ–º —Å REGION_KEYWORDS –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ==========

PHONE_REGEX = re.compile(r'[\+]?[\d\s\-\(\)]{9,18}')
ROUTE_REGEX = re.compile(r'(?:^\s*)?(.+?)(?:\s*>\s*|\s*‚Äî\s*|\s*-\s*|\s*[-‚Äî>‚Üí]+\s*|\s+)(.+?)(?:\s|$)', re.IGNORECASE | re.MULTILINE)

# ========== –§—É–Ω–∫—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ ==========

def normalize_text(text):
    """
    –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    - –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    - —É–±–∏—Ä–∞–µ—Ç —ç–º–æ–¥–∑–∏
    - –∑–∞–º–µ–Ω—è–µ—Ç ƒ∞‚Üíi,  º‚Üí', —ë‚Üíe
    """
    if not text:
        return ""
    
    # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏
    text = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', text)
    
    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è Unicode (–¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    text = unicodedata.normalize('NFD', text)
    
    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    text = text.lower()
    
    # –ó–∞–º–µ–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    replacements = {
        ' º': "'",   # –ø—Ä–∞–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –æ–±—ã—á–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ
        ' ª': "'",   # –ª–µ–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –æ–±—ã—á–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ
        '—ë': 'e',   # —ë ‚Üí e
        '—ñ': 'i',   # —ñ ‚Üí i
        'ƒ±': 'i',   # ƒ± ‚Üí i (—Ç—É—Ä–µ—Ü–∫–∏–π)
        'ƒ∞': 'i',   # ƒ∞ ‚Üí i (—Ç—É—Ä–µ—Ü–∫–∏–π)
        'ƒü': 'g',   # ƒü ‚Üí g
        '≈ü': 's',   # ≈ü ‚Üí s
        '√ß': 'c',   # √ß ‚Üí c
        '√º': 'u',   # √º ‚Üí u
        '√∂': 'o',   # √∂ ‚Üí o
    }
    
    for old, new in replacements.items():
        text = text.replace(old, new)
    
    return text

def extract_phone_number(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    match = PHONE_REGEX.search(text)
    return match.group().strip() if match else '–ù–æ–º–µ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω'

def extract_route_and_cargo(text):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ—Ç–∫—É–¥–∞/–∫—É–¥–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (from_city, to_city, cargo_text)
    """
    lines = [re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', line).strip()
             for line in text.strip().split('\n') if line.strip()]

    for line in lines:
        clean_line = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', line)

        # 1. ROUTE_REGEX (–æ—Å–Ω–æ–≤–Ω–æ–π)
        route_match = ROUTE_REGEX.search(clean_line)
        if route_match:
            from_city = route_match.group(1).strip()
            to_city = route_match.group(2).strip()
            cargo_text = text.replace(line, '').strip()
            return from_city, to_city, cargo_text

        # 2. Emoji-–ø–∞—Ç—Ç–µ—Ä–Ω—ã
        emoji_patterns = [
            r'üá∫üáø\s*(\w+)\s*üá∫üáø\s*(\w+)',  # üá∫üáø Qoqon üá∫üáø Samarqand
            r'üá∑üá∫\s*([^-]+?)\s*-\s*üá∫üáø\s*([^\n\r]+)',  # üá∑üá∫–ú–æ—Å–∫–≤–∞ - üá∫üáø–¢–∞—à–∫–µ–Ω—Ç
            r'(\w+)\s*üá∫üáø\s*(\w+)',         # Qoqon üá∫üáø Samarqand
            r'(\w+)\s*[-‚Äì‚Üí>>>\-\-\-\-]+\s*(\w+)',  # Tosh----Fargona
            r'(\w+)\s*>\s*(\w+)',            # Tosh>Fargona
            r'(\w+)\s+(\w+)',                # Tosh Fargona
        ]
        for pattern in emoji_patterns:
            match = re.search(pattern, clean_line)
            if match and len(match.group(1)) > 2 and len(match.group(2)) > 2:
                from_city = match.group(1).strip()
                to_city = match.group(2).strip()
                cargo_text = text.replace(line, '').strip()
                return from_city, to_city, cargo_text

    # 3. Fallback: –ø–µ—Ä–≤–∞—è –∏ –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞
    if len(lines) >= 2 and len(lines[0]) > 2 and len(lines[1]) > 2:
        return lines[0], lines[1], '\n'.join(lines[2:])

    # 4. Fallback: —Å–ª–æ–∂–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã "–¥–∞–Ω...–≥–∞"
    first_line = lines[0] if lines else text
    clean_first = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', first_line)
    complex_patterns = [
        r'([–ê-–Ø–∞-—è\w\.]+)–¥–∞–Ω[\s\-\-\-\-]+([–ê-–Ø–∞-—è\w]+)–≥–∞',
        r'([–ê-–Ø–∞-—è\w\.]+)–¥–∞–Ω[\s\n]+([–ê-–Ø–∞-—è\w]+)–≥–∞',
        r'([–ê-–Ø–∞-—è\w\.]+)–¥–∞–Ω[\s\n]+([–ê-–Ø–∞-—è\w]+)',
    ]
    for pattern in complex_patterns:
        match = re.search(pattern, clean_first, re.IGNORECASE)
        if match:
            return match.group(1).strip(), match.group(2).strip(), text

    # 5. –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback
    parts = re.split(r'[\s\-\>\‚Üí\‚Äî\-\-\-\-]+', clean_first, 2)
    if len(parts) >= 2 and len(parts[0]) > 2 and len(parts[1]) > 2:
        return parts[0].strip(), parts[1].strip(), text

    return None, None, text

def format_cargo_text(cargo_text):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞, —Ä–∞–∑–¥–µ–ª—è—è –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (transport, description)
    """
    if not cargo_text:
        return "–ì—Ä—É–∑", "–î–µ—Ç–∞–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
    
    # –°–ø–∏—Å–æ–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    transport_keywords = [
        '—Ñ—É—Ä–∞', 'fura', '–∫–∞–º–∞–∑', 'kamaz', '–≥–∞–∑–µ–ª—å', 'gazel', '–ø—Ä–∏—Ü–µ–ø', 'pritsep',
        '–º–∞—à–∏–Ω–∞', 'mashina', '–∞–≤—Ç–æ–º–æ–±–∏–ª—å', 'avtomobil', '–≥—Ä—É–∑–æ–≤–∏–∫', 'gruzovik',
        '—Ä–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä', 'refrigerator', 'tent', '—Ç–µ–Ω—Ç', '–æ—Ç–∫—Ä—ã—Ç—ã–π', 'ochiq'
    ]
    
    cargo_lines = cargo_text.strip().split('\n')
    transport = "–ì—Ä—É–∑"
    description = "–î–µ—Ç–∞–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
    
    for line in cargo_lines:
        line_lower = line.lower()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
        for keyword in transport_keywords:
            if keyword in line_lower:
                transport = line.strip()
                break
        else:
            # –ï—Å–ª–∏ –≤ —Å—Ç—Ä–æ–∫–µ –Ω–µ—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞, —Å—á–∏—Ç–∞–µ–º –µ—ë –æ–ø–∏—Å–∞–Ω–∏–µ–º
            if line.strip() and '–Ω–æ–º–µ—Ä' not in line_lower and '+' not in line:
                description = line.strip()
    
    return transport, description

def send_message(chat_id, text, message_thread_id=None, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    try:
        payload = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        
        if message_thread_id:
            payload['message_thread_id'] = message_thread_id
            
        if reply_markup:
            payload['reply_markup'] = reply_markup
            
        response = requests.post(f"{API_URL}/sendMessage", json=payload, timeout=10)
        return response.json()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

def author_button(user):
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ—Ä–µ"""
    name = user.get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
    username = user.get('username', '')
    
    if username:
        button_text = f"üë§ @{username}"
        url = f"https://t.me/{username}"
    else:
        button_text = f"üë§ {name}"
        url = f"tg://user?id={user.get('id', '')}"
    
    return {
        "inline_keyboard": [[{
            "text": button_text,
            "url": url
        }]]
    }

def handle_admin_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    text = message.get('text', '').strip()
    
    if text == '/stats':
        stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:
üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}
‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {datetime.now() - bot_start_time}
üîÑ –°—Ç–∞—Ç—É—Å: {bot_status}
üåê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%H:%M:%S')}"""
        
        send_message(ADMIN_USER_ID, stats_text)

def ask_admin_topic(message, from_city, to_city):
    """–°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∞, –≤ –∫–∞–∫–æ–π —Ç–æ–ø–∏–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    text = message.get('text', '')
    user = message.get('from', {})
    user_data = f"{user.get('id')}:{user.get('first_name', '')}:{user.get('username', '')}"
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–≤–æ–µ—Ç–æ—á–∏—è –¥–ª—è callback_data
    safe_data = f"{text}|||{user_data}".replace(":", "%3A")
    kb = [
        [{"text": k.upper(), "callback_data": f"route:{k}:{safe_data}"}]
        for k in REGION_KEYWORDS
    ]
    kb.append([{"text": "‚ùå –û—Ç–º–µ–Ω–∞", "callback_data": "route:cancel"}])
    requests.post(f"{API_URL}/sendMessage", json={
        "chat_id": ADMIN_USER_ID,
        "text": f"‚ö†Ô∏è –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:\n{from_city} ‚Üí {to_city}",
        "reply_markup": {"inline_keyboard": kb}
    }, timeout=10)

def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API"""
    try:
        requests.post(f"{API_URL}/sendMessage", json={
            "chat_id": chat_id,
            "text": text
        }, timeout=10)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def handle_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    text = message.get('text', '').strip()
    chat_id = message['chat']['id']
    user_id = message['from']['id']
    
    if text == '/start':
        response = "ü§ñ YukMarkazi New Bot –∞–∫—Ç–∏–≤–µ–Ω!\n\nüìç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥—Ä—É–∑–∞—Ö –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–æ–ø–∏–∫–∏.\n\nüîÑ –†–∞–±–æ—Ç–∞—é 24/7 –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ."
        send_telegram_message(chat_id, response)
        
    elif text == '/status':
        if user_id == ADMIN_USER_ID:
            # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
            response = f"ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n‚úÖ –ê–∫—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç\nüìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}\nüïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}\nüåê –°–µ—Ä–≤–µ—Ä: Render\nüíö UptimeRobot –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω"
        else:
            # –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤—Å–µ—Ö
            response = f"ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω\nüïê {datetime.now().strftime('%H:%M:%S')}"
        send_telegram_message(chat_id, response)

def process_message(message):
    global last_update_id, message_count
    try:
        text = message.get('text', '')
        chat_id = message['chat']['id']
        user_id = message['from']['id']
        
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ {chat_id}: {text[:50]}...")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
        if text.startswith('/'):
            handle_command(message)
            message_count += 1
            return
            
        if chat_id == ADMIN_USER_ID:
            handle_admin_command(message)
            message_count += 1
            return
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã
        if chat_id != MAIN_GROUP_ID:
            logger.info(f"üö´ –ü—Ä–æ–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã {MAIN_GROUP_ID}")
            return
            
        logger.info(f"üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã")
        message_count += 1
        
        from_city, to_city, cargo_text = extract_route_and_cargo(text)
        if not from_city or not to_city:
            return

        def find_region(txt):
            txt_norm = normalize_text(txt)
            words = re.findall(r"\b\w+\b", txt_norm)
            for key, data in REGION_KEYWORDS.items():
                for kw in data['keywords']:
                    kw_norm = normalize_text(kw)
                    if kw_norm in words or (len(kw_norm) > 4 and kw_norm in txt_norm):
                        return key
            return None

        from_reg = find_region(from_city)
        print(f"[DEBUG] from_city='{from_city}' | normalized='{normalize_text(from_city)}' | from_reg={from_reg}")
        if from_reg is None:
            ask_admin_topic(message, from_city, to_city)
            return
        if from_reg is None:
            ask_admin_topic(message, from_city, to_city)
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ø–∏–∫ –ø–æ –º–µ—Å—Ç—É –û–¢–ü–†–ê–í–ö–ò
        topic_key = 'xalqaro' if 'xalqaro' == from_reg else from_reg
        topic_id = REGION_KEYWORDS[topic_key]['topic_id']

        sender = message.get('from', {})
        phone = extract_phone_number(text)
        transport, desc = format_cargo_text(cargo_text)

        msg = f"""{from_city.upper()} - {to_city.upper()}
üöõ {transport}
üí¨ {desc}
‚òéÔ∏è {phone}
#{to_city.upper()}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–î—Ä—É–≥–∏–µ –≥—Ä—É–∑—ã: @logistika_marka"""

        send_message(MAIN_GROUP_ID, msg, topic_id,
                     reply_markup=author_button(sender))
    except Exception:
        logging.exception("process_message error")

def handle_callback(update):
    try:
        query = update['callback_query']
        data = query['data']
        user_id = query['from']['id']
        if user_id != ADMIN_USER_ID:
            return
        if not data.startswith("route:"):
            return

        parts = data.split(":", 2)
        action = parts[1]
        payload = parts[2].replace("%3A", ":")
        original_text, user_info = payload.split("|||", 1)
        uid, name, username = user_info.split(":", 2)

        if action == "cancel":
            requests.post(f"{API_URL}/answerCallbackQuery", json={
                "callback_query_id": query['id'],
                "text": "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
            })
            return

        from_city, to_city, cargo_text = extract_route_and_cargo(original_text)
        if not from_city or not to_city:
            requests.post(f"{API_URL}/answerCallbackQuery", json={
                "callback_query_id": query['id'],
                "text": "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç"
            })
            return

        topic_key = action
        topic_id = REGION_KEYWORDS[topic_key]['topic_id']

        phone = extract_phone_number(original_text)
        cargo_clean = re.sub(PHONE_REGEX, '', original_text).strip()
        cargo_clean = re.sub(ROUTE_REGEX, '', cargo_clean).strip()
        transport, desc = format_cargo_text(cargo_clean)

        msg = f"""{from_city.upper()} - {to_city.upper()}
üöõ {transport}
üí¨ {desc}
‚òéÔ∏è {phone}
#{to_city.upper()}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–î—Ä—É–≥–∏–µ –≥—Ä—É–∑—ã: @logistika_marka"""

        send_message(MAIN_GROUP_ID, msg, topic_id,
                     reply_markup=author_button({
                         "id": uid,
                         "first_name": name,
                         "username": username
                     }))

        requests.post(f"{API_URL}/answerCallbackQuery", json={
            "callback_query_id": query['id'],
            "text": f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫ {topic_key}"
        })
    except Exception:
        logging.exception("callback error")

def get_updates():
    global last_update_id, stop_polling
    if not BOT_TOKEN or stop_polling:
        return []
    
    # –ê–í–¢–û–ù–û–ú–ù–û–ï –£–õ–£–ß–®–ï–ù–ò–ï: Retry –ª–æ–≥–∏–∫–∞
    for attempt in range(3):
        try:
            params = {'offset': last_update_id + 1, 'timeout': 30,
                      'allowed_updates': ['message', 'callback_query']}
            resp = requests.get(f"{API_URL}/getUpdates", params=params, timeout=35)
            if resp.status_code == 401:
                stop_polling = True
                return []
            data = resp.json()
            return data.get('result', []) if data.get('ok') else []
        except requests.exceptions.Timeout:
            logger.warning(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3: –¢–∞–π–º–∞—É—Ç getUpdates")
            time.sleep(2)
        except Exception as e:
            logger.error(f"üö® –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3: {e}")
            if attempt == 2:
                return []
            time.sleep(5)
    return []

def bot_main_loop():
    global last_update_id, bot_status, message_count, stop_polling
    logger.info("ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω")
    
    # –ê–í–¢–û–ù–û–ú–ù–û–ï –£–õ–£–ß–®–ï–ù–ò–ï: Heartbeat
    last_heartbeat = time.time()
    max_errors = 5
    consecutive_errors = 0
    restart_count = 0
    
    while not stop_polling:
        try:
            # Heartbeat –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
            if time.time() - last_heartbeat > 60:
                logger.info("üíì Bot heartbeat - ready for messages")
                last_heartbeat = time.time()
            
            updates = get_updates()
            if not updates:
                time.sleep(1)
                continue
                
            for update in updates:
                try:
                    update_id = update.get('update_id', 0)
                    
                    if 'message' in update:
                        msg = update['message']
                        chat_id = msg.get('chat', {}).get('id')
                        text = msg.get('text', '')
                        thread_id = msg.get('message_thread_id')
                        
                        logger.info(f"üîç Update {update_id}: —á–∞—Ç {chat_id}, —Ç–µ–∫—Å—Ç: {text[:30]}...")
                        
                        process_message(msg)
                        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {message_count} ‚Üí —Ç–æ–ø–∏–∫ {thread_id}")
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                        globals()['last_activity'] = datetime.now()
                        
                    if 'callback_query' in update:
                        handle_callback(update)
                        
                    last_update_id = max(last_update_id, update_id)
                    consecutive_errors = 0  # –°–±—Ä–æ—Å –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    
                except Exception as e:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ update: {e}")
                    logger.error(f"Update —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {update}")
                    
        except Exception as e:
            consecutive_errors += 1
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ü–∏–∫–ª–∞ #{consecutive_errors}: {e}")
            
            if consecutive_errors >= max_errors:
                logger.critical("üÜò –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ - –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫")
                restart_count += 1
                bot_status = "–ü–ï–†–ï–ó–ê–ü–£–°–ö"
                
                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
                try:
                    requests.post(f"{API_URL}/sendMessage", json={
                        "chat_id": ADMIN_USER_ID,
                        "text": f"üîÑ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ #{restart_count}\n–ü—Ä–∏—á–∏–Ω–∞: {e}"
                    }, timeout=5)
                except:
                    pass
                
                time.sleep(10)
                consecutive_errors = 0
                bot_status = "–ê–ö–¢–ò–í–ï–ù"
            else:
                bot_status = "–û–®–ò–ë–ö–ê"
                time.sleep(5)
                bot_status = "–ê–ö–¢–ò–í–ï–ù"
                
        time.sleep(1)

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Gunicorn
app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –¥–ª—è Gunicorn
if BOT_TOKEN:
    init_logging()
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è Gunicorn...")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    bot_thread = threading.Thread(target=bot_main_loop, daemon=True)
    bot_thread.start()
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ")

@app.route('/')
def home():
    uptime = datetime.now() - bot_start_time
    h, m = divmod(int(uptime.total_seconds() // 60), 60)
    return f"<h1>YukMarkazi Bot ‚Äì {bot_status}</h1><p>–°–æ–æ–±—â–µ–Ω–∏–π: {message_count}</p><p>Uptime: {h}—á {m}–º</p>"

@app.route('/health')
def health():
    uptime_seconds = (datetime.now() - bot_start_time).total_seconds()
    last_activity = globals().get('last_activity', bot_start_time)
    last_activity_seconds = (datetime.now() - last_activity).total_seconds()
    
    is_healthy = True
    status_code = 200 if is_healthy else 503
    
    health_data = {
        "status": "healthy" if is_healthy else "unhealthy",
        "bot_status": bot_status,
        "uptime_seconds": int(uptime_seconds),
        "messages_processed": message_count,
        "last_activity_seconds_ago": int(last_activity_seconds),
        "timestamp": datetime.now().isoformat()
    }
    
    return health_data, status_code

@app.route('/ping')
def ping():
    return "pong", 200

@app.route('/telegram', methods=['POST'])
def telegram_webhook():
    try:
        update = request.get_json(force=True)
        if 'message' in update:
            process_message(update['message'])
        if 'callback_query' in update:
            handle_callback(update)
        return jsonify(ok=True), 200
    except Exception:
        logger.exception("Webhook error")
        return jsonify(ok=False), 500

if __name__ == '__main__':
    init_logging()
    
    # Graceful shutdown
    def shutdown_handler(signum, frame):
        global stop_polling, bot_status
        stop_polling = True
        bot_status = "–û–°–¢–ê–ù–û–í–õ–ï–ù"
        logger.info("üõë Graceful shutdown")
        sys.exit(0)
    
    signal.signal(signal.SIGTERM, shutdown_handler)
    signal.signal(signal.SIGINT, shutdown_handler)
    
    # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –±–æ—Ç–∞
    threading.Thread(target=bot_main_loop, daemon=True).start()
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    try:
        requests.post(f"{API_URL}/sendMessage", json={
            "chat_id": ADMIN_USER_ID,
            "text": "üöÄ –ê–í–¢–û–ù–û–ú–ù–´–ô –ë–û–¢ v2.0\n\n‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π\n‚úÖ –ê–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚úÖ Heartbeat —Å–∏—Å—Ç–µ–º–∞\n\n–†–∞–±–æ—Ç–∞—é 24/7 –±–µ–∑ Replit Agent!"
        }, timeout=5)
    except:
        pass
    
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
