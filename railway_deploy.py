#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
railway_deploy.py ‚Äì —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
- –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω—É –ø—Ä–∏ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–º –º–∞—Ä—à—Ä—É—Ç–µ
- –∫–Ω–æ–ø–∫–∞ ¬´üë§ Aloqaga_chiqish¬ª —Å @username –∏–ª–∏ –±–µ–∑
- –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: ƒ∞‚Üíi,  º‚Üí', —Ä–µ–≥–∏—Å—Ç—Ä –Ω–µ –≤–∞–∂–µ–Ω
- –≤—Å–µ —Ä–∞–π–æ–Ω–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã –∏ –∫—Ä—É–ø–Ω—ã–µ –ø–æ—Å—ë–ª–∫–∏ (–ü–∏—à–∞–≥–∞—Ä–¥–∞–Ω, –ß–∏–Ω–∞–∑, ‚Ä¶)
"""
import os
import sys
import time
import signal
import logging
import threading
import re
import unicodedata
import traceback
from datetime import datetime
from flask import Flask, request, jsonify
import requests

# ========== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ==========
BOT_TOKEN     = '8098291030:AAFTt4SLrOz95Hfq8TKdvgnv8j5ojEnirYg'  # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω
MAIN_GROUP_ID = int(os.environ.get('MAIN_GROUP_ID', '-1002259378109'))
ADMIN_USER_ID = int(os.environ.get('ADMIN_USER_ID', '8101326669'))
BOT_USERNAME  = os.getenv("BOT_USERNAME", "ym_logistics_bot")  # –±–µ–∑ @
API_URL       = f"https://api.telegram.org/bot{BOT_TOKEN}" if BOT_TOKEN else None
# ========== –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ==========
last_update_id = 0
stop_polling = False
bot_status = "–ê–ö–¢–ò–í–ï–ù"
message_count = 0
bot_start_time = datetime.now()
logger = logging.getLogger(__name__)

# ========== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ==========
def init_logging():
    logging.basicConfig(
        level=logging.INFO,
        format='[%(asctime)s] %(levelname)s: %(message)s',
        handlers=[
            logging.FileHandler('bot.log', encoding='utf-8'),
            logging.StreamHandler()
        ]
    )

# ========== –¢–û–õ–¨–ö–û 17 –ê–ö–¢–ò–í–ù–´–• –¢–û–ü–ò–ö–û–í ==========
REGION_KEYWORDS = {
  # 1. Toshkent (101362) - –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Ä–∞–π–æ–Ω—ã –¢–∞—à–∫–µ–Ω—Ç–∞ –∏ –¢–∞—à–∫–µ–Ω—Ç—Å–∫—É—é –æ–±–ª–∞—Å—Ç—å
  "tashkent_city": {
    "topic_id": 101362,
    "cyrillic_uz": "–¢–æ—à–∫–µ–Ω—Ç —à–∞“≥—Ä–∏",
    "latin_uz": "Toshkent shahri", 
    "russian": "–≥–æ—Ä–æ–¥ –¢–∞—à–∫–µ–Ω—Ç",
    "aliases": [
      # –û—Å–Ω–æ–≤–Ω–æ–π –≥–æ—Ä–æ–¥
      "toshkent", "tashkent", "tosh-kent", "tash-kent", "towkent", "toshkent shahri", "tashkent city",
      "toshkentga", "tashkentga", "toshkentdan", "tashkentdan", "toshkentda", "toshkentdagi",
      "toshkent", "TOSHKENT", # –∏—Å–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä
      "toshkenga", "toshkentga", "olmosga", "olmosxo'ja", "olmos", "olmoscha",
      "–¢–æ—à–∫–µ–Ω—Ç", "–¢–∞—à–∫–µ–Ω—Ç", "—Ç–∞—à–∫–µ–Ω—Ç", "–¢–æ—à-–ö–µ–Ω—Ç", "–¢–∞—à-–ö–µ–Ω—Ç", "–¢–æ–≤–∫–µ–Ω—Ç", "–¢–æ—à–∫–µ–Ω—Ç —à–∞“≥—Ä–∏", "–≥–æ—Ä–æ–¥ –¢–∞—à–∫–µ–Ω—Ç",
      "–¢–∞—à–∫–µ–Ω—Ç–∞", "–¢–∞—à–∫–µ–Ω—Ç–µ", "–¢–∞—à–∫–µ–Ω—Ç—É", "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∏–π", "–¢–∞—à–∫–µ–Ω—Ç-–°–∏—Ç–∏", "toshkent'skiy",
      "Maskva", "MASKVA", "maskva", "–º–æ—Å–∫–≤–∞", "–ú–æ—Å–∫–≤–∞", "–ú–û–°–ö–í–ê",  # –î–æ–±–∞–≤–ª—è–µ–º –ú–æ—Å–∫–≤—É
      # –í–°–ï –†–ê–ô–û–ù–´ –¢–ê–®–ö–ï–ù–¢–ê
      "yunusobod", "yunusabad", "yunus-obod", "yunus obod", "–Æ–Ω—É—Å–æ–±–æ–¥", "–Æ–Ω—É—Å–∞–±–∞–¥",
      "mirzo-ulugbek", "mirzo ulugbek", "mirzoulugbek", "mirzo ulug'bek", "–ú–∏—Ä–∑–æ-–£–ª—É“ì–±–µ–∫", "–ú–∏—Ä–∑–æ –£–ª—É“ì–±–µ–∫",
      "yashnobod", "yashnabad", "yashno-bod", "–Ø—à–Ω–æ–±–æ–¥", "–Ø—à–Ω–∞–±–∞–¥",
      "olmazor", "olma-zor", "olma zor", "almazar", "–û–ª–º–∞–∑–æ—Ä", "–ê–ª–º–∞–∑–∞—Ä",
      "uchtepa", "uch-tepa", "uch tepa", "–£—á—Ç–µ–ø–∞", "–£—á-–¢–µ–ø–∞",
      "shayxontohur", "shayxontoxur", "shaykhontohur", "–®–∞–π—Ö–æ–Ω—Ç–æ“≥—É—Ä", "–®–∞–π—Ö–∞–Ω—Ç–∞—É—Ä",
      "chilonzor", "chilon-zor", "chilon zor", "–ß–∏–ª–æ–Ω–∑–æ—Ä", "–ß–∏–ª–∞–Ω–∑–∞—Ä",
      "sergeli", "sergili", "–°–µ—Ä–≥–µ–ª–∏",
      "yakkasaroy", "yakkasaray", "yakka-saroy", "yakka saroy", "–Ø–∫–∫–∞—Å–∞—Ä–∞–π",
      "mirobod", "mirabad", "miro-bod", "–ú–∏—Ä–∞–±–æ–¥", "–ú–∏—Ä–∞–±–∞–¥",
      "bektemir", "bek-temir", "–ë–µ–∫—Ç–µ–º–∏—Ä",
      # –¢–ê–®–ö–ï–ù–¢–°–ö–ê–Ø –û–ë–õ–ê–°–¢–¨
      "toshkent viloyati", "tashkent oblast", "toshkent region", "–¢–æ—à–∫–µ–Ω—Ç –≤–∏–ª–æ—è—Ç–∏", "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
      "bekobod", "bekabad", "–ë–µ–∫–æ–±–æ–¥", "–ë–µ–∫–∞–±–∞–¥",
      "angren", "angiren", "–ê–Ω–≥—Ä–µ–Ω", "–ê–Ω–≥–∏—Ä–µ–Ω",
      "olmaliq", "olmalik", "almalyk", "almalik", "–û–ª–º–∞–ª–∏“õ", "–ê–ª–º–∞–ª—ã–∫",
      # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –û—Ö–∞–Ω–≥–∞—Ä–æ–Ω–∞
      "ohangaron", "oxangaron", "ohan'garon", "oxan'garon", "ochangaron", "ochongaron", 
      "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "–ê–•–ê–ù–ì–ê–†–ê–ù", "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "–∞—Ö–∞–Ω–≥–∞—Ä–æ–Ω", "–ê–•–ê–ù–ì–ê–†–û–ù", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω", "–û–•–ê–ù–ì–ê–†–û–ù", "–û—Ö–∞–Ω–≥–∞—Ä–æ–Ω",
      "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω", "–û“≤–ê–ù–ì–ê–†–û–ù", "–û“≥–∞–Ω–≥–∞—Ä–æ–Ω", "ahangaran", "AHANGARAN", "Ahangaran", "ahangaron", "AHANGARON",
      "yangiyul", "yangiyo'l", "–Ø–Ω–≥–∏—é–ª", "–Ø–Ω–≥–∏—é–ª—å",
      "parkent", "–ü–∞—Ä–∫–µ–Ω—Ç", "piskent", "–ü–∏—Å–∫–µ–Ω—Ç",
      "quyichirchiq", "quyi-chirchiq", "quyi chirchiq", "kuyichirchiq", "“ö—É–π–∏—á–∏—Ä—á–∏“õ",
      "yuqorichirchiq", "yuqori-chirchiq", "yuqori chirchiq", "yukorichirchiq", "–Æ“õ–æ—Ä–∏—á–∏—Ä—á–∏“õ",
      "boka", "bo'ka", "–ë—û–∫–∞", "xasanboy", "hasanboy", "XASANBOY", "HASANBOY", "–•–∞—Å–∞–Ω–±–æ–π",
      "chinaz", "chinz", "chinoz", "–ß–∏–Ω–∞–∑", "–ß–∏–Ω–æ–∑",
      "zangiota", "zangi-ota", "zangi ota", "–ó–∞–Ω–≥–∏–æ—Ç–∞",
      "qibray", "kibray", "“ö–∏–±—Ä–∞–π",
      "nurafshon", "nurafshan", "–ù—É—Ä–∞—Ñ—à–æ–Ω",
      "gazalkent", "gazal-kent", "–ì–∞–∑–∞–ª–∫–µ–Ω—Ç",
      "o ªrtasaroy", "o'rtasaroy", "ortasaroy", "O ªrtasaroy", "O'rtasaroy", "–é—Ä—Ç–∞—Å–∞—Ä–æ–π"  # –é—Ä—Ç–∞—Å–∞—Ä–æ–π —Ä–∞–π–æ–Ω
    ]
  },

  # 2. Farg'ona (101382)
  "fargona_city": {
    "topic_id": 101382,
    "cyrillic_uz": "–§–∞—Ä“ì–æ–Ω–∞ —à–∞“≥—Ä–∏",
    "latin_uz": "Farg'ona shahri",
    "russian": "–≥–æ—Ä–æ–¥ –§–µ—Ä–≥–∞–Ω–∞",
    "aliases": [
      "fargona", "farg'ona", "fargana", "fergana", "fargona shahri", "fargona city",
      "fargonaga", "fargonadan", "fargonada", "fargonali",
      "–§–∞—Ä“ì–æ–Ω–∞", "–§–µ—Ä–≥–∞–Ω–∞", "–≥–æ—Ä–æ–¥ –§–µ—Ä–≥–∞–Ω–∞", "–§–µ—Ä–≥–∞–Ω—ã", "–§–µ—Ä–≥–∞–Ω–µ"
    ]
  },

  # 3. Kokand (101382) - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –§–µ—Ä–≥–∞–Ω–∞
  "kokand": {
    "topic_id": 101382,  # –§–µ—Ä–≥–∞–Ω–∞ —Ç–æ–ø–∏–∫
    "cyrillic_uz": "“ö—û“õ–æ–Ω —à–∞“≥—Ä–∏", 
    "latin_uz": "Qo'qon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö–æ–∫–∞–Ω–¥",
    "aliases": [
      "qoqon", "qo'qon", "kokand", "qo'qon shahri", "qoqon city",
      "qo'qonga", "qo'qondan", "qo'qonda", "qoqonlik",
      "“ö—û“õ–æ–Ω", "–ö–æ–∫–∞–Ω–¥", "–≥–æ—Ä–æ–¥ –ö–æ–∫–∞–Ω–¥"
    ]
  },

  # 4. Namangan (101383)
  "namangan_city": {
    "topic_id": 101383,
    "cyrillic_uz": "–ù–∞–º–∞–Ω–≥–∞–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Namangan shahri", 
    "russian": "–≥–æ—Ä–æ–¥ –ù–∞–º–∞–Ω–≥–∞–Ω",
    "aliases": [
      "namangan", "namagan", "namangan shahri", "namangan city",
      "namanganga", "namangandan", "namanganda", "namanganlik",
      "xaqlabot", "xaqlabad", "–•–∞–∫–ª–∞–±–æ—Ç", # —Ä–∞–π–æ–Ω –≤ –ù–∞–º–∞–Ω–≥–∞–Ω–µ
      "–ù–∞–º–∞–Ω–≥–∞–Ω", "–≥–æ—Ä–æ–¥ –ù–∞–º–∞–Ω–≥–∞–Ω", "–ù–∞–º–∞–Ω–≥–∞–Ω–∞", "–ù–∞–º–∞–Ω–≥–∞–Ω–µ"
    ]
  },

  # 5. Andijan (101387)  
  "andijon_city": {
    "topic_id": 101387,
    "cyrillic_uz": "–ê–Ω–¥–∏–∂–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Andijon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ê–Ω–¥–∏–∂–∞–Ω", 
    "aliases": [
      "andijon", "andijan", "andijon shahri", "andijon city",
      "andijonga", "andijondan", "andijonda", "andijonlik",
      "marhamat", "marhamatga", # —Ä–∞–π–æ–Ω –≤ –ê–Ω–¥–∏–∂–∞–Ω–µ
      "–ê–Ω–¥–∏–∂–æ–Ω", "–ê–Ω–¥–∏–∂–∞–Ω", "–≥–æ—Ä–æ–¥ –ê–Ω–¥–∏–∂–∞–Ω", "–ê–Ω–¥–∏–∂–∞–Ω–∞", "–ê–Ω–¥–∏–∂–∞–Ω–µ"
    ]
  },

  # 6. Samarqand (101369)
  "samarkand_city": {
    "topic_id": 101369,
    "cyrillic_uz": "–°–∞–º–∞—Ä“õ–∞–Ω–¥ —à–∞“≥—Ä–∏",
    "latin_uz": "Samarqand shahri",
    "russian": "–≥–æ—Ä–æ–¥ –°–∞–º–∞—Ä–∫–∞–Ω–¥",
    "aliases": [
      "samarqand", "samarkand", "samarqand shahri", "samarkand city",
      "samarqandga", "samarqanddan", "samarqandda", "samarqandlik",
      "–°–∞–º–∞—Ä“õ–∞–Ω–¥", "–°–∞–º–∞—Ä–∫–∞–Ω–¥", "–≥–æ—Ä–æ–¥ –°–∞–º–∞—Ä–∫–∞–Ω–¥", "–°–∞–º–∞—Ä–∫–∞–Ω–¥–∞", "–°–∞–º–∞—Ä–∫–∞–Ω–¥–µ"
    ]
  },

  # 7. Buxoro (101372)
  "bukhara_city": {
    "topic_id": 101372,
    "cyrillic_uz": "–ë—É—Ö–æ—Ä–æ —à–∞“≥—Ä–∏",
    "latin_uz": "Buxoro shahri", 
    "russian": "–≥–æ—Ä–æ–¥ –ë—É—Ö–∞—Ä–∞",
    "aliases": [
      "buxoro", "bukhara", "buxoro shahri", "bukhara city",
      "buxoroga", "buxorodan", "buxoroda", "buxorolik", 
      "–ë—É—Ö–æ—Ä–æ", "–±—É—Ö–æ—Ä–æ", "–ë—É—Ö–æ—Ä–æ–¥–∞–Ω", "–±—É—Ö–æ—Ä–æ–¥–∞–Ω",  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–∑ –ª–æ–≥–æ–≤
      "–ë—É—Ö–∞—Ä–∞", "–≥–æ—Ä–æ–¥ –ë—É—Ö–∞—Ä–∞", "–ë—É—Ö–∞—Ä—ã", "–ë—É—Ö–∞—Ä–µ"
    ]
  },

  # 8. Navoiy (101379)
  "navoi_city": {
    "topic_id": 101379,
    "cyrillic_uz": "–ù–∞–≤–æ–∏–π —à–∞“≥—Ä–∏",
    "latin_uz": "Navoiy shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ù–∞–≤–æ–∏",
    "aliases": [
      "navoiy", "navoi", "navoyi", "Navoyi", "NAVOYI", "navoiy shahri", "navoi city",
      "navoiyda", "navoiydan", "navoiyga", "navoiylik",
      "qiziltepaga", "qiziltepa", "qiziltepa tumani",
      "g'azg'on", "gazgon", "g'azg'ondan", "gazgondan",
      "–ù–∞–≤–æ–∏–π", "–ù–∞–≤–æ–∏"
    ]
  },

  # 9. Qashqadaryo (101380)
  "qashqadaryo_region": {
    "topic_id": 101380,
    "cyrillic_uz": "“ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Qashqadaryo viloyati", 
    "russian": "–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "qashqadaryo", "qashqadaryoga", "qashqadarya", "kashkadarya",
      "qarshi", "karshi", "qarshi shahri", "karshi city",
      "qashqadaryoda", "qashqadaryodan", "qashqadaryolik",
      "kosonga", "kosonda", "koson",
      "“ö–∞—à“õ–∞–¥–∞—Ä—ë", "–ö–∞—à–∫–∞–¥–∞—Ä—å—è", "–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ö–∞—Ä—à–∏"
    ]
  },

  # 10. Surxondaryo (101363)
  "surkhandarya_region": {
    "topic_id": 101363,
    "cyrillic_uz": "–°—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Surxondaryo viloyati",
    "russian": "–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", 
    "aliases": [
      "surxondaryo", "surkhandarya", "surxondaryoga", "surxondaryoda",
      "termiz", "termez", "termiz shahri", "termez city",
      "surxondaryodan", "surxondaryolik",
      "–°—É—Ä—Ö–æ–Ω–¥–∞—Ä—ë", "–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å—è", "–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–¢–µ—Ä–º–µ–∑"
    ]
  },

  # 11. Sirdaryo (101378)
  "sirdaryo_region": {
    "topic_id": 101378,
    "cyrillic_uz": "–°–∏—Ä–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Sirdaryo viloyati",
    "russian": "–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã Sirdaryo
      "sirdaryo", "syrdarya", "sirdaryoga", "sirdaryoda", "sirdaryodan", "sirdaryolik",
      "guliston", "gulistan", "guliston shahri", "gulistan city", "gulistonda", "gulistondan",
      "shirin", "shirindan", "shirinlik", "shirinda", "shiringa",
      # Oqoltin - –≥–æ—Ä–æ–¥ –≤ –°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ (–ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –í–°–ï –í–ê–†–ò–ê–ù–¢–´!)
      "oqoltin", "OQOLTIN", "Oqoltin", "akoltin", "okoltin", "akoltin shahri", "oqoltin city",
      "–æ“õ–æ–ª—Ç–∏–Ω", "–û“ö–û–õ–¢–ò–ù", "–û“õ–æ–ª—Ç–∏–Ω", "–æ–∫–æ–ª—Ç–∏–Ω", "–û–ö–û–õ–¢–ò–ù", "–û–∫–æ–ª—Ç–∏–Ω", 
      "–∞–∫–æ–ª—Ç–∏–Ω", "–ê–ö–û–õ–¢–ò–ù", "–ê–∫–æ–ª—Ç–∏–Ω", "–æ–∫–æ–ª—Ç–∏–Ω –≥–æ—Ä–æ–¥", "–æ“õ–æ–ª—Ç–∏–Ω —à–∞“≥—Ä–∏",
      "oqoltindan", "oqoltinda", "oqoltinlik", "oqoltinga", 
      "–∞–∫–æ–ª—Ç–∏–Ω–µ", "–∞–∫–æ–ª—Ç–∏–Ω—É", "–∞–∫–æ–ª—Ç–∏–Ω–æ–º", "–æ“õ–æ–ª—Ç–∏–Ω–≥–∞", "–æ“õ–æ–ª—Ç–∏–Ω–¥–∞–Ω",
      # –£–∑–±–µ–∫—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      "–°–∏—Ä–¥–∞—Ä–π–æ", "—Å–∏—Ä–¥–∞—Ä–π–æ", "–°–∏—Ä–¥–∞—Ä–π–æ–¥–∞–Ω", "—Å–∏—Ä–¥–∞—Ä–π–æ–¥–∞–Ω",
      "–°–∏—Ä–¥–∞—Ä—ë", "–°—ã—Ä–¥–∞—Ä—å—è", "–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–ì—É–ª–∏—Å—Ç–∞–Ω"
    ]
  },

  # 12. Jizzax (101377)
  "jizzakh_region": {
    "topic_id": 101377,
    "cyrillic_uz": "–ñ–∏–∑–∑–∞—Ö –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Jizzax viloyati",
    "russian": "–î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "jizzax", "jizzakh", "jizakh", "jizzaq", "djizak",
      "jizzaxga", "jizzaxdan", "jizzaxda", "jizzaxlik",
      "–ñ–∏–∑–∑–∞—Ö", "–î–∂–∏–∑–∞–∫", "–î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
    ]
  },

  # 13. Qoraqalpog ªiston (101381)
  "karakalpakstan_region": {
    "topic_id": 101381,
    "cyrillic_uz": "“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å–∏",
    "latin_uz": "Qoraqalpog'iston Respublikasi",
    "russian": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω",
    "aliases": [
      "qoraqalpogiston", "qoraqalpog'iston", "karakalpakstan", "qoraqalpoqiston",
      "nukus", "nukus shahri", "nukus city", "–Ω—É–∫—É—Å", "–Ω—É–∫—É—Å–¥–∞–Ω", "nukusdan", "–ù—É–∫—É—Å", "–ù–£–ö–£–°",
      "qo'ng'irot", "qong'irot", "qo ªng ªirot", "qo`ng`irot", "kongrat", "irot", "IROT",  # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã Qo'ng'irot
      "qoraqalpogistonda", "qoraqalpogistondan", "qoraqalpogistonlik",
      "“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω", "–ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω", "–ù—É–∫—É—Å"
    ]
  },

  # 14. Xorazm (101660)
  "khorezm_region": {
    "topic_id": 101660,
    "cyrillic_uz": "–•–æ—Ä–∞–∑–º –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Xorazm viloyati",
    "russian": "–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "xorazm", "khorezm", "xorazmga", "xorazmdan", "xorazmda",
      "urganch", "urgench", "urganch shahri", "urgench city",
      "xorazmlik", "yasin", "yasindan", "shafof", "shafofdan",
      "–•–æ—Ä–∞–∑–º", "–•–æ—Ä–µ–∑–º", "–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–£—Ä–≥–µ–Ω—á"
    ]
  },

  # 15. Xalqaro yuklar (101367)
  "international": {
    "topic_id": 101367,
    "cyrillic_uz": "–•–∞–ª“õ–∞—Ä–æ —é–∫–ª–∞—Ä",
    "latin_uz": "Xalqaro yuklar",
    "russian": "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –≥—Ä—É–∑—ã",
    "aliases": [
      "xalqaro", "international", "—Ö–∞–ª“õ–∞—Ä–æ", "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ",
      "russia", "rossiya", "moscow", "moskva", "petersburg", "spb",
      "Maskva", "MASKVA", "maskva", "–ú–æ—Å–∫–≤–∞", "–ú–û–°–ö–í–ê", "–º–æ—Å–∫–≤–∞",  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ú–æ—Å–∫–≤—ã
      "Samara", "SAMARA", "samara", "–°–∞–º–∞—Ä–∞", "—Å–∞–º–∞—Ä–∞",  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –°–∞–º–∞—Ä—ã
      "belarus", "minsk", "kazakhstan", "almaty", "astana", "nur-sultan",
      "kyrgyzstan", "bishkek", "–ö–∏—Ä–≥–∏–∑–∏—Å—Ç–æ–Ω", "–∫–∏—Ä–≥–∏–∑–∏—Å—Ç–æ–Ω", "–ö–∏—Ä–≥–∏–∑–∏—Å—Ç–æ–Ω–¥–∞–Ω", "–∫–∏—Ä–≥–∏–∑–∏—Å—Ç–æ–Ω–¥–∞–Ω",
      "turkey", "turkiye", "istanbul", "ankara", "iran", "tehran",
      "–†–æ—Å—Å–∏—è", "–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–°–ü–±", "–ë–µ–ª–∞—Ä—É—Å—å", "–ú–∏–Ω—Å–∫",
      "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "–ê–ª–º–∞—Ç—ã", "–ê—Å—Ç–∞–Ω–∞", "–ù—É—Ä-–°—É–ª—Ç–∞–Ω", "–¢—É—Ä—Ü–∏—è", "–°—Ç–∞–º–±—É–ª", "–ê–Ω–∫–∞—Ä–∞"
    ]
  },

  # 16. REKLAMA (101360)
  "advertising": {
    "topic_id": 101360, 
    "cyrillic_uz": "–†–µ–∫–ª–∞–º–∞",
    "latin_uz": "Reklama",
    "russian": "–†–µ–∫–ª–∞–º–∞",
    "aliases": [
      "reklama", "advertising", "ads", "—Ä–µ–∫–ª–∞–º–∞", "—Ä–µ–∫–ª–∞–º–Ω–æ–µ",
      "elon", "e'lon", "–æ–±—ä—è–≤–ª–µ–Ω–∏–µ", "–æ–±—ä—è–≤–ª–µ–Ω–∏—è"
    ]
  },

  # 17. Yangiliklar (101359)
  "news": {
    "topic_id": 101359,
    "cyrillic_uz": "–Ø–Ω–≥–∏–ª–∏–∫–ª–∞—Ä", 
    "latin_uz": "Yangiliklar",
    "russian": "–ù–æ–≤–æ—Å—Ç–∏",
    "aliases": [
      "yangiliklar", "news", "—è–Ω–≥–∏–ª–∏–∫–ª–∞—Ä", "–Ω–æ–≤–æ—Å—Ç–∏", "–Ω–æ–≤–æ—Å—Ç—å",
      "xabar", "xabarlar", "–∏–∑–≤–µ—Å—Ç–∏—è", "—Å–≤–æ–¥–∫–∞"
    ]
  },

  # 18. Fura bozor (101361) - –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ô –¢–û–ü–ò–ö
  "market": {
    "topic_id": 101361,
    "cyrillic_uz": "–§—É—Ä–∞ –±–æ–∑–æ—Ä",
    "latin_uz": "Fura bozor", 
    "russian": "–†—ã–Ω–æ–∫ —Ñ—É—Ä",
    "aliases": [
      "fura bozor", "fura bazar", "fura market", "—Ñ—É—Ä–∞ –±–æ–∑–æ—Ä", "—Ä—ã–Ω–æ–∫ —Ñ—É—Ä",
      "fura sotuv", "fura sotish", "–ø—Ä–æ–¥–∞–∂–∞ —Ñ—É—Ä", "–ø–æ–∫—É–ø–∫–∞ —Ñ—É—Ä"
    ]
  },

  # ========== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –†–ê–ô–û–ù–´ –¢–ê–®–ö–ï–ù–¢–ê (–≤—Å–µ –∏–¥—É—Ç –≤ —Ç–æ–ø–∏–∫ 101362) ==========
  "mirzo_ulugbek": {
    "topic_id": 101362,
    "cyrillic_uz": "–ú–∏—Ä–∑–æ-–£–ª—É“ì–±–µ–∫ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Mirzo-Ulug‚Äòbek tumani",
    "russian": "–ú–∏—Ä–∑–æ-–£–ª—É–≥–±–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "mirzo-ulugbek", "mirzo ulugbek", "mirzoulugbek", "mirzo-ulughbek", "mirzo ulug‚Äòbek",
      "mirzo-ulug'bek", "mirzo ulug'bek", "mirzo-ulugbek tumani", "mirzo ulugbek rayon",
      "mirzo-ulugbekda", "mirzo-ulugbekdan", "mirzo-ulugbekga",
      "–ú–∏—Ä–∑–æ-–£–ª—É“ì–±–µ–∫", "–ú–∏—Ä–∑–æ –£–ª—É“ì–±–µ–∫", "–ú–∏—Ä–∑–æ-–£–ª—É–≥–±–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yashnobod": {
    "topic_id": 101362,
    "cyrillic_uz": "–Ø—à–Ω–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Yashnobod tumani",
    "russian": "–Ø—à–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yashnobod", "yashnabad", "yashno-bod", "yashnobod tumani", "yashnobod rayon",
      "yashnobodda", "yashnoboddan", "yashnobodga", "yashnobodlik",
      "–Ø—à–Ω–æ–±–æ–¥", "–Ø—à–Ω–∞–±–∞–¥", "–Ø—à–Ω–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "olmazor": {
    "topic_id": 101362,
    "cyrillic_uz": "–û–ª–º–∞–∑–æ—Ä —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Olmazor tumani",
    "russian": "–ê–ª–º–∞–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "olmazor", "olma-zor", "olma zor", "almazar", "almazar rayon", "olmazor tumani",
      "olmazorda", "olmazordan", "olmazorlik",
      "–û–ª–º–∞–∑–æ—Ä", "–û–ª–º–∞-–∑–æ—Ä", "–ê–ª–º–∞–∑–∞—Ä", "–ê–ª–º–∞–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "uchtepa": {
    "topic_id": 101362,
    "cyrillic_uz": "–£—á—Ç–µ–ø–∞ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Uchtepa tumani",
    "russian": "–£—á—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "uchtepa", "uch-tepa", "uch tepa", "uchtepa tumani", "uchtepa rayon",
      "uchtepada", "uchtepadan", "uchtepaga",
      "–£—á—Ç–µ–ø–∞", "–£—á-–¢–µ–ø–∞", "–£—á—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "shayxontohur": {
    "topic_id": 101362,
    "cyrillic_uz": "–®–∞–π—Ö–æ–Ω—Ç–æ“≥—É—Ä —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Shayxontohur tumani",
    "russian": "–®–∞–π—Ö–∞–Ω—Ç–∞—É—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "shayxontohur", "shayxontoxur", "shaykhontohur", "shayxontahur",
      "shayxontohur tumani", "shayxontohur rayon",
      "shayxontohurda", "shayxontohurdan", "shayxontohurga",
      "–®–∞–π—Ö–æ–Ω—Ç–æ“≥—É—Ä", "–®–∞–π—Ö–∞–Ω—Ç–∞—É—Ä", "–®–∞–π—Ö–∞–Ω—Ç–∞—É—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "chilonzor": {
    "topic_id": 101362,
    "cyrillic_uz": "–ß–∏–ª–æ–Ω–∑–æ—Ä —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Chilonzor tumani",
    "russian": "–ß–∏–ª–∞–Ω–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "chilonzor", "chilon-zor", "chilon zor", "chilonzor tumani", "chilonzor rayon",
      "chilonzorda", "chilonzordan", "chilonzorlik",
      "–ß–∏–ª–æ–Ω–∑–æ—Ä", "–ß–∏–ª–∞–Ω–∑–∞—Ä", "–ß–∏–ª–∞–Ω–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "sergeli": {
    "topic_id": 101362,
    "cyrillic_uz": "–°–µ—Ä–≥–µ–ª–∏ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Sergeli tumani",
    "russian": "–°–µ—Ä–≥–µ–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "sergeli", "sergili", "sergeli tumani", "sergili tumani", "sergeli rayon",
      "sergelida", "sergelidan", "sergeliga", "sergelilik",
      "–°–µ—Ä–≥–µ–ª–∏", "–°–µ—Ä–≥–µ–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yakkasaroy": {
    "topic_id": 101362,
    "cyrillic_uz": "–Ø–∫–∫–∞—Å–∞—Ä–∞–π —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Yakkasaroy tumani",
    "russian": "–Ø–∫–∫–∞—Å–∞—Ä–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yakkasaroy", "yakkasaray", "yakka-saroy", "yakka saroy", "yakkasaroy tumani",
      "yakkasaroyda", "yakkasaroydan", "yakkasaroyga", "yakkasaroylik",
      "–Ø–∫–∫–∞—Å–∞—Ä–∞–π", "–Ø–∫–∫–∞—Å–∞—Ä–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "mirobod": {
    "topic_id": 101362,
    "cyrillic_uz": "–ú–∏—Ä–∞–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Mirobod tumani",
    "russian": "–ú–∏—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "mirobod", "mirabad", "miro-bod", "mirobod tumani", "mirabad rayon",
      "mirobodda", "miroboddan", "mirobodga", "mirobodlik",
      "–ú–∏—Ä–∞–±–æ–¥", "–ú–∏—Ä–∞–±–∞–¥", "–ú–∏—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "bektemir": {
    "topic_id": 101362,
    "cyrillic_uz": "–ë–µ–∫—Ç–µ–º–∏—Ä —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Bektemir tumani",
    "russian": "–ë–µ–∫—Ç–µ–º–∏—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "bektemir", "bek-temir", "bektemir tumani", "bektemir rayon",
      "bektemirga", "bektemirdan", "bektemirlik",
      "–ë–µ–∫—Ç–µ–º–∏—Ä", "–ë–µ–∫—Ç–µ–º–∏—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "tashkent_region": {
    "topic_id": 101362,
    "cyrillic_uz": "–¢–æ—à–∫–µ–Ω—Ç –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Toshkent viloyati",
    "russian": "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "toshkent viloyati", "tashkent oblast", "toshkent region",
      "toshkent viloyatiga", "toshkent viloyatidan", "toshkent viloyatda",
      "–¢–æ—à–∫–µ–Ω—Ç –≤–∏–ª–æ—è—Ç–∏", "–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"
    ]
  },

  "bekobod": {
    "topic_id": 101362,
    "cyrillic_uz": "–ë–µ–∫–æ–±–æ–¥ —à–∞“≥—Ä–∏",
    "latin_uz": "Bekobod shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ë–µ–∫–∞–±–∞–¥",
    "aliases": [
      "bekobod", "bekabad", "bekobod shaxri", "bekobod city",
      "bekobodda", "bekoboddan", "bekobodga", "bekobodlik",
      "–ë–µ–∫–æ–±–æ–¥", "–ë–µ–∫–∞–±–∞–¥"
    ]
  },

  "angren": {
    "topic_id": 101362,
    "cyrillic_uz": "–ê–Ω–≥—Ä–µ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Angren shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ê–Ω–≥—Ä–µ–Ω",
    "aliases": [
      "angren", "angiren", "angren shaxri", "angren city",
      "angrenda", "angrendan", "angrenga", "angrenlik",
      "–ê–Ω–≥—Ä–µ–Ω", "–ê–Ω–≥–∏—Ä–µ–Ω"
    ]
  },

  "almalyk": {
    "topic_id": 101362,
    "cyrillic_uz": "–û–ª–º–∞–ª–∏“õ —à–∞“≥—Ä–∏",
    "latin_uz": "Olmaliq shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ê–ª–º–∞–ª—ã–∫",
    "aliases": [
      "olmaliq", "olmalik", "almalyk", "almalik", "olmaliq shaxri", "olmaliq city",
      "olmaliqda", "olmaliqdan", "olmaliqlik",
      "–û–ª–º–∞–ª–∏“õ", "–ê–ª–º–∞–ª—ã–∫"
    ]
  },

  "ohangaron": {
    "topic_id": 101362,
    "cyrillic_uz": "–û“≥–∞–Ω–≥–∞—Ä–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Ohangaron tumani",
    "russian": "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      # –õ–∞—Ç–∏–Ω–∏—Ü–∞ (—É–∑–±–µ–∫—Å–∫–∏–π)
      "ohangaron", "oxangaron", "ohan'garon", "oxan'garon", "ochangaron", "ochongaron",
      "ohangaron tumani", "oxangaron tumani", "ohangaron shahri", "oxangaron city",
      "ohangaronda", "ohangarondan", "ohangaronga", "ohangaronlik", "ohangarondan",
      "oxangaronda", "oxangarondan", "oxangaronga", "oxangaronlik",
      # –ö–∏—Ä–∏–ª–ª–∏—Ü–∞ (—É–∑–±–µ–∫—Å–∫–∏–π)
      "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω", "–û“≤–ê–ù–ì–ê–†–û–ù", "–û“≥–∞–Ω–≥–∞—Ä–æ–Ω", "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω —à–∞“≥—Ä–∏", "–û“≥–∞–Ω–≥–∞—Ä–æ–Ω —à–∞“≥—Ä–∏",
      "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω —Ç—É–º–∞–Ω–∏", "–û“≥–∞–Ω–≥–∞—Ä–æ–Ω —Ç—É–º–∞–Ω–∏", "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω–¥–∞–Ω", "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω–¥–∞", "–æ“≥–∞–Ω–≥–∞—Ä–æ–Ω–≥–∞",
      # –†—É—Å—Å–∫–∏–π
      "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "–ê–•–ê–ù–ì–ê–†–ê–ù", "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "–∞—Ö–∞–Ω–≥–∞—Ä–æ–Ω", "–ê–•–ê–ù–ì–ê–†–û–ù", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω", "–û–•–ê–ù–ì–ê–†–û–ù", "–û—Ö–∞–Ω–≥–∞—Ä–æ–Ω",
      "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω", "–≥–æ—Ä–æ–¥ –ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω",
      "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω–∞", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω–µ", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω—É", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω–æ–º", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω–¥–∞–Ω", "–∞—Ö–∞–Ω–≥–∞—Ä–∞–Ω–¥–∞",
      "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω–∞", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω–µ", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω—É", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω–æ–º", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω–¥–∞–Ω", "–æ—Ö–∞–Ω–≥–∞—Ä–æ–Ω–¥–∞",
      # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –Ω–∞–ø–∏—Å–∞–Ω–∏—è  
      "ahangaran", "AHANGARAN", "Ahangaran", "ahangaron", "AHANGARON", "Ahangaron",
      "a—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "a—Ö–∞–Ω–≥–∞—Ä–æ–Ω", "–æ—Öa–Ω–≥–∞—Ä–æ–Ω", "–∞—Öa–Ω–≥–∞—Ä–æ–Ω"
    ]
  },

  "yangiyul": {
    "topic_id": 101362,
    "cyrillic_uz": "–Ø–Ω–≥–∏—é–ª —à–∞“≥—Ä–∏",
    "latin_uz": "Yangiyul shahri",
    "russian": "–≥–æ—Ä–æ–¥ –Ø–Ω–≥–∏—é–ª—å",
    "aliases": [
      "yangiyul", "yangiyo'l", "yangiyul shaxri", "yangiyul city",
      "yangiyulda", "yangiyuldan", "yangiyulga", "yangiyullik",
      "–Ø–Ω–≥–∏—é–ª", "–Ø–Ω–≥–∏—é–ª—å"
    ]
  },

  "parkent": {
    "topic_id": 101362,
    "cyrillic_uz": "–ü–∞—Ä–∫–µ–Ω—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Parkent tumani",
    "russian": "–ü–∞—Ä–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "parkent", "parkent tumani", "parkent rayon",
      "parkentda", "parkentdan", "parkentga", "parkentlik",
      "–ü–∞—Ä–∫–µ–Ω—Ç", "–ü–∞—Ä–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "piskent": {
    "topic_id": 101362,
    "cyrillic_uz": "–ü–∏—Å–∫–µ–Ω—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Piskent tumani",
    "russian": "–ü–∏—Å–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "piskent", "piskent tumani", "piskent rayon",
      "piskentda", "piskentdan", "piskentga", "piskentlik",
      "–ü–∏—Å–∫–µ–Ω—Ç", "–ü–∏—Å–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "quyichirchiq": {
    "topic_id": 101362,
    "cyrillic_uz": "“ö—É–π–∏—á–∏—Ä—á–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Quyichirchiq tumani",
    "russian": "–ö—É–π–∏—á–∏—Ä—á–∏–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "quyichirchiq", "quyi-chirchiq", "quyi chirchiq", "kuyichirchiq", "kuyi-chirchiq",
      "quyichirchiq tumani", "kuyichirchiq rayon",
      "quyichirchiqda", "quyichirchiqdan", "quyichirchiqga",
      "“ö—É–π–∏—á–∏—Ä—á–∏“õ", "–ö—É–π–∏—á–∏—Ä—á–∏–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yuqorichirchiq": {
    "topic_id": 101362,
    "cyrillic_uz": "–Æ“õ–æ—Ä–∏—á–∏—Ä—á–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Yuqorichirchiq tumani",
    "russian": "–Æ–∫–æ—Ä–∏—á–∏—Ä—á–∏–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yuqorichirchiq", "yuqori-chirchiq", "yuqori chirchiq", "yukorichirchiq", "yukori-chirchiq",
      "yuqorichirchiq tumani", "yukorichirchiq rayon",
      "yuqorichirchiqda", "yuqorichirchiqdan", "yuqorichirchiqga",
      "–Æ“õ–æ—Ä–∏—á–∏—Ä—á–∏“õ", "–Æ–∫–æ—Ä–∏—á–∏—Ä—á–∏–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "boka": {
    "topic_id": 101362,
    "cyrillic_uz": "–ë—û–∫–∞ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Bo'ka tumani",
    "russian": "–ë—É–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "boka", "bo'ka", "buka", "boka tumani", "buka rayon",
      "bokada", "bokadan", "bokaga", "bokalik",
      "–ë—û–∫–∞", "–ë—É–∫–∞", "–ë—É–∫–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "chinaz": {
    "topic_id": 101362,
    "cyrillic_uz": "–ß–∏–Ω–æ–∑ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Chinoz tumani",
    "russian": "–ß–∏–Ω–∞–∑—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "chinaz", "chinz", "chinoz", "chinaz tumani", "chinoz tumani", "chinaz rayon",
      "chinazda", "chinazdan", "chinazga", "chinazlik",
      "–ß–∏–Ω–∞–∑", "–ß–∏–Ω–æ–∑", "–ß–∏–Ω–∞–∑—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "zangiota": {
    "topic_id": 101362,
    "cyrillic_uz": "–ó–∞–Ω–≥–∏–æ—Ç–∞ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Zangiota tumani",
    "russian": "–ó–∞–Ω–≥–∏–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "zangiota", "zangi-ota", "zangi ota", "zangiota tumani", "zangiota rayon",
      "zangiotalik", "zangiota-da", "zangiota-dan",
      "–ó–∞–Ω–≥–∏–æ—Ç–∞", "–ó–∞–Ω–≥–∏–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qibray": {
    "topic_id": 101362,
    "cyrillic_uz": "“ö–∏–±—Ä–∞–π —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Qibray tumani",
    "russian": "–ö–∏–±—Ä–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qibray", "kibray", "qibray tumani", "kibray rayon",
      "qibrayda", "qibraydan", "qibrayga", "qibraylik",
      "“ö–∏–±—Ä–∞–π", "–ö–∏–±—Ä–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "nurafshon": {
    "topic_id": 101362,
    "cyrillic_uz": "–ù—É—Ä–∞—Ñ—à–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Nurafshon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ù—É—Ä–∞—Ñ—à–æ–Ω",
    "aliases": [
      "nurafshon", "nurafshan", "nurafshon shaxri", "nurafshon city",
      "nurafshonda", "nurafshondan", "nurafshonlik",
      "–ù—É—Ä–∞—Ñ—à–æ–Ω", "–≥–æ—Ä–æ–¥ –ù—É—Ä–∞—Ñ—à–æ–Ω"
    ]
  },

  "akhangaran": {
    "topic_id": 101362,
    "cyrillic_uz": "–û—Ö–æ–Ω–≥–∏—Ä–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Oxong‚Äòiron tumani",
    "russian": "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "akhangaran", "axangaran", "oxongiron", "oxong‚Äòiron", "ahan'garan",
      "akhangaran tumani", "akhangaran rayon",
      "akhangaranda", "akhangarandan", "akhangaranlik",
      "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω", "–ê—Ö–∞–Ω–≥–∞—Ä–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "gazalkent": {
    "topic_id": 101362,
    "cyrillic_uz": "–ì–∞–∑–∞–ª–∫–µ–Ω—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Gazalkent tumani",
    "russian": "–ì–∞–∑–∞–ª–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "gazalkent", "gazal-kent", "gazalkent tumani", "gazalkent rayon",
      "gazalkentda", "gazalkentdan", "gazalkentlik",
      "–ì–∞–∑–∞–ª–∫–µ–Ω—Ç", "–ì–∞–∑–∞–ª–∫–µ–Ω—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "keles": {
    "topic_id": 101362,
    "cyrillic_uz": "–ö–µ–ª–µ—Å —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Keles tumani",
    "russian": "–ö–µ–ª–µ—Å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "keles", "keles tumani", "keles rayon",
      "kelesda", "kelesdan", "kelesga", "keleslik",
      "–ö–µ–ª–µ—Å", "–ö–µ–ª–µ—Å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "andijon_city": {
    "topic_id": 101387,
    "cyrillic_uz": "–ê–Ω–¥–∏–∂–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Andijon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ê–Ω–¥–∏–∂–∞–Ω",
    "aliases": [
      "andijon", "andijan", "andijon shaxri", "andijon city",
      "andijonda", "andijondan", "andijonga", "andijonlik",
      "andjondan", "andjon", "andjondan",  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞–ø–∏—Å–∞–Ω–∏—è
      "marhamat", "marhamatga", "marhamatdan", "marhamat tumani",  # –ú–∞—Ä—Ö–∞–º–∞—Ç —Ä–∞–π–æ–Ω
      "ulu", "uluga", "uludan", "ulu yul",  # –£–õ–£ - —ç—Ç–æ –ê–Ω–¥–∏–∂–æ–Ω
      "44 postidan", "44 post", "44-post", "44post",  # 44-–π –ø–æ—á—Ç–æ–≤—ã–π –∫–æ–¥ –ê–Ω–¥–∏–∂–∞–Ω–∞
      "–ê–Ω–¥–∏–∂–æ–Ω", "–ê–Ω–¥–∏–∂–∞–Ω", "–≥–æ—Ä–æ–¥ –ê–Ω–¥–∏–∂–∞–Ω"
    ]
  },

  "asaka": {
    "topic_id": 101387,
    "cyrillic_uz": "–ê—Å–∞–∫–∞ —à–∞“≥—Ä–∏",
    "latin_uz": "Asaka shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ê—Å–∞–∫–∞",
    "aliases": [
      "asaka", "asaka shaxri", "asaka city",
      "asakada", "asakadan", "asakaga", "asakalik",
      "–ê—Å–∞–∫–∞", "–≥–æ—Ä–æ–¥ –ê—Å–∞–∫–∞"
    ]
  },

  "marhamat": {
    "topic_id": 101387,
    "cyrillic_uz": "–ú–∞—Ä“≥–∞–º–∞—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Marhamat tumani",
    "russian": "–ú–∞—Ä—Ö–∞–º–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "marhamat", "marxamat", "marhamat tumani", "marhamat rayon",
      "marhamatda", "marhamatdan", "marhamatga", "marhamatlik",
      "–ú–∞—Ä“≥–∞–º–∞—Ç", "–ú–∞—Ä—Ö–∞–º–∞—Ç", "–ú–∞—Ä—Ö–∞–º–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "shahrixon": {
    "topic_id": 101387,
    "cyrillic_uz": "–®–∞“≥—Ä–∏—Ö–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Shahrixon tumani",
    "russian": "–®–∞—Ö—Ä–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "shahrixon", "shaxrixon", "shahrixon tumani", "shaxrixon tumani", "shahrixon rayon",
      "shahrixonda", "shahrixondan", "shahrixonlik",
      "–®–∞“≥—Ä–∏—Ö–æ–Ω", "–®–∞—Ö—Ä–∏—Ö–∞–Ω", "–®–∞—Ö—Ä–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "xojaobod": {
    "topic_id": 101387,
    "cyrillic_uz": "–•—û–∂–∞–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Xo'jaobod tumani",
    "russian": "–•–æ–¥–∂–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "xojaobod", "xo'jaobod", "xoja-obod", "xoja obod", "xojaobod tumani", "xojaobod rayon",
      "xojaobodda", "xojaoboddan", "xojaobodga", "xojaobodlik",
      "–•—û–∂–∞–æ–±–æ–¥", "–•–æ–¥–∂–∞–∞–±–∞–¥", "–•–æ–¥–∂–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qorgontepa": {
    "topic_id": 101387,
    "cyrillic_uz": "“ö—û—Ä“ì–æ–Ω—Ç–µ–ø–∞ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Qo ªrg ªontepa tumani",
    "russian": "–ö—É—Ä–≥–∞–Ω—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qorgontepa", "qurghontepa", "qo ªrg ªontepa", "qorgontepa tumani", "kurgan-tepa",
      "qorgontepada", "qorgontepadan", "qorgontepaga",
      "q√µrƒüon tepaga", "qor“ìon tepa", "qorƒüon tepa", "q√µrƒüon tepa",
      "“ö—û—Ä“ì–æ–Ω—Ç–µ–ø–∞", "–ö—É—Ä–≥–∞–Ω—Ç–µ–ø–∞", "–ö—É—Ä–≥–∞–Ω—Ç–µ–ø–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "oltinkol": {
    "topic_id": 101387,
    "cyrillic_uz": "–û–ª—Ç–∏–Ω–∫—û–ª —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Oltinko ªl tumani",
    "russian": "–ê–ª—Ç—ã–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "oltinkol", "oltinko ªl", "altinkul", "oltinkol tumani", "altinkul rayon",
      "oltinkolda", "oltinkoldan", "oltinkolga", "oltinkollik",
      "–û–ª—Ç–∏–Ω–∫—û–ª", "–ê–ª—Ç—ã–∫—É–ª—å", "–ê–ª—Ç—ã–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "fargona_city": {
    "topic_id": 101382,
    "cyrillic_uz": "–§–∞—Ä“ì–æ–Ω–∞ —à–∞“≥—Ä–∏",
    "latin_uz": "Farg'ona shahri",
    "russian": "–≥–æ—Ä–æ–¥ –§–µ—Ä–≥–∞–Ω–∞",
    "aliases": [
      "farg'ona", "farg ªona", "fargona", "fergana", "farg'ona shaxri", "fargona city",
      "farg'onada", "farg'onadan", "farg'onga", "farg'onalik",
      "farg ona", "farg ona qirgulidan", "fargona qirgulidan",  # –∏—Å–ø—Ä–∞–≤–ª—è–µ–º "–∞–≥—Ä–µ—Å—Å–∏–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É"
      "yozyovondan", "yozyovon", "yozyovon tumani",  # –Å–∑—ë–≤–æ–Ω —Ä–∞–π–æ–Ω –≤ –§–µ—Ä–≥–∞–Ω–µ
      "—Ñ–∞—Ä–≥–æ–Ω–∞", "—Ñ–µ—Ä–≥–∞–Ω–∞", "–§–∞—Ä“ì–æ–Ω–∞", "–§–µ—Ä–≥–∞–Ω–∞", "–≥–æ—Ä–æ–¥ –§–µ—Ä–≥–∞–Ω–∞"
    ]
  },

  "kokand": {
    "topic_id": 101382,
    "cyrillic_uz": "“ö—û“õ–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Qo'qon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö–æ–∫–∞–Ω–¥",
    "aliases": [
      "qoqon", "kokand", "qo'qon", "qo‚Äòqon", "qoqon shaxri", "qoqon city",
      "qoqonda", "qoqondan", "qoqonga", "qoqonlik",
      "–∫—É–∫–æ", "–∫—É–∫–æ–Ω", "–∫—É–∫–æ–Ω–¥–∞–Ω", "–∫—É–∫–æ–Ω-–¥–∞–Ω", "–∫—É–∫–æ–Ω –¥–∞–Ω",
      "–∫–æ–∫–æ", "–∫–æ–∫–æ–Ω", "–∫–æ–∫–æ–Ω–¥–∞–Ω", "–∫–æ–∫–æ–Ω-–¥–∞–Ω", "–∫–æ–∫–æ–Ω –¥–∞–Ω",
      "kokondan", "kokon", "kokon dan", "kokon-dan",
      "yasindan", "yasin", "yasin tumani",  # –Ø—Å–∏–Ω —Ä–∞–π–æ–Ω –≤ –ö–æ–∫–∞–Ω–¥–µ
      "shafofdan", "shafof", "shafof tumani",  # –®–∞—Ñ–æ—Ñ —Ä–∞–π–æ–Ω –≤ –ö–æ–∫–∞–Ω–¥–µ
      "“ö—û“õ–æ–Ω", "–ö–æ–∫–∞–Ω–¥"
    ]
  },

  "margilan": {
    "topic_id": 101382,
    "cyrillic_uz": "–ú–∞—Ä“ì–∏–ª–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Marg'ilon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ú–∞—Ä–≥–∏–ª–∞–Ω",
    "aliases": [
      "margilon", "marg'ilon", "margilan", "margilon shaxri", "margilon city",
      "margilonda", "margilondan", "margilonlik",
      "–ú–∞—Ä“ì–∏–ª–æ–Ω", "–ú–∞—Ä–≥–∏–ª–∞–Ω"
    ]
  },

  "quvasoy": {
    "topic_id": 101382,
    "cyrillic_uz": "“ö—É–≤–∞—Å–æ–π —à–∞“≥—Ä–∏",
    "latin_uz": "Quvasoy shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö—É–≤–∞—Å–∞–π",
    "aliases": [
      "quvasoy", "kuvasay", "quvasoy shaxri", "quvasoy city",
      "quvasoyda", "quvasoydan", "quvasoylik",
      "–∫—É–≤–∞–¥–∞–Ω", "–∫—É–≤–∞", "–∫—É–≤–∞–¥–∞", "–∫—É–≤–∞—Å–æ–π", "–∫—É–≤–∞—Å–æ–π–¥–∞–Ω", "–∫—É–≤–∞—Å–∞–π", "–∫—É–≤–≥–∞–Ω", "–∫—É–≤–≥–∞",
      "–∫—É–≤–∞—Å–æ–π–≥–∞", "–∫—É–≤–∞—Å–æ–π–¥–∞", "–∫—É–≤–∞—Å–æ–π–º–µ–Ω", "–∫—É–≤–ª–∞—Ä–≥–∞", "–∫—É–≤—Å–æ–π", "quvadan", "quvga", "quvada",
      "“ö—É–≤–∞—Å–æ–π", "–ö—É–≤–∞—Å–∞–π", "–ö—É–≤–∞"
    ]
  },

  "beshariq": {
    "topic_id": 101382,
    "cyrillic_uz": "–ë–µ—à–∞—Ä–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Beshariq tumani",
    "russian": "–ë–µ—à–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "beshariq", "besharik", "beshariq tumani", "beshariq rayon",
      "beshariqda", "beshariqdan", "beshariqga", "beshariqlik",
      "–ë–µ—à–∞—Ä–∏“õ", "–ë–µ—à–∞—Ä—ã–∫", "–ë–µ—à–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "bogdod": {
    "topic_id": 101382,
    "cyrillic_uz": "–ë–æ“ì–¥–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Bog'dod tumani",
    "russian": "–ë–∞–≥–¥–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "bogdod", "bog'dod", "bog ªdod", "bagdad", "bogdod tumani", "bagdad rayon",
      "bogdodda", "bogdoddan", "bogdodga", "bogdodlik",
      "–ë–æ“ì–¥–æ–¥", "–ë–∞–≥–¥–∞–¥", "–ë–∞–≥–¥–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "oltiarik": {
    "topic_id": 101382,
    "cyrillic_uz": "–û–ª—Ç–∏–æ—Ä–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Oltiariq tumani",
    "russian": "–ê–ª—Ç—ã–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "oltiarik", "oltiariq", "altiarik", "oltiarik tumani", "altiarik rayon",
      "oltiarikda", "oltiarikdan", "oltiariklik",
      "–û–ª—Ç–∏–æ—Ä–∏“õ", "–ê–ª—Ç—ã–∞—Ä—ã–∫", "–ê–ª—Ç—ã–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "rishton": {
    "topic_id": 101382,
    "cyrillic_uz": "–†–∏—à—Ç–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Rishton tumani",
    "russian": "–†–∏—à—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "rishton", "rishtan", "rishton tumani", "rishton rayon",
      "rishtonda", "rishtondan", "rishtonlik",
      "–†–∏—à—Ç–æ–Ω", "–†–∏—à—Ç–∞–Ω", "–†–∏—à—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "sox": {
    "topic_id": 101382,
    "cyrillic_uz": "–°—û—Ö —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Sox tumani",
    "russian": "–°—É—Ö—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "sox", "sux", "sox tumani", "sux rayon",
      "soxda", "soxdan", "soxga", "soxlik",
      "–°—û—Ö", "–°—É—Ö", "–°—É—Ö—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "namangan_city": {
    "topic_id": 101383,
    "cyrillic_uz": "–ù–∞–º–∞–Ω–≥–∞–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Namangan shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ù–∞–º–∞–Ω–≥–∞–Ω",
    "aliases": [
      "namangan", "namangan shaxri", "namangan city",  
      "namanganda", "namangandan", "namanganga", "namanganlik",
      "xaqlabot", "xaqlabotdan", "xaqlabot tumani",  # –î–æ–±–∞–≤–ª—è–µ–º –∞–ª–∏–∞—Å—ã –¥–ª—è –•–∞–∫–ª–∞–±–æ—Ç–∞
      "–ù–∞–º–∞–Ω–≥–∞–Ω"
    ]
  },

  "pop_namangan": {
    "topic_id": 101383,
    "cyrillic_uz": "–ü–æ–ø —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Pop tumani",
    "russian": "–ü–∞–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "pop", "pop tumani", "pop rayon",
      "popda", "popdan", "popga", "poplik",
      "–ü–æ–ø", "–ü–∞–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "chust": {
    "topic_id": 101383,
    "cyrillic_uz": "–ß—É—Å—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Chust tumani",
    "russian": "–ß—É—Å—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "chust", "chust tumani", "chust rayon",
      "chustda", "chustdan", "chustga", "chustlik",
      "–ß—É—Å—Ç", "–ß—É—Å—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "kosonsoy": {
    "topic_id": 101383,
    "cyrillic_uz": "–ö–æ—Å–æ–Ω—Å–æ–π —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Kosonsoy tumani",
    "russian": "–ö–∞—Å–∞–Ω—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "kosonsoy", "kasan-say", "kosonsoy tumani", "kasan-say rayon",
      "kosonsoyda", "kosonsoydan", "kosonsoyga", "kosonsoylik",
      "–ö–æ—Å–æ–Ω—Å–æ–π", "–ö–∞—Å–∞–Ω—Å–∞–π", "–ö–∞—Å–∞–Ω—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yangiqorgon": {
    "topic_id": 101383,
    "cyrillic_uz": "–Ø–Ω–≥–∏–∫—û—Ä–≥–∞–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Yangiqo ªrg ªon tumani",
    "russian": "–Ø–Ω–≥–∏-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yangiqorgon", "yangikurgan", "yangiqo ªrg ªon", "yangiqurgan",
      "yangiqorgon tumani", "yangikurgan rayon",
      "yangiqorgonda", "yangiqorgondan", "yangiqorgonga", "yangiqorgonlik",
      "–Ø–Ω–≥–∏–∫—û—Ä–≥–∞–Ω", "–Ø–Ω–≥–∏-–ö—É—Ä–≥–∞–Ω", "–Ø–Ω–≥–∏-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "uchqorgon": {
    "topic_id": 101383,
    "cyrillic_uz": "–£—á“õ—û—Ä“ì–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Uchqo ªrg ªon tumani",
    "russian": "–£—á-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "uchqorgon", "uchqurgan", "uchqo ªrg ªon", "uchqorgon tumani", "uch-kurgan rayon",
      "uchqorgonda", "uchqorgondan", "uchqorgonga", "uchqorgonlik",
      "–£—á“õ—û—Ä“ì–æ–Ω", "–£—á-–ö—É—Ä–≥–∞–Ω", "–£—á-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "buxoro_city": {
    "topic_id": 101372,
    "cyrillic_uz": "–ë—É—Ö–æ—Ä–æ —à–∞“≥—Ä–∏",
    "latin_uz": "Buxoro shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ë—É—Ö–∞—Ä–∞",
    "aliases": [
      "buxoro", "buxara", "bukhara", "buxoro shaxri", "buxoro city",
      "buxoroda", "buxorodan", "buxoroga", "buxorolik",
      "–ë—É—Ö–æ—Ä–æ", "–ë—É—Ö–∞—Ä–∞", "–≥–æ—Ä–æ–¥ –ë—É—Ö–∞—Ä–∞"
    ]
  },

  "kogon": {
    "topic_id": 101372,
    "cyrillic_uz": "–ö–æ–≥–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Kogon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö–∞–≥–∞–Ω",
    "aliases": [
      "kogon", "kagan", "kogon shaxri", "kogon city",
      "kogon-da", "kogon-dan", "kogon-ga", "kogonlik",
      "–ö–æ–≥–æ–Ω", "–ö–∞–≥–∞–Ω"
    ]
  },

  "gijduvon": {
    "topic_id": 101372,
    "cyrillic_uz": "“í–∏–∂–¥—É–≤–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "G'ijduvon tumani",
    "russian": "–ì–∏–∂–¥—É–≤–æ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "g'ijduvon", "gijduvon", "g‚Äòijduvon", "gijduvon tumani", "gijduvon rayon",
      "gijduvonda", "gijduvondan", "gijduvonga", "gijduvonlik",
      "“í–∏–∂–¥—É–≤–æ–Ω", "–ì–∏–∂–¥—É–≤–æ–Ω", "–ì–∏–∂–¥—É–≤–æ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "romitan": {
    "topic_id": 101372,
    "cyrillic_uz": "–†–æ–º–∏—Ç–∞–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Romitan tumani",
    "russian": "–†–æ–º–∏—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "romitan", "romitan tumani", "romitan rayon",
      "romitanda", "romitandan", "romitanga", "romitanlik",
      "–†–æ–º–∏—Ç–∞–Ω", "–†–æ–º–∏—Ç–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "shofirkon": {
    "topic_id": 101372,
    "cyrillic_uz": "–®–æ—Ñ–∏—Ä–∫–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Shofirkon tumani",
    "russian": "–®–∞—Ñ–∏—Ä–∫–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "shofirkon", "shafirkon", "shofirkon tumani", "shafirkon rayon",
      "shofirkonda", "shofirkondan", "shofirkonga", "shofirkonlik",
      "–®–æ—Ñ–∏—Ä–∫–æ–Ω", "–®–∞—Ñ–∏—Ä–∫–∞–Ω", "–®–∞—Ñ–∏—Ä–∫–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qorakol": {
    "topic_id": 101372,
    "cyrillic_uz": "“ö–æ—Ä–∞–∫—û–ª —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Qorako ªl tumani",
    "russian": "–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qorakol", "qorakul", "qorako ªl", "qorakol tumani", "karakul rayon",
      "qorakolda", "qorakoldan", "qorakolga", "qorakollik",
      "“ö–æ—Ä–∞–∫—û–ª", "–ö–∞—Ä–∞–∫—É–ª—å", "–ö–∞—Ä–∞–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "samarqand_city": {
    "topic_id": 101369,
    "cyrillic_uz": "–°–∞–º–∞—Ä“õ–∞–Ω–¥ —à–∞“≥—Ä–∏",
    "latin_uz": "Samarqand shahri",
    "russian": "–≥–æ—Ä–æ–¥ –°–∞–º–∞—Ä–∫–∞–Ω–¥",
    "aliases": [
      "samarqand", "samarkand", "samarqand shaxri", "samarqand city",
      "samarqanda", "samarqandan", "samarqandga", "samarqandlik",
      "–°–∞–º–∞—Ä“õ–∞–Ω–¥", "–°–∞–º–∞—Ä–∫–∞–Ω–¥"
    ]
  },

  "urgut": {
    "topic_id": 101369,
    "cyrillic_uz": "–£—Ä–≥—É—Ç —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Urgut tumani",
    "russian": "–£—Ä–≥—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "urgut", "urgut tumani", "urgut rayon",
      "urgutda", "urgutdan", "urgutga", "urgutlik",
      "–£—Ä–≥—É—Ç", "–£—Ä–≥—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "kattaqorgon": {
    "topic_id": 101369,
    "cyrillic_uz": "–ö–∞—Ç—Ç–∞“õ—û—Ä“ì–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Kattaqo ªrg ªon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö–∞—Ç—Ç–∞-–ö—É—Ä–≥–∞–Ω",
    "aliases": [
      "kattaqorgon", "kattakurgan", "kattaqo ªrg ªon", "katta-qurghon", "katta-qurgan",
      "kattaqorgon shaxri", "kattaqorgon city",
      "kattaqorgonda", "kattaqorgondan", "kattaqorgonga", "kattaqorgonlik",
      "–ö–∞—Ç—Ç–∞“õ—û—Ä“ì–æ–Ω", "–ö–∞—Ç—Ç–∞-–ö—É—Ä–≥–∞–Ω", "–≥–æ—Ä–æ–¥ –ö–∞—Ç—Ç–∞-–ö—É—Ä–≥–∞–Ω"
    ]
  },

  "payariq": {
    "topic_id": 101369,
    "cyrillic_uz": "–ü–∞—è—Ä–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Payariq tumani",
    "russian": "–ü–∞—è—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "payariq", "payariq tumani", "payariq rayon", "payarik",
      "payariqda", "payariqdan", "payariqga", "payariqlik",
      "–ü–∞—è—Ä–∏“õ", "–ü–∞—è—Ä—ã–∫", "–ü–∞—è—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "ishtixon": {
    "topic_id": 101369,
    "cyrillic_uz": "–ò—à—Ç–∏—Ö–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Ishtixon tumani",
    "russian": "–ò—à—Ç–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "ishtixon", "ishtixan", "ishtixon tumani", "ishtixon rayon",
      "ishtixonda", "ishtixondan", "ishtixonga", "ishtixonlik",
      "–ò—à—Ç–∏—Ö–æ–Ω", "–ò—à—Ç–∏—Ö–∞–Ω", "–ò—à—Ç–∏—Ö–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "jomboy": {
    "topic_id": 101369,
    "cyrillic_uz": "–ñ–æ–º–±–æ–π —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Jomboy tumani",
    "russian": "–î–∂–∞–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "jomboy", "jambay", "jomboy tumani", "jambay rayon",
      "jomboyda", "jomboydan", "jomboyga", "jomboylik",
      "–ñ–æ–º–±–æ–π", "–î–∂–∞–º–±–∞–π", "–î–∂–∞–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "nurabod": {
    "topic_id": 101369,
    "cyrillic_uz": "–ù—É—Ä–∞–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Nurabod tumani",
    "russian": "–ù—É—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "nurabod", "nurabad", "nurabod tumani", "nurabad rayon",
      "nurabodda", "nuraboddan", "nurabodga", "nurabodlik",
      "–ù—É—Ä–∞–±–æ–¥", "–ù—É—Ä–∞–±–∞–¥", "–ù—É—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qashqadaryo_city": {
    "topic_id": 101380,
    "cyrillic_uz": "“ö–∞—à“õ–∞–¥–∞—Ä—ë –≤–∏–ª–æ—è—Ç–∏",
    "latin_uz": "Qashqadaryo viloyati",
    "russian": "–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "qashqadaryo", "kashkadaryo", "qashqadaryo viloyati", "kashkadarya oblast", "qashqadaryo region",
      "qashqadaryoga", "qashqadaryodan", "qashqadaryoda", "qashqadaryoga", "qashqadaryodan",
      "qashqadaryoga", "qashqadaryodi", "qashqadaryodi", "qashqadaryoo",  # –†–∞–∑–ª–∏—á–Ω—ã–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è "–∫—É–¥–∞"
      "–∫–∞—à–∫–∞–¥–∞—Ä—å—è", "–ö–∞—à–∫–∞–¥–∞—Ä—å—è", "–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "“õ–∞—à“õ–∞–¥–∞—Ä—ë", "“ö–∞—à“õ–∞–¥–∞—Ä—ë"
    ]
  },

  "qarshi": {
    "topic_id": 101380,
    "cyrillic_uz": "“ö–∞—Ä—à–∏ —à–∞“≥—Ä–∏",
    "latin_uz": "Qarshi shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ö–∞—Ä—à–∏",
    "aliases": [
      "qarshi", "karshi", "qarshi shaxri", "karshi city",
      "qarshida", "qarshidan", "qarshiga", "qarshilik",
      "“ö–∞—Ä—à–∏", "–ö–∞—Ä—à–∏", "–≥–æ—Ä–æ–¥ –ö–∞—Ä—à–∏"
    ]
  },

  "olmos": {
    "topic_id": 101383,
    "cyrillic_uz": "–û–ª–º–æ—Å —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Olmos tumani", 
    "russian": "–û–ª–º–æ—Å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "olmos", "almos", "olmos tumani", "olmos rayon",
      "olmosda", "olmosdan", "olmosga", "olmoslik",
      "–û–ª–º–æ—Å", "–û–ª–º–æ—Å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "shahrisabz": {
    "topic_id": 101380,
    "cyrillic_uz": "–®–∞“≥—Ä–∏—Å–∞–±–∑ —à–∞“≥—Ä–∏",
    "latin_uz": "Shahrisabz shahri",
    "russian": "–≥–æ—Ä–æ–¥ –®–∞—Ö—Ä–∏—Å–∞–±–∑",
    "aliases": [
      "shahrisabz", "shakhrisabz", "shahrisabz shaxri", "shahrisabz city",
      "shahrisabzda", "shahrisabzdan", "shahrisabzga", "shahrisabzlik",
      "–®–∞“≥—Ä–∏—Å–∞–±–∑", "–®–∞—Ö—Ä–∏—Å–∞–±–∑"
    ]
  },

  "koson": {
    "topic_id": 101380,
    "cyrillic_uz": "–ö–æ—Å–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Koson tumani",
    "russian": "–ö–∞—Å–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "koson", "kason", "koson tumani", "kason rayon",
      "kosonda", "kosondan", "kosonga", "kosonlik",
      "–ö–æ—Å–æ–Ω", "–ö–∞—Å–∞–Ω", "–ö–∞—Å–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "guzar": {
    "topic_id": 101380,
    "cyrillic_uz": "–ì—É–∑–∞—Ä —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Guzar tumani",
    "russian": "–ì—É–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "guzar", "guzar tumani", "guzar rayon",
      "guzarda", "guzardan", "guzarga", "guzarlik",
      "–ì—É–∑–∞—Ä", "–ì—É–∑–∞—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "muborak": {
    "topic_id": 101380,
    "cyrillic_uz": "–ú—É–±–æ—Ä–∞–∫ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Muborak tumani",
    "russian": "–ú—É–±–∞—Ä–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "muborak", "mubarak", "muborak tumani", "muborak rayon",
      "muborakda", "muborakdan", "muborakga", "muboraklik",
      "–ú—É–±–æ—Ä–∞–∫", "–ú—É–±–∞—Ä–µ–∫", "–ú—É–±–∞—Ä–µ–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "chiroqchi": {
    "topic_id": 101380,
    "cyrillic_uz": "–ß–∏—Ä–æ“õ—á–∏ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Chiroqchi tumani",
    "russian": "–ß–∏—Ä–∞–∫—á–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "chiroqchi", "chiroq-chi", "chiroqchi tumani", "chiroqchi rayon",
      "chiroqchida", "chiroqchidan", "chiroqchiga", "chiroqchilik",
      "–ß–∏—Ä–æ“õ—á–∏", "–ß–∏—Ä–∞–∫—á–∞", "–ß–∏—Ä–∞–∫—á–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yakkabog": {
    "topic_id": 101380,
    "cyrillic_uz": "–Ø–∫–∫–∞–±–æ“ì —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Yakkabog' tumani",
    "russian": "–Ø–∫–∫–∞–±–∞–≥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yakkabog", "yakkabog'", "yakka-bog", "yakka-bog'", "yakkabog tumani",
      "–Ø–∫–∫–∞–±–æ–≥", "–Ø–ö–ö–ê–ë–û–ì", "yaqqabog", "YAQQABOG",  # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
      "yakkabogda", "yakkabogdan", "yakkabogga", "yakkaboglik",
      "–Ø–∫–∫–∞–±–æ“ì", "–Ø–∫–∫–∞–±–∞–≥", "–Ø–∫–∫–∞–±–∞–≥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "termiz": {
    "topic_id": 101363,
    "cyrillic_uz": "–¢–µ—Ä–º–∏–∑ —à–∞“≥—Ä–∏",
    "latin_uz": "Termiz shahri",
    "russian": "–≥–æ—Ä–æ–¥ –¢–µ—Ä–º–µ–∑",
    "aliases": [
      "termiz", "termez", "termiz shaxri", "termiz city",
      "termizda", "termizdan", "termizga", "termizlik",
      "–¢–µ—Ä–º–∏–∑", "–¢–µ—Ä–º–µ–∑"
    ]
  },

  "denov": {
    "topic_id": 101363,
    "cyrillic_uz": "–î–µ–Ω–æ–≤ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Denov tumani",
    "russian": "–î–µ–Ω–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "denov", "denau", "denov tumani", "denau rayon",
      "denovda", "denovdan", "denovga", "denovlik",
      "–î–µ–Ω–æ–≤", "–î–µ–Ω–∞—É", "–î–µ–Ω–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "boysun": {
    "topic_id": 101363,
    "cyrillic_uz": "–ë–æ–π—Å—É–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Boysun tumani",
    "russian": "–ë–∞–π—Å—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "boysun", "baysun", "boysun tumani", "baysun rayon",
      "boysunda", "boysundan", "boysunga", "boysunlik",
      "–ë–æ–π—Å—É–Ω", "–ë–∞–π—Å—É–Ω", "–ë–∞–π—Å—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "sherobod": {
    "topic_id": 101363,
    "cyrillic_uz": "–®–µ—Ä–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Sherobod tumani",
    "russian": "–®–µ—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "sherobod", "sherabad", "sherobod tumani", "sherabad rayon",
      "sherobodda", "sheroboddan", "sherobodga", "sherobodlik",
      "–®–µ—Ä–æ–±–æ–¥", "–®–µ—Ä–∞–±–∞–¥", "–®–µ—Ä–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qumqorgon": {
    "topic_id": 101363,
    "cyrillic_uz": "“ö—É–º“õ—û—Ä“ì–æ–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Qumqo ªrg ªon tumani",
    "russian": "–ö—É–º-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qumqorgon", "qumqorƒüon", "qumqo ªrg ªon", "qumqurgan", "qum-kurgan",
      "qumqorgon tumani", "qumqorgon rayon",
      "qumqorgonda", "qumqorgondan", "qumqorgonga", "qumqorgonlik",
      "“ö—É–º“õ—û—Ä“ì–æ–Ω", "–ö—É–º-–ö—É—Ä–≥–∞–Ω", "–ö—É–º-–ö—É—Ä–≥–∞–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "uzun": {
    "topic_id": 101363,
    "cyrillic_uz": "–£–∑—É–Ω —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Uzun tumani",
    "russian": "–£–∑—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "uzun", "uzun tumani", "uzun rayon",
      "uzunda", "uzundan", "uzunga", "uzunlik",
      "–£–∑—É–Ω", "–£–∑—É–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "navoi_city": {
    "topic_id": 101379,
    "cyrillic_uz": "–ù–∞–≤–æ–∏–π —à–∞“≥—Ä–∏",
    "latin_uz": "Navoiy shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ù–∞–≤–æ–∏",
    "aliases": [
      "navoiy", "navoi", "navoyi", "navoiy shaxri", "navoi city",
      "navoiyda", "navoiydan", "navoiyga", "navoiylik",
      "qiziltepaga", "qiziltepa", "qiziltepa tumani",  # –ö–∏–∑–∏–ª—Ç–µ–ø–∞ —Ä–∞–π–æ–Ω –≤ –ù–∞voiy
      "g'azg'on", "gazgon", "g'azg'ondan", "gazgondan",  # –ì–∞–∑–≥–æ–Ω - —Ä–∞–π–æ–Ω –≤ –ù–∞voiy
      "–ù–∞–≤–æ–∏–π", "–ù–∞–≤–æ–∏"
    ]
  },

  "zarafshan": {
    "topic_id": 101379,
    "cyrillic_uz": "–ó–∞—Ä–∞—Ñ—à–æ–Ω —à–∞“≥—Ä–∏",
    "latin_uz": "Zarafshon shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ó–∞—Ä–∞—Ñ—à–∞–Ω",
    "aliases": [
      "zarafshon", "zarafshan", "zarafshon shaxri", "zarafshon city",
      "zarafshonda", "zarafshondan", "zarafshonga", "zarafshonlik",
      "–ó–∞—Ä–∞—Ñ—à–æ–Ω", "–ó–∞—Ä–∞—Ñ—à–∞–Ω"
    ]
  },

  "karmana": {
    "topic_id": 101379,
    "cyrillic_u–∑": "–ö–∞—Ä–º–∞–Ω–∞ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Karmana tumani",
    "russian": "–ö–∞—Ä–º–∞–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "karmana", "karmana tumani", "karmana rayon",
      "karmanada", "karmanadan", "karmanaga", "karmanalik",
      "–ö–∞—Ä–º–∞–Ω–∞", "–ö–∞—Ä–º–∞–Ω–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "nurota": {
    "topic_id": 101379,
    "cyrillic_u–∑": "–ù—É—Ä–æ—Ç–∞ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Nurota tumani",
    "russian": "–ù—É—Ä–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "nurota", "nurat", "nurota tumani", "nurat rayon",
      "nurotada", "nurotadan", "nurotaga", "nurotalik",
      "–ù—É—Ä–æ—Ç–∞", "–ù—É—Ä–∞—Ç", "–ù—É—Ä–∞—Ç–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "konimex": {
    "topic_id": 101379,
    "cyrillic_u–∑": "–ö–æ–Ω–∏–º–µ—Ö —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Konimex tumani",
    "russian": "–ö–∞–Ω–∏–º–µ—Ö—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "konimex", "kanimeh", "konimex tumani", "kanimeh rayon",
      "konimexda", "konimexdan", "konimexga", "konimexlik",
      "–ö–æ–Ω–∏–º–µ—Ö", "–ö–∞–Ω–∏–º–µ—Ö", "–ö–∞–Ω–∏–º–µ—Ö—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "uchquduq": {
    "topic_id": 101379,
    "cyrillic_u–∑": "–£—á“õ—É–¥—É“õ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Uchquduq tumani",
    "russian": "–£—á–∫—É–¥—É–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "uchquduq", "uchkuduk", "uchquduq tumani", "uchkuduk rayon",
      "uchquduqda", "uchquduqdan", "uchquduqga", "uchquduqlik",
      "–£—á“õ—É–¥—É“õ", "–£—á–∫—É–¥—É–∫", "–£—á–∫—É–¥—É–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "guliston": {
    "topic_id": 101378,
    "cyrillic_u–∑": "–ì—É–ª–∏—Å—Ç–æ–Ω —à–∞“≥—Ä–∏",
    "latin_u–∑": "Guliston shahri",
    "russian": "–≥–æ—Ä–æ–¥ –ì—É–ª–∏—Å—Ç–∞–Ω",
    "aliases": [
      "guliston", "gulistan", "guliston shaxri", "guliston city",
      "gulistonda", "gulistondan", "gulistonga", "gulistonlik",
      "–ì—É–ª–∏—Å—Ç–æ–Ω", "–ì—É–ª–∏—Å—Ç–∞–Ω"
    ]
  },

  "shirin": {
    "topic_id": 101378,
    "cyrillic_u–∑": "–®–∏—Ä–∏–Ω —à–∞“≥—Ä–∏",
    "latin_u–∑": "Shirin shahri",
    "russian": "–≥–æ—Ä–æ–¥ –®–∏—Ä–∏–Ω",
    "aliases": [
      "shirin", "shirin shaxri", "shirin city",
      "shirinda", "shirindan", "shiringa", "shirinlik",
      "–®–∏—Ä–∏–Ω"
    ]
  },

  "yangier": {
    "topic_id": 101378,
    "cyrillic_u–∑": "–Ø–Ω–≥–∏—ë—Ä —à–∞“≥—Ä–∏",
    "latin_u–∑": "Yangiyer shahri",
    "russian": "–≥–æ—Ä–æ–¥ –Ø–Ω–≥–∏—ë—Ä",
    "aliases": [
      "yangier", "yangiyer", "yangiyer shaxri", "yangiyer city",
      "yangiyerda", "yangiyerdan", "yangiyerga", "yangiyerlik",
      "–Ø–Ω–≥–∏—ë—Ä", "–Ø–Ω–≥–∏—ë—Ä"
    ]
  },

  "boyovut": {
    "topic_id": 101378,
    "cyrillic_u–∑": "–ë–æ—ë–≤—É—Ç —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Boyovut tumani",
    "russian": "–ë–∞—è—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "boyovut", "bayaut", "boyovut tumani", "bayaut rayon",
      "boyovutda", "boyovutdan", "boyovutga", "boyovutlik",
      "–ë–æ—ë–≤—É—Ç", "–ë–∞—è—É—Ç", "–ë–∞—è—É—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "mirzaobod": {
    "topic_id": 101378,
    "cyrillic_u–∑": "–ú–∏—Ä–∑–∞–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Mirzaobod tumani",
    "russian": "–ú–∏—Ä–∑–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "mirzaobod", "mirzaabad", "mirza-obod", "mirzaobod tumani", "mirzaabad rayon",
      "mirzaobodda", "mirzaoboddan", "mirzaobodga", "mirzaobodlik",
      "–ú–∏—Ä–∑–∞–æ–±–æ–¥", "–ú–∏—Ä–∑–∞–∞–±–∞–¥", "–ú–∏—Ä–∑–∞–∞–±–∞–¥—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },



  "jizzakh_city": {
    "topic_id": 101377,
    "cyrillic_u–∑": "–ñ–∏–∑–∑–∞—Ö —à–∞“≥—Ä–∏",
    "latin_u–∑": "Jizzax shahri",
    "russian": "–≥–æ—Ä–æ–¥ –î–∂–∏–∑–∞–∫",
    "aliases": [
      "jizzax", "jizzakh", "jizzax shaxri", "jizzax city",
      "jizzaq", "jizzaq zomin", "jizzaq zomindan",  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ
      "jizzaxda", "jizzaxdan", "jizzaxga", "jizzaxlik",
      "–≥–∞–≥–∞—Ä–∏–Ω", "gagarin", "–≥–∞–≥–∞—Ä–∏–Ω–¥–∞–Ω", "gagarindan",  # –ì–∞–≥–∞—Ä–∏–Ω = –ñ–∏–∑–∑–∞—Ö
      "–ñ–∏–∑–∑–∞—Ö", "–î–∂–∏–∑–∞–∫"
    ]
  },

  "gallaaral": {
    "topic_id": 101377,
    "cyrillic_u–∑": "“í–∞–ª–ª–∞–æ—Ä–∞–ª —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "G'allao ªral tumani",
    "russian": "–ì–∞–ª–ª–∞–∞—Ä–∞–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "gallaaral", "g'allao'ral", "galla-aral", "gallaaral tumani", "gallaaral rayon",
      "gallaaralda", "gallaaraldan", "gallaaralga", "gallaarallik",
      "“í–∞–ª–ª–∞–æ—Ä–∞–ª", "–ì–∞–ª–ª–∞–∞—Ä–∞–ª—å", "–ì–∞–ª–ª–∞–∞—Ä–∞–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "pakhtakor": {
    "topic_id": 101377,
    "cyrillic_u–∑": "–ü–∞—Ö—Ç–∞–∫–æ—Ä —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Pakhtakor tumani",
    "russian": "–ü–∞—Ö—Ç–∞–∫–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "pakhtakor", "pakhta-kor", "pakhtakor tumani", "pakhtakor rayon",
      "pakhtakorda", "pakhtakordan", "pakhtakorga", "pakhtakorlik",
      "–ü–∞—Ö—Ç–∞–∫–æ—Ä", "–ü–∞—Ö—Ç–∞–∫–æ—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "zomin": {
    "topic_id": 101377,
    "cyrillic_u–∑": "–ó–æ–º–∏–Ω —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Zomin tumani",
    "russian": "–ó–∞–∞–º–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "zomin", "zaamin", "zomin tumani", "zaamin rayon",
      "zominda", "zomindan", "zominga", "zominlik",
      "–ó–æ–º–∏–Ω", "–ó–∞–∞–º–∏–Ω", "–ó–∞–∞–º–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "forish": {
    "topic_id": 101377,
    "cyrillic_u–∑": "–§–æ—Ä–∏—à —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Forish tumani",
    "russian": "–§–∞—Ä–∏—à—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "forish", "farish", "forish tumani", "farish rayon",
      "forishda", "forishdan", "forishga", "forishlik",
      "–§–æ—Ä–∏—à", "–§–∞—Ä–∏—à", "–§–∞—Ä–∏—à—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "arnasoy": {
    "topic_id": 101382,  # –ò–∑–º–µ–Ω–µ–Ω —Å 101377 –Ω–∞ 101382 (–§–µ—Ä–≥–∞–Ω–∞)
    "cyrillic_uz": "–ê—Ä–Ω–∞—Å–æ–π —Ç—É–º–∞–Ω–∏",
    "latin_uz": "Arnasoy tumani",
    "russian": "–ê—Ä–Ω–∞—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "arnasoy", "arnasay", "arnasoy tumani", "arnasay rayon",
      "arnasoyda", "arnasoydan", "arnasoyga", "arnasoylik",
      "–ê—Ä–Ω–∞—Å–æ–π", "–ê—Ä–Ω–∞—Å–∞–π", "–ê—Ä–Ω–∞—Å–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "baxmal": {
    "topic_id": 101377,
    "cyrillic_u–∑": "–ë–∞—Ö–º–∞–ª —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Baxmal tumani",
    "russian": "–ë–∞—Ö–º–∞–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "baxmal", "bakhmal", "baxmal tumani", "bakhmal rayon",
      "baxmalda", "baxmaldan", "baxmalga", "baxmallik",
      "–ë–∞—Ö–º–∞–ª", "–ë–∞—Ö–º–∞–ª—å", "–ë–∞—Ö–º–∞–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "xorazm_city": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–•–æ—Ä–∞–∑–º –≤–∏–ª–æ—è—Ç–∏",
    "latin_u–∑": "Xorazm viloyati",
    "russian": "–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å",
    "aliases": [
      "xorazm", "xorezm", "xorazm viloyati", "khorezm oblast", "xorazm region",
      "xorazmga", "xorazmdan", "xorazmda", "—Ö–æ—Ä–∞–∑–º–≥–∞", "—Ö–æ—Ä–∞–∑–º–¥–∞–Ω",
      "urganch", "urgench", "urganch shaxri", "urgench city",
      "urganchda", "urganchdan", "urganchga", "urganchlik",
      "—Ö–æ—Ä–∞–∑–º", "–•–æ—Ä–∞–∑–º", "–•–æ—Ä–µ–∑–º", "–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å", "–£—Ä–≥–∞–Ω—á", "–£—Ä–≥–µ–Ω—á"
    ]
  },

  "khiva": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–•–∏–≤–∞ —à–∞“≥—Ä–∏",
    "latin_u–∑": "Xiva shahri",
    "russian": "–≥–æ—Ä–æ–¥ –•–∏–≤–∞",
    "aliases": [
      "xiva", "khiva", "xiva shaxri", "khiva city",
      "xivada", "xivadan", "xivaga", "xivalik",
      "–•–∏–≤–∞"
    ]
  },

  "shovot": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–®–æ–≤–æ—Ç —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Shovot tumani",
    "russian": "–®–∞–≤–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "shovot", "shavat", "shovot tumani", "shavat rayon",
      "shovotda", "shovotdan", "shovotga", "shovotlik",
      "–®–æ–≤–æ—Ç", "–®–∞–≤–∞—Ç", "–®–∞–≤–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "yangiariq": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–Ø–Ω–≥–∏–∞—Ä–∏“õ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Yangiariq tumani",
    "russian": "–Ø–Ω–≥–∏–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "yangiariq", "yangi-arik", "yangiarik", "yangiariq tumani", "yangiarik rayon",
      "yangiariqda", "yangiariqdan", "yangiariqga", "yangiariqlik",
      "–Ø–Ω–≥–∏–∞—Ä–∏“õ", "–Ø–Ω–≥–∏–∞—Ä—ã–∫", "–Ø–Ω–≥–∏–∞—Ä—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "bogot": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–ë–æ“ì–æ—Ç —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Bog'ot tumani",
    "russian": "–ë–∞–≥–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "bogot", "bog'ot", "bog ªot", "bogat", "bogot tumani", "bogat rayon",
      "bogotda", "bogotdan", "bogotga", "bogotlik",
      "–ë–æ“ì–æ—Ç", "–ë–∞–≥–∞—Ç", "–ë–∞–≥–∞—Ç—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "hazarasp": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–•–∞–∑–∞—Ä–∞—Å–ø —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Xazarasp tumani",
    "russian": "–•–∞–∑–∞—Ä–∞—Å–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "xazarasp", "hazarasp", "xazarasp tumani", "hazarasp rayon",
      "xazaraspda", "xazaraspdan", "xazaraspga", "xazarasplik",
      "–•–∞–∑–∞—Ä–∞—Å–ø", "–•–∞–∑–∞—Ä–∞—Å–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "gurlan": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–ì—É—Ä–ª–∞–Ω —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Gurlan tumani",
    "russian": "–ì—É—Ä–ª–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "gurlan", "gurlan tumani", "gurlan rayon",
      "gurlanda", "gurlandan", "gurlanga", "gurlanlik",
      "–ì—É—Ä–ª–∞–Ω", "–ì—É—Ä–ª–µ–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "qoshkopir": {
    "topic_id": 101660,
    "cyrillic_u–∑": "“ö—û—à–∫—û–ø–∏—Ä —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Qo ªshko ªpir tumani",
    "russian": "–ö–æ—à–∫–µ–ø–∏—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qoshkopir", "koshkepir", "qo`shko`pir", "qoshkopir tumani", "koshkepir rayon",
      "qoshkopirda", "qoshkopirdan", "qoshkopirga", "qoshkopirlik",
      "“ö—û—à–∫—û–ø–∏—Ä", "–ö–æ—à–∫–µ–ø–∏—Ä", "–ö–æ—à–∫–µ–ø–∏—Ä—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "tuproqqala": {
    "topic_id": 101660,
    "cyrillic_u–∑": "–¢—É–ø—Ä–æ“õ“õ–∞–ª–∞ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Tuproqqala tumani",
    "russian": "–¢—É–ø—Ä–æ–∫–∫–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "tuproqqala", "tuprok-kala", "tuproqqala tumani", "tuprok-kala rayon",
      "tuproqqalada", "tuproqqaladan", "tuproqqalaga", "tuproqqalalik",
      "–¢—É–ø—Ä–æ“õ“õ–∞–ª–∞", "–¢—É–ø—Ä–æ–∫–∫–∞–ª–∞", "–¢—É–ø—Ä–æ–∫–∫–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },







  "karakalpakstan": {
    "topic_id": 101381,
    "cyrillic_u–∑": "“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å–∏",
    "latin_u–∑": "Qoraqalpog'iston Respublikasi",
    "russian": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω",
    "aliases": [
      "qoraqalpog'iston", "qoraqalpoqiston", "karakalpakstan", "karakalpak republic",
      "qoraqalpog'iston respublikasi", "karakalpakstan respublikasi",
      "nukus", "nukus shaxri", "nukus city",  # –û–±—ä–µ–¥–∏–Ω–µ–Ω–æ —Å nukus
      "nukusda", "nukusdan", "nukusga", "nukuslik",
      "“ö–æ—Ä–∞“õ–∞–ª–ø–æ“ì–∏—Å—Ç–æ–Ω", "–ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω", "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω", "–ù—É–∫—É—Å"
    ]
  },

  "muynak": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ú—û–π–Ω–æ“õ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Mo'ynoq tumani",
    "russian": "–ú—É–π–Ω–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "mo'ynoq", "muynak", "moynoq", "muynak tumani", "muynak rayon",
      "mo'ynoqda", "mo'ynoqdan", "mo'ynoqqa", "mo'ynoqlik",
      "–ú—û–π–Ω–æ“õ", "–ú—É–π–Ω–∞–∫", "–ú—É–π–Ω–∞–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "takhiatash": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–¢–∞—Ö–∏–∞—Ç–∞—à —à–∞“≥—Ä–∏",
    "latin_u–∑": "Taxiatash shahri",
    "russian": "–≥–æ—Ä–æ–¥ –¢–∞—Ö–∏–∞—Ç–∞—à",
    "aliases": [
      "taxiatash", "takhiatash", "taxiatash shaxri", "takhiatash city",
      "taxiatashda", "taxiatashdan", "taxiatashga", "taxiatashlik",
      "–¢–∞—Ö–∏–∞—Ç–∞—à"
    ]
  },

  "turtkul": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–¢—û—Ä—Ç–∫—û–ª —à–∞“≥—Ä–∏",
    "latin_u–∑": "To'rtko'l shahri",
    "russian": "–≥–æ—Ä–æ–¥ –¢—É—Ä—Ç–∫—É–ª—å",
    "aliases": [
      "to'rtko'l", "tortkul", "turtkul", "to'rtko'l shaxri", "turtkul city",
      "to'rtko'lda", "to'rtko'ldan", "to'rtko'lga", "to'rtko'llik",
      "–¢—û—Ä—Ç–∫—û–ª", "–¢—É—Ä—Ç–∫—É–ª—å"
    ]
  },

  "beruniy": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ë–µ—Ä—É–Ω–∏–π —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Beruniy tumani",
    "russian": "–ë–µ—Ä—É–Ω–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "beruniy", "beruni", "beruniy tumani", "beruni rayon",
      "beruniyda", "beruniidan", "beruniiga", "beruniilik",
      "–ë–µ—Ä—É–Ω–∏–π", "–ë–µ—Ä—É–Ω–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "karauzyak": {
    "topic_id": 101381,
    "cyrillic_u–∑": "“ö–∞—Ä–∞—û–∑—è–∫ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Qaro'zyak tumani",
    "russian": "–ö–∞—Ä–∞—É–∑—è–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qaro'zyak", "karauzyak", "qaro'zyak tumani", "karauzyak rayon",
      "qaro'zyakda", "qaro'zyakdan", "qaro'zyakga", "qaro'zyaklik",
      "“ö–∞—Ä–∞—û–∑—è–∫", "–ö–∞—Ä–∞—É–∑—è–∫", "–ö–∞—Ä–∞—É–∑—è–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "kegeyli": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ö–µ–≥–µ–π–ª–∏ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Kegeyli tumani",
    "russian": "–ö–µ–≥–µ–π–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "kegeyli", "kegeyli tumani", "kegeyli rayon",
      "kegeylida", "kegeylidan", "kegeyliga", "kegeylilik",
      "–ö–µ–≥–µ–π–ª–∏", "–ö–µ–≥–µ–π–ª–∏–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "amudarya": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ê–º—É–¥–∞—Ä—ë —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Amudaryo tumani",
    "russian": "–ê–º—É–¥–∞—Ä—å–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "amudaryo", "amudarya", "amudaryo tumani", "amudarya rayon",
      "amudaryoda", "amudaryodan", "amudaryoga", "amudaryolik",
      "–ê–º—É–¥–∞—Ä—ë", "–ê–º—É–¥–∞—Ä—å–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "kanlikol": {
    "topic_id": 101381,
    "cyrillic_u–∑": "“ö–æ–Ω–ª–∏“õ—û–ª —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Qonliqo'l tumani",
    "russian": "–ö–∞–Ω–ª—ã–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "qonliqo'l", "qonliko'l", "konlikul", "kanlikol", "qonliqo'l tumani", "kanlikol rayon",
      "qonliqo'lda", "qonliqo'ldan", "qonliqo'lga", "qonliqo'llik",
      "“ö–æ–Ω–ª–∏“õ—û–ª", "–ö–∞–Ω–ª—ã–∫—É–ª—å", "–ö–∞–Ω–ª—ã–∫—É–ª—å—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "chimbay": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ß–∏–º–±–æ–π —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Chimboy tumani",
    "russian": "–ß–∏–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "chimboy", "chimbay", "chimboy tumani", "chimbay rayon",
      "chimboyda", "chimboydan", "chimboyga", "chimboylik",
      "–ß–∏–º–±–æ–π", "–ß–∏–º–±–∞–π", "–ß–∏–º–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "shumanay": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–®—É–º–∞–Ω–∞–π —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Shumanay tumani",
    "russian": "–®—É–º–∞–Ω–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "shumanay", "shumanai", "shumanay tumani", "shumanay rayon",
      "shumanayda", "shumanaydan", "shumanayga", "shumanaylik",
      "–®—É–º–∞–Ω–∞–π", "–®—É–º–∞–Ω–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "ellikqala": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–≠–ª–ª–∏–∫“õ–∞–ª–∞ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Ellikqala tumani",
    "russian": "–≠–ª–ª–∏–∫–∫–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "ellikqala", "ellik-kala", "ellikqala tumani", "ellik-kala rayon",
      "ellikqalada", "ellikqaladan", "ellikqalaga", "ellikqalalik",
      "–≠–ª–ª–∏–∫“õ–∞–ª–∞", "–≠–ª–ª–∏–∫–∫–∞–ª–∞", "–≠–ª–ª–∏–∫–∫–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "bo'zatov": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–ë—û–∑–∞—Ç–æ–≤ —Ç—É–º–∞–Ω–∏",
    "latin_u–∑": "Bo'zatov tumani",
    "russian": "–ë–æ–∑–∞—Ç–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω",
    "aliases": [
      "bo'zatov", "bozatov", "bo'zatov tumani", "bozatau rayon",
      "bo'zatovda", "bo'zatovdan", "bo'zatovga", "bo'zatovlik",
      "–ë—û–∑–∞—Ç–æ–≤", "–ë–æ–∑–∞—Ç–∞—É", "–ë–æ–∑–∞—Ç–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω"
    ]
  },

  "xojeli": {
    "topic_id": 101381,
    "cyrillic_u–∑": "–•—û–∂–µ–ª–∏ —à–∞“≥—Ä–∏",
    "latin_u–∑": "Xo'jeli shahri",
    "russian": "–≥–æ—Ä–æ–¥ –•–æ–¥–∂–µ–π–ª–∏",
    "aliases": [
      "xo'jeli", "khodjeyli", "xojeli", "xo'jeli shaxri", "khodjeyli city",
      "xo'jelida", "xo'jelidan", "xo'jeliga", "xo'jelilik",
      "–•—û–∂–µ–ª–∏", "–•–æ–¥–∂–µ–π–ª–∏"
    ]
  },
    'fura_bozor': {
        'topic_id': 101361,
        'keywords': [
            'fura bazar', 'fura bozor', 'fura bozori', '—Ñ—É—Ä–∞ –±–æ–∑–æ—Ä', 'bozor fura', 'fura bazar', 'fura bozor', 'fura bozori', '—Ñ—É—Ä–∞ –±–æ–∑–æ—Ä', 'bozor fura', 'fura bozoriga', 'fura bozordan'
        ]
    },
    'reklama': {
        'topic_id': 101360,
        'keywords': [
            'reklama', 'reklama post', '—Ä–µ–∫–ª–∞–º–∞', 'reklama berish', 'reklama joylashtirish', 'reklama', 'reklama post', '—Ä–µ–∫–ª–∞–º–∞', 'reklama berish', 'reklama joylashtirish', 'reklamaga',
            'reklamadan', 'reklama', '—Ä–µ–∫–ª–∞–º–∞', 'reklama berish', 'reklama joylashtirish',
            'sotiladi', 'sotilad', 'sotaman', 'narxi', 'dastafka', 'dastavka', 'sotiladi', 'narxi', 'dastafka', 'sotuv', 'reklama',
            'sotuv', 'sotuvda', 'sotib olish', 'sotiladi reklama', 'reklama sotiladi', 'reklama', '—Ä–µ–∫–ª–∞–º–∞', 'sotiladi', 'sotuv', 'narxi',
            'dastafka', '—Ä–µ–º–æ–Ω—Ç',
            '–π–∏–ª–∏', 'sotaman', 'olmoq'
        ]
    },
    'yangiliklar': {
        'topic_id': 101359,
        'keywords': [
            'yangilik', 'yangiliklar', '–Ω–æ–≤–æ—Å—Ç–∏', 'news', 'xabar', "so'ngi yangiliklar", 'yangilik', 'yangiliklar', '–Ω–æ–≤–æ—Å—Ç–∏', 'news', 'xabar', "so'ngi yangiliklar", 'yangiliklarga', 'yangiliklardan'
        ]
    },
    'xalqaro': {
        'topic_id': 101367,
        'keywords': [
            # –†–æ—Å—Å–∏—è
            'russia', 'rosiya', 'russia ƒ∞', 'rosiya ƒ∞', 'russia i', 'rosiya i',
            'moskva', 'moscow', 'moskva ƒ∞', 'moskva º', 'moskva i', "moskva'",
            '–º–æ—Å–∫–≤–∞', '–º–æ—Å–∫–æ–≤—Å–∫–∞—è', '–º–æ—Å–∫–≤–∞ –æ–±–ª', '–º–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
            'spb', 'sankt-peterburg', 'piter', 'saint-petersburg', 'spb ƒ∞', 'spb i',
            '—Å–ø–±', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–∏—Ç–µ—Ä', '–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥',
            'krasnodar', 'krasnodar ƒ∞', 'krasnodar i', '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–∫—Ä–∞—Å–Ω–æ–¥–∞', '–∫—Ä–∞—Å–∫–æ–≤–∞', '–∫—Ä–∞—Å–∫–æ–≤',  # –î–æ–±–∞–≤–ª—è–µ–º –æ–ø–µ—á–∞—Ç–∫–∏
            'astrakhan', 'astrakhan ƒ∞', 'astrakhan i', '–∞—Å—Ç—Ä–∞—Ö–∞–Ω', '–∞—Å—Ç—Ä–∞—Ö–∞–Ω—å', '–∞—Å—Ç–∞—Ä—Ö–∞–Ω',  # –î–æ–±–∞–≤–ª—è–µ–º –ê—Å—Ç—Ä–∞—Ö–∞–Ω
            'voronej', '–≤–æ—Ä–æ–Ω–µ–∂', 'qazoq', '–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'irkutsk', '–∏—Ä–∫—É—Ç—Å–∫',
            'rostov', 'rostov-na-donu', 'rostov ƒ∞', 'rostov i',
            'volgograd', 'volgograd ƒ∞', 'volgograd i',
            'kazan', 'kazan ƒ∞', 'kazan i',
            'nizhny novgorod', 'nizhniy novgorod', 'nizhny novgorod ƒ∞', 'nizhny i',
            'samara', 'samara ƒ∞', 'samara i',
            'ufa', 'ufa ƒ∞', 'ufa i',
            'perm', 'perm ƒ∞', 'perm i',
            'krasnoyarsk', 'krasnoyarsk ƒ∞', 'krasnoyarsk i',
            'novosibirsk', 'novosibirsk ƒ∞', 'novosibirsk i',
            '–±–∞—Ä–Ω–∞—É–ª', 'barnaul', 'barnaulskaya',
            'yekaterinburg', 'ekaterinburg', 'yekaterinburg ƒ∞', 'yekaterinburg i',
            'chelyabinsk', 'chelyabinsk ƒ∞', 'chelyabinsk i',
            'omsk', 'omsk ƒ∞', 'omsk i',
            'voronezh', 'voronezh ƒ∞', 'voronezh i',
            'sochi', 'sochi ƒ∞', 'sochi i',
            'tolyatti', 'tolyatti ƒ∞', 'tolyatti i',
            'belgorod', 'belgorod ƒ∞', 'belgorod i',
            'tula', 'tula ƒ∞', 'tula i',
            'yaroslavl', 'yaroslavl ƒ∞', 'yaroslavl i',
            'tver', 'tver ƒ∞', 'tver i',
            'ivanovo', 'ivanovo ƒ∞', 'ivanovo i',
            'vladivostok', 'vladivostok ƒ∞', 'vladivostok i',
            'irkutsk', 'irkutsk ƒ∞', 'irkutsk i',
            'khabarovsk', 'khabarovsk ƒ∞', 'khabarovsk i',
            'vologda', 'vologda ƒ∞', 'vologda i', '–≤–æ–ª–≥–æ–¥–∞', '–≤–æ–ª–æ–≥–¥–µ', '–≤–æ–ª–æ–≥–¥—ã',
            'cherepovets', 'cherepovec', '—á–µ—Ä–µ–ø–æ–≤–µ—Ü', '—á–µ—Ä–µ–ø–æ–≤—Ü–µ', '—á–µ—Ä–µ–ø–æ–≤—Ü–∞',
            'sheksna', 'sheksna ƒ∞', 'sheksna i', '—à–µ–∫—Å–Ω–∞', '—à–µ–∫—Å–Ω–µ', '—à–µ–∫—Å–Ω—ã',
            'tomsk', 'tomsk ƒ∞', 'tomsk i', '—Ç–æ–º—Å–∫', '—Ç–æ–º—Å–∫–∞', '—Ç–æ–º—Å–∫–µ',

            # –£–∫—Ä–∞–∏–Ω–∞
            'ukraine', 'ukraina', 'ukraine ƒ∞', 'ukraina ƒ∞', 'ukraine i', 'ukraina i',
            'kiev', 'kyiv', 'kiev ƒ∞', 'kyiv ƒ∞', 'kiev i', 'kyiv i',
            'kharkiv', 'kharkov', 'kharkiv ƒ∞', 'kharkiv i',
            'odessa', 'odesa', 'odessa ƒ∞', 'odessa i',
            'dnipro', 'dnepr', 'dnipro ƒ∞', 'dnipro i',
            'lviv', 'lviv ƒ∞', 'lviv i',

            # –ë–µ–ª–∞—Ä—É—Å—å
            'belarus', 'belarus ƒ∞', 'belarus i', '–±–µ–ª–∞—Ä—É—Å—å', '–±–µ–ª–∞—Ä—É—Å–∏', '–±–µ–ª–∞—Ä—É—Å—è',
            'minsk', 'minsk ƒ∞', 'minsk i', '–º–∏–Ω—Å–∫', '–º–∏–Ω—Å–∫–µ', '–º–∏–Ω—Å–∫–∞',
            'brest', 'brest ƒ∞', 'brest i', '–±—Ä–µ—Å—Ç', '–±—Ä–µ—Å—Ç–µ', '–±—Ä–µ—Å—Ç–∞',
            'grodno', 'grodno ƒ∞', 'grodno i', '–≥—Ä–æ–¥–Ω–æ', '–≥—Ä–æ–¥–Ω–µ', '–≥—Ä–æ–¥–Ω–∞',
            'gomel', 'gomel ƒ∞', 'gomel i', '–≥–æ–º–µ–ª—å', '–≥–æ–º–µ–ª–µ', '–≥–æ–º–µ–ª—è',
            'borisov', 'borisov ƒ∞', 'borisov i', '–±–æ—Ä–∏—Å–æ–≤', '–±–æ—Ä–∏—Å–æ–≤–µ', '–±–æ—Ä–∏—Å–æ–≤–∞',
            'ivatsevichi', 'ivatsevichy', '–∏–≤–∞—Ü–µ–≤–∏—á–∏', '–∏–≤–∞—Ü–µ–≤–∏—á–∞—Ö', '–∏–≤–∞—Ü–µ–≤–∏—á–µ–π',

            # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
            'kazakhstan', 'qazaqstan', 'kazakhstan ƒ∞', 'qazaq-stan', 'kazakhstan i',
            'almaty', 'alma-ata', 'almaty ƒ∞', 'almaty i',
            'astana', 'nur-sultan', 'astana ƒ∞', 'astana i',
            'shymkent', 'shymkent ƒ∞', 'shymkent i',
            'karaganda', 'karaganda ƒ∞', 'karaganda i',
            'aktobe', 'aktobe ƒ∞', 'aktobe i',
            'pavlodar', 'pavlodar ƒ∞', 'pavlodar i',

            # –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω
            'kyrgyzstan', 'kirgiziya', 'kyrgyzstan ƒ∞', 'kyrgyzstan i',
            'bishkek', 'bishkek ƒ∞', 'bishkek i',
            'osh', 'osh ƒ∞', 'osh i',

            # –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω
            'tajikistan', 'tojikiston', 'tajikistan ƒ∞', 'tajikistan i',
            'dushanbe', 'dushanbe ƒ∞', 'dushanbe i',
            'khujand', 'khujand ƒ∞', 'khujand i',

            # –¢—É—Ä–∫–º–µ–Ω–∏—Å—Ç–∞–Ω
            'turkmenistan', 'turkmenistan ƒ∞', 'turkmenistan i',
            'ashgabat', 'ashgabat ƒ∞', 'ashgabat i',
            'turkmenbashy', 'turkmenbashy ƒ∞', 'turkmenbashy i',

            # –¢—É—Ä—Ü–∏—è
            'turkey', 'turkiya', 'turkey ƒ∞', 'turkiya ƒ∞', 'turkey i', 'turkiya i',
            'istanbul', 'stambul', 'istanbul ƒ∞', 'stambul ƒ∞', 'istanbul i', 'stambul i',
            'ankara', 'ankara ƒ∞', 'ankara i',
            'izmir', 'izmir ƒ∞', 'izmir i',
            'antalya', 'antalya ƒ∞', 'antalya i',

            # –î—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã
            'iran', 'iran ƒ∞', 'iran i',
            'afganistan', 'afghanistan', 'afghanistan ƒ∞', 'afghanistan i',
            'china', 'xitoy', 'china ƒ∞', 'xitoy ƒ∞', 'china i', 'xitoy i',
            'india', 'xindiston', 'india ƒ∞', 'xindiston ƒ∞', 'india i', 'xindiston i',
            'poland', 'polsha', 'poland ƒ∞', 'polsha ƒ∞', 'poland i', 'polsha i',
            'germany', 'germaniya', 'germany ƒ∞', 'germaniya ƒ∞', 'germany i', 'germaniya i',
            'europe', 'europa', 'europe ƒ∞', 'europa ƒ∞', 'europe i', 'europa i',

            # –û–±—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
            'international', 'xalqaro', 'international ƒ∞', 'xalqaro ƒ∞', 'international i', 'xalqaro i',
            'cis', 'mda', 'cis ƒ∞', 'mda ƒ∞', 'cis i', 'mda i', 'tomsk shahardan', 'tomsk', 'tomskdan', 'tomskga',
            'import', 'export', 'import ƒ∞', 'export ƒ∞', 'import i', 'export i', 'russia', 'rosiya', 'russia ƒ∞', 'rosiya ƒ∞', 'russia i', 'rosiya i',
            'moskva', 'moscow', 'moskva ƒ∞', 'moskva º', 'moskva i', "moskva'", '–º–æ—Å–∫–≤–∞', '–º–æ—Å–∫–≤–∞ga', '–º–æ—Å–∫–≤–∞dan',
            'spb', 'sankt-peterburg', 'piter', 'saint-petersburg', 'spb ƒ∞', 'spb i', '—Å–ø–±', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–∏—Ç–µ—Ä', '–ª–µ–Ω–∏–Ω–≥—Ä–∞–¥',
            'krasnodar', 'krasnodar ƒ∞', 'krasnodar i', '–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–∫—Ä–∞—Å–Ω–æ–¥–∞', '–∫—Ä–∞—Å–∫–æ–≤–∞', '–∫—Ä–∞—Å–∫–æ–≤',  # –û–ø–µ—á–∞—Ç–∫–∏
            'astrakhan', 'astrakhan ƒ∞', 'astrakhan i', '–∞—Å—Ç—Ä–∞—Ö–∞–Ω', '–∞—Å—Ç—Ä–∞—Ö–∞–Ω—å', '–∞—Å—Ç–∞—Ä—Ö–∞–Ω',  # –ê—Å—Ç—Ä–∞—Ö–∞–Ω
            'voronej', '–≤–æ—Ä–æ–Ω–µ–∂', 'krasnodarga', 'krasnadardan', 'astrakhanga', 'astrakhandan',
            'rostov', 'rostov-na-donu', 'rostov ƒ∞', 'rostov i', 'rostovga', 'rostovdan', 'tomsk', 'tomsk shahardan', 'tomskdan', 'tomskga',
            'volgograd', 'volgograd ƒ∞', 'volgograd i', 'volgogradga', 'volgograddan',
            'kazan', 'kazan ƒ∞', 'kazan i', 'kazanga', 'kazandan',
            'nizhny novgorod', 'nizhniy novgorod', 'nizhny novgorod ƒ∞', 'nizhny i', 'nizhnyga', 'nizhnydan',
            'samara', 'samara ƒ∞', 'samara i', 'samaranga', 'samaradan',
            'ufa', 'ufa ƒ∞', 'ufa i', 'ufaga', 'ufadan',
            'perm', 'perm ƒ∞', 'perm i', 'permga', 'permdan',
            'krasnoyarsk', 'krasnoyarsk ƒ∞', 'krasnoyarsk i', 'krasnoyarskga', 'krasnoyarskdan',
            'novosibirsk', 'novosibirsk ƒ∞', 'novosibirsk i', 'novosibirskga', 'novosibirskdan',
            'yekaterinburg', 'ekaterinburg', 'yekaterinburg ƒ∞', 'yekaterinburg i', 'yekaterinburgga', 'yekaterinburgdan',
            'chelyabinsk', 'chelyabinsk ƒ∞', 'chelyabinsk i', 'chelyabinskga', 'chelyabinskdan',
            'omsk', 'omsk ƒ∞', 'omsk i', 'omskga', 'omskdan',
            'voronezh', 'voronezh ƒ∞', 'voronezh i', 'voronezhga', 'voronezhdan',
            'sochi', 'sochi ƒ∞', 'sochi i', 'sochiga', 'sochidan',
            'tolyatti', 'tolyatti ƒ∞', 'tolyatti i', 'tolyattiga', 'tolyattidan',
            'belgorod', 'belgorod ƒ∞', 'belgorod i', 'belgorodga', 'belgroddan',

            # –£–∫—Ä–∞–∏–Ω–∞
            'ukraine', 'ukraina', 'ukraine ƒ∞', 'ukraina ƒ∞', 'ukraine i', 'ukraina i',
            'kiev', 'kyiv', 'kiev ƒ∞', 'kyiv ƒ∞', 'kiev i', 'kyiv i', 'kievga', 'kievdan',
            'kharkiv', 'kharkov', 'kharkiv ƒ∞', 'kharkiv i', 'kharkivga', 'kharkivdan',
            'odessa', 'odesa', 'odessa ƒ∞', 'odessa i', 'odessaga', 'odessadan',
            'dnipro', 'dnepr', 'dnipro ƒ∞', 'dnipro i', 'dniproga', 'dniprodan',
            'lviv', 'lviv ƒ∞', 'lviv i', 'lvivga', 'lvivdan',

            # –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
            'kazakhstan', 'qazaqstan', 'kazakhstan ƒ∞', 'qazaq-stan', 'kazakhstan i', 'qazaqstan i',
            'almaty', 'alma-ata', 'almaty ƒ∞', 'almaty i', 'almatyga', 'almatydan',
            'astana', 'nur-sultan', 'astana ƒ∞', 'astana i', 'astanaga', 'astanadan',
            'shymkent', 'shymkent ƒ∞', 'shymkent i', 'shymkentga', 'shymkentdan',
            'karaganda', 'karaganda ƒ∞', 'karaganda i', 'karagandaga', 'karagandadan',
            'aktobe', 'aktobe ƒ∞', 'aktobe i', 'aktobega', 'aktobedan',
            'pavlodar', 'pavlodar ƒ∞', 'pavlodar i', 'pavlodarga', 'pavlodardan',

            # –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω
            'kyrgyzstan', 'kirgiziya', 'kyrgyzstan ƒ∞', 'kyrgyzstan i',
            'bishkek', 'bishkek ƒ∞', 'bishkek i', 'bishkekke', 'bishkekdan',
            'osh', 'osh ƒ∞', 'osh i', 'oshga', 'oshdan',

            # –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω
            'tajikistan', 'tojikiston', 'tajikistan ƒ∞', 'tajikistan i',
            'dushanbe', 'dushanbe ƒ∞', 'dushanbe i', 'dushanbega', 'dushanbedan',
            'khujand', 'khujand ƒ∞', 'khujand i', 'khujandga', 'khujanddan',

            # –¢—É—Ä—Ü–∏—è
            'turkey', 'turkiya', 'turkey ƒ∞', 'turkiya ƒ∞', 'turkey i', 'turkiya i',
            'istanbul', 'stambul', 'istanbul ƒ∞', 'stambul ƒ∞', 'istanbul i', 'stambul i', 'istanbula', 'istanbuldan',
            'ankara', 'ankara ƒ∞', 'ankara i', 'ankaraga', 'ankaradan',
            'izmir', 'izmir ƒ∞', 'izmir i', 'izmirga', 'izmirndan',
            'antalya', 'antalya ƒ∞', 'antalya i', 'antalyaga', 'antalyadan',

            # –û–±—â–∏–µ
            'international', 'xalqaro', 'import', 'export', 'xalqaro yuk', 'importga', 'exportga'
        ]
    }
}

# ========== –†—è–¥–æ–º —Å REGION_KEYWORDS –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ ==========

PHONE_REGEX = re.compile(r'[\+]?[\d\s\-\(\)]{9,18}')
ROUTE_REGEX = re.compile(
    r'(?:^\s*)?(.+?)'                                   # ¬´–æ—Ç–∫—É–¥–∞¬ª
    r'(?:'
        # 1. –û–¥–∏–Ω–æ—á–Ω—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ –∏ —ç–∫—Ä–∞–Ω—ã
        r'\s*[>‚Üí‚Üê‚Üë‚Üì‚Üî‚Üï‚Üñ‚Üó‚Üò‚Üô‚Üö‚Üõ‚Üú‚Üù‚Üû‚Üü‚Ü†‚Ü°‚Ü¢‚Ü£‚Ü§‚Ü•‚Ü¶‚Üß‚Ü®‚Ü©‚Ü™‚Ü´‚Ü¨‚Ü≠‚ÜÆ‚ÜØ‚Ü∞‚Ü±‚Ü≤‚Ü≥‚Ü¥‚Üµ‚Ü∂‚Ü∑‚Ü∏‚Üπ‚Ü∫‚Üª‚Üº‚ÜΩ‚Üæ‚Üø‚áÄ‚áÅ‚áÇ‚áÉ‚áÑ‚áÖ‚áÜ‚áá‚áà‚áâ‚áä‚áã‚áå‚áç‚áé‚áè‚áê‚áë‚áí‚áì‚áî‚áï‚áñ‚áó‚áò‚áô‚áö‚áõ‚áú‚áù‚áû‚áü‚á†‚á°‚á¢‚á£‚á§‚á•‚á¶‚áß‚á®‚á©‚á™‚á´‚á¨‚á≠‚áÆ‚áØ‚á∞‚á±‚á≤‚á≥‚á¥‚áµ‚á∂‚á∑‚á∏‚áπ‚á∫‚áª‚áº‚áΩ‚áæ‚áø‚ü∞‚ü±‚ü≤‚ü≥‚ü¥‚üµ‚ü∂‚ü∑‚ü∏‚üπ‚ü∫‚üª‚üº‚üΩ‚üæ‚üø‚§Ä‚§Å‚§Ç‚§É‚§Ñ‚§Ö‚§Ü‚§á‚§à‚§â‚§ä‚§ã‚§å‚§ç‚§é‚§è‚§ê‚§ë‚§í‚§ì‚§î‚§ï‚§ñ‚§ó‚§ò‚§ô‚§ö‚§õ‚§ú‚§ù‚§û‚§ü‚§†‚§°‚§¢‚§£‚§§‚§•‚§¶‚§ß‚§®‚§©‚§™‚§´‚§¨‚§≠‚§Æ‚§Ø‚§∞‚§±‚§≤‚§≥‚§¥‚§µ‚§∂‚§∑‚§∏‚§π‚§∫‚§ª‚§º‚§Ω‚§æ‚§ø‚•Ä‚•Å‚•Ç‚•É‚•Ñ‚•Ö‚•Ü‚•á‚•à‚•â‚•ä‚•ã‚•å‚•ç‚•é‚•è‚•ê‚•ë‚•í‚•ì‚•î‚•ï‚•ñ‚•ó‚•ò‚•ô‚•ö‚•õ‚•ú‚•ù‚•û‚•ü‚•†‚•°‚•¢‚•£‚•§‚••‚•¶‚•ß‚•®‚•©‚•™‚•´‚•¨‚•≠‚•Æ‚•Ø‚•∞‚•±‚•≤‚•≥‚•¥‚•µ‚•∂‚•∑‚•∏‚•π‚•∫‚•ª‚•º‚•Ω‚•æ‚•ø‚¶Ä‚¶Å‚¶Ç‚¶É‚¶Ñ‚¶Ö‚¶Ü‚¶á‚¶à‚¶â‚¶ä‚¶ã‚¶å‚¶ç‚¶é‚¶è‚¶ê‚¶ë‚¶í‚¶ì‚¶î‚¶ï‚¶ñ‚¶ó‚¶ò‚¶ô‚¶ö‚¶õ‚¶ú‚¶ù‚¶û‚¶ü‚¶†‚¶°‚¶¢‚¶£‚¶§‚¶•‚¶¶‚¶ß‚¶®‚¶©‚¶™‚¶´‚¶¨‚¶≠‚¶Æ‚¶Ø‚¶∞‚¶±‚¶≤‚¶≥‚¶¥‚¶µ‚¶∂‚¶∑‚¶∏‚¶π‚¶∫‚¶ª‚¶º‚¶Ω‚¶æ‚¶ø‚ßÄ‚ßÅ‚ßÇ‚ßÉ‚ßÑ‚ßÖ‚ßÜ‚ßá‚ßà‚ßâ‚ßä‚ßã‚ßå‚ßç‚ßé‚ßè‚ßê‚ßë‚ßí‚ßì‚ßî‚ßï‚ßñ‚ßó‚ßò‚ßô‚ßö‚ßõ‚ßú‚ßù‚ßû‚ßü‚ß†‚ß°‚ß¢‚ß£‚ß§‚ß•‚ß¶‚ßß‚ß®‚ß©‚ß™‚ß´‚ß¨‚ß≠‚ßÆ‚ßØ‚ß∞‚ß±‚ß≤‚ß≥‚ß¥‚ßµ‚ß∂‚ß∑‚ß∏‚ßπ‚ß∫‚ßª‚ßº‚ßΩ‚ßæ‚ßø‚úÄ‚úÅ‚úÇ‚úÉ‚úÑ‚úÖ‚úÜ‚úá‚úà‚úâ‚úä‚úã‚úå‚úç‚úé‚úè‚úê‚úë‚úí‚úì‚úî‚úï‚úñ‚úó‚úò‚úô‚úö‚úõ‚úú‚úù‚úû‚úü‚ú†‚ú°‚ú¢‚ú£‚ú§‚ú•‚ú¶‚úß‚ú®‚ú©‚ú™‚ú´‚ú¨‚ú≠‚úÆ‚úØ‚ú∞‚ú±‚ú≤‚ú≥‚ú¥‚úµ‚ú∂‚ú∑‚ú∏‚úπ‚ú∫‚úª‚úº‚úΩ‚úæ‚úø‚ùÄ‚ùÅ‚ùÇ‚ùÉ‚ùÑ‚ùÖ‚ùÜ‚ùá‚ùà‚ùâ‚ùä‚ùã‚ùå‚ùç‚ùé‚ùè‚ùê‚ùë‚ùí‚ùì‚ùî‚ùï‚ùñ‚ùó‚ùò‚ùô‚ùö‚ùõ‚ùú‚ùù‚ùû‚ùü‚ù†‚ù°‚ù¢‚ù£‚ù§‚ù•‚ù¶‚ùß‚ù®‚ù©‚ù™‚ù´‚ù¨‚ù≠‚ùÆ‚ùØ‚ù∞‚ù±‚ù≤‚ù≥‚ù¥‚ùµ‚ùõ‚ùú‚ùù‚ùû‚ùü‚ù†‚ù°‚ù¢‚ù£‚ù§‚ù•‚ù¶‚ùß‚ù®‚ù©‚ù™‚ù´‚ù¨‚ù≠‚ùÆ‚ùØ‚ù∞‚ù±‚ù≤‚ù≥‚ù¥‚ùµ‚ûî‚ûò‚ûô‚ûö‚ûõ‚ûú‚ûù‚ûû‚ûü‚û†‚û°‚û¢‚û£‚û§‚û•‚û¶‚ûß‚û®‚û©‚û™‚û´‚û¨‚û≠‚ûÆ‚ûØ‚û±‚û≤‚û≥‚ûµ‚û∏‚ûπ‚û∫‚ûª‚ûº‚ûΩ‚ûæ'
        r'|'
        # 2. –≠–º–æ–¥–∑–∏-—Å—Ç—Ä–µ–ª–∫–∏
        r'\s*[‚ñ∂Ô∏è‚û°‚û¢‚û£‚û§‚û•‚û¶‚ûß‚û®‚û©‚û™‚û´‚û¨‚û≠‚ûÆ‚ûØ‚û±‚û≤‚û≥‚ûµ‚û∏‚ûπ‚û∫‚ûª‚ûº‚ûΩ‚ûæ‚ûø]\s*'
        r'|'
        # 3. –°–ª–æ–≤–∞-—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏
        r'\s+(?:to|dan|ga|dan|–≤|–∏–∑|–Ω–∞)\s+'
        r'|'
        # 4. –õ—é–±—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ (1-5 –ø–æ–≤—Ç–æ—Ä–æ–≤)
        r'\s*[-‚Äî‚Äì‚Üí‚ûî‚û°‚ñ∂Ô∏è‚óÄÔ∏è‚û¢‚û£‚û§‚û•‚û¶‚ûß‚û®‚û©‚û™‚û´‚û¨‚û≠‚ûÆ‚ûØ‚û±‚û≤‚û≥‚ûµ‚û∏‚ûπ‚û∫‚ûª‚ûº‚ûΩ‚ûæ‚ü∂‚ü∑‚üµ]{1,5}\s*'
    r')'
    r'(.+?)(?:\s|$)',
    re.IGNORECASE | re.MULTILINE | re.UNICODE
)

# ========== –§—É–Ω–∫—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ ==========

def normalize_text(text):
    """
    –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    - –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    - —É–±–∏—Ä–∞–µ—Ç —ç–º–æ–¥–∑–∏
    - –∑–∞–º–µ–Ω—è–µ—Ç ƒ∞‚Üíi,  º‚Üí', —ë‚Üíe
    """
    if not text:
        return ""
    
    # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏
    text = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', text)
    
    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è Unicode (–¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è)
    text = unicodedata.normalize('NFD', text)
    
    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    text = text.lower()
    
    # –ó–∞–º–µ–Ω—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–ù–ï –¢–†–û–ì–ê–ï–ú –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã - –æ–Ω–∏ –≤–∞–∂–Ω—ã –¥–ª—è —É–∑–±–µ–∫—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π!)
    replacements = {
        # ' º': "'",   # –ø—Ä–∞–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –û–°–¢–ê–í–õ–Ø–ï–ú –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è Qo'qon, Farg'ona
        # ' ª': "'",   # –ª–µ–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –û–°–¢–ê–í–õ–Ø–ï–ú –∫–∞–∫ –µ—Å—Ç—å
        '—ë': 'e',   # —ë ‚Üí e
        '—ñ': 'i',   # —ñ ‚Üí i
        'ƒ±': 'i',   # ƒ± ‚Üí i (—Ç—É—Ä–µ—Ü–∫–∏–π)
        'ƒ∞': 'i',   # ƒ∞ ‚Üí i (—Ç—É—Ä–µ—Ü–∫–∏–π)
        'ƒü': 'g',   # ƒü ‚Üí g
        '≈ü': 's',   # ≈ü ‚Üí s
        '√ß': 'c',   # √ß ‚Üí c
        '√º': 'u',   # √º ‚Üí u
        '√∂': 'o',   # √∂ ‚Üí o
    }
    
    for old, new in replacements.items():
        text = text.replace(old, new)
    
    return text

def extract_phone_number(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞"""
    match = PHONE_REGEX.search(text)
    return match.group().strip() if match else 'Telefon ko\'rsatilmagan'

def is_valid_city_or_region(city_name):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã–º –≥–æ—Ä–æ–¥–æ–º/—Ä–µ–≥–∏–æ–Ω–æ–º
    –°–¢–†–û–ì–ê–Ø –í–ê–õ–ò–î–ê–¶–ò–Ø: –±–ª–æ–∫–∏—Ä—É–µ—Ç –ª—é–±—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã
    """
    if not city_name or len(city_name) < 3:
        return False
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
    technical_terms = [
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã
        'metrlik', 'tonna', 'transport', 'fura', 'traller', 'yuk', 'bor', 'kerak', 'kk', 'kg', 'ton',
        'tent', '—Ç–µ–Ω—Ç', 'chakman', '—Ç–µ–Ω—Ç–æ–≤–∞–Ω–Ω—ã–π',  # –î–æ–±–∞–≤–ª—è–µ–º tent –∫–∞–∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω
        'ekskavator', 'shafyor', 'ish', 'talik', 'konteyner', 'pustoy', 'empty', 'driver', 'haydovchi',
        'gaz', 'benzin', 'tel', 'raqam', 'phone', 'telefon', 'qongiroq', 'call',
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ —Ä–∞–±–æ—á–∏–µ —Ç–µ—Ä–º–∏–Ω—ã
        'operator', 'mashinist', 'worker', 'ishchi', 'usta', 'master', 'brigadir',
        'stroitel', 'builder', 'welding', 'payvandchi', 'svarshik', 'avtokran',
        'buldozer', 'traktor', 'kombayn', 'greyfer', 'pogruzchik', 'yukladgich',
        
        # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –¥–ª—è —ç–∫—Å–∫–∞–≤–∞—Ç–æ—Ä–æ–≤
        '140talik', '160talik', '180talik', '200talik', '220talik', '300talik',
        'komacu', 'caterpillar', 'volvo', 'liebherr', 'jcb', 'hitachi', 'komatsu',
        
        # –ß–∏—Å–ª–æ–≤—ã–µ –ø—Ä–µ—Ñ–∏–∫—Å—ã —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏
        'talik', 'lik', 'tonnali', 'kublik', 'metrik'
    ]
    
    city_lower = normalize_text(city_name).strip()
    
    # –ë–õ–û–ö–ò–†–£–ï–ú –ª—é–±—ã–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å —Ü–∏—Ñ—Ä
    if re.match(r'^\d+', city_name):
        logger.info(f"‚ùå –ë–õ–û–ö–ò–†–û–í–ö–ê: '{city_name}' - –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ü–∏—Ñ—Ä—ã")
        return False
    
    # –ë–õ–û–ö–ò–†–£–ï–ú —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ)
    for term in technical_terms:
        if term in city_lower or city_lower == term:
            logger.info(f"‚ùå –ë–õ–û–ö–ò–†–û–í–ö–ê: '{city_name}' —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ç–µ—Ä–º–∏–Ω '{term}'")
            return False
    
    # –ë–õ–û–ö–ò–†–£–ï–ú –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    job_patterns = [
        r'\d+\s*talik',        # "140 talik", "140talik" 
        r'\d+\s*lik',          # "20lik", "30 lik"
        r'operator\s+kerak',   # "operator kerak"
        r'ish\s+bor',          # "ish bor"
        r'kerak\s+ish',        # "kerak ish"
        r'mashinist\s+kerak'   # "mashinist kerak"
    ]
    
    for pattern in job_patterns:
        if re.search(pattern, city_lower, re.IGNORECASE):
            logger.info(f"‚ùå –ë–õ–û–ö–ò–†–û–í–ö–ê: '{city_name}' —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–±–æ—á–µ–º—É –ø–∞—Ç—Ç–µ—Ä–Ω—É '{pattern}'")
            return False
    
    # –í–°–ï–ì–î–ê –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ find_region - –æ–Ω –Ω–∞–π–¥–µ—Ç –∏ –∞–ª–∏–∞—Å—ã –≤–Ω—É—Ç—Ä–∏ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
    region_found = find_region(city_name)
    if region_found:
        logger.info(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: '{city_name}' - –Ω–∞–π–¥–µ–Ω —Ä–µ–≥–∏–æ–Ω")
        return True
    else:
        # –î–ª—è –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∞–ª–∏–∞—Å–æ–≤ - –±–æ–ª–µ–µ –º—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        if len(city_name) >= 4 and city_name.lower() not in ['tel', 'phone', 'telefon', 'tent', 'irot']:
            logger.info(f"‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø: '{city_name}' - —Ä–∞–∑—Ä–µ—à–µ–Ω –∫–∞–∫ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∞–ª–∏–∞—Å")
            return True
        logger.info(f"‚ùå –ë–õ–û–ö–ò–†–û–í–ö–ê: '{city_name}' - –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ REGION_KEYWORDS")
        return False

def extract_route_and_cargo(text):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –æ—Ç–∫—É–¥–∞/–∫—É–¥–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞ (—Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤)
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (from_city, to_city, cargo_text)
    """
    lines = [re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', line).strip()
             for line in text.strip().split('\n') if line.strip()]

    # –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ü–∞—Ç—Ç–µ—Ä–Ω—ã "–¥–∞–Ω...–≥–∞" (—Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
    # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ø–µ—Ä–µ–Ω–æ—Å–æ–≤ —Å—Ç—Ä–æ–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞
    full_text_clean = re.sub(r'\s+', ' ', ' '.join(lines)).strip()
    # –ö–†–ò–¢–ò–ß–ù–û: –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ - –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –æ—Å—Ç–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤
    # Qoraqalpoq(Qo'ng'irot) ‚Üí "Qoraqalpoq Qo'ng'irot" (—Å–∫–æ–±–∫–∏ —Ä–∞–∑–¥–µ–ª—è—é—Ç —Å–ª–æ–≤–∞)
    full_text_clean = re.sub(r'[^\w\s\' º ª`]', ' ', full_text_clean)  # –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã ',  º,  ª, ` –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤
    full_text_clean = re.sub(r'\s+', ' ', full_text_clean)           # –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã ‚Üí –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª
    
    dan_ga_patterns = [
        r"(\w+'?\w+)dan\s+(\w+'?\w+)ga",              # G'azg'ondan Qo'qonga (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r"(\w+'?\w+)–¥–∞–Ω\s+(\w+'?\w+)–≥–∞",              # –ì'–∞–∑–≥'–æ–Ω–¥–∞–Ω –ö–æ'–∫–æ–Ω–≥–∞ (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r'(\w+)dan\s+(\w+)ga',                        # Toshkentdan termizga (–ª–∞—Ç–∏–Ω–∏—Ü–∞)
        r'(\w+)–¥–∞–Ω\s+(\w+)–≥–∞',                        # –¢–æ—à–∫–µ–Ω—Ç–¥–∞–Ω —Ç–µ—Ä–º–∏–∑–≥–∞ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)
        r"(\w+'?\w+)dan\s+(\w+'?\w+)",                # G'azg'ondan Qo'qon (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r"(\w+'?\w+)–¥–∞–Ω\s+(\w+'?\w+)",                # –ì'–∞–∑–≥'–æ–Ω–¥–∞–Ω –ö–æ'–∫–æ–Ω (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r'(\w+)dan\s+(\w+)',                          # Toshkentdan termiz (–ª–∞—Ç–∏–Ω–∏—Ü–∞)
        r'(\w+)–¥–∞–Ω\s+(\w+)',                          # –¢–æ—à–∫–µ–Ω—Ç–¥–∞–Ω —Ç–µ—Ä–º–∏–∑ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)
        r"(\w+'?\w+)\s+(\w+'?\w+)ga",                 # G'azg'on Qo'qonga (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r"(\w+'?\w+)\s+(\w+'?\w+)–≥–∞",                 # –ì'–∞–∑–≥'–æ–Ω –ö–æ'–∫–æ–Ω–≥–∞ (—Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r'(\w+)\s+(\w+)ga',                           # Toshkent termizga (–ª–∞—Ç–∏–Ω–∏—Ü–∞)
        r'(\w+)\s+(\w+)–≥–∞',                           # –¢–æ—à–∫–µ–Ω—Ç —Ç–µ—Ä–º–∏–∑–≥–∞ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)
        r"(\w+'?\w+)\s+(\w+'?\w+)\s+(\w+'?\w+)ga",    # Qoqon G'azg'on Toshkentga (3 —Å–ª–æ–≤–∞ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
        r"(\w+'?\w+)\s+(\w+'?\w+)\s+(\w+'?\w+)–≥–∞"     # –ö–æ–∫–æ–Ω –ì'–∞–∑–≥'–æ–Ω –¢–æ—à–∫–µ–Ω—Ç–≥–∞ (3 —Å–ª–æ–≤–∞ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏)
    ]
    
    for pattern in dan_ga_patterns:
        match = re.search(pattern, full_text_clean, re.IGNORECASE)
        if match:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å 3 –≥—Ä—É–ø–ø–∞–º–∏ (–¥–ª—è —Å–ª—É—á–∞–µ–≤ —Ç–∏–ø–∞ "Qoqon Shaffof Toshkentga")
            if len(match.groups()) == 3 and match.group(3):
                from_city = f"{match.group(1)} {match.group(2)}".strip()
                to_city = match.group(3).strip()
                # –£–±–∏—Ä–∞–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ -ga/-–≥–∞
                if to_city.lower().endswith('ga'):
                    to_city = to_city[:-2] 
                elif to_city.lower().endswith('–≥–∞'):
                    to_city = to_city[:-2]
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å 2 –≥—Ä—É–ø–ø–∞–º–∏
            elif len(match.groups()) >= 2 and len(match.group(1)) > 2 and len(match.group(2)) > 2:
                from_city = match.group(1).strip()
                to_city = match.group(2).strip()
                
                # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –æ—Ç —Å–∫–æ–±–æ–∫ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
                from_city = re.sub(r'\([^)]*\)', '', from_city).strip()
                to_city = re.sub(r'\([^)]*\)', '', to_city).strip()
                
                # –£–±–∏—Ä–∞–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è -dan/-–¥–∞–Ω –∏ -ga/-–≥–∞
                if from_city.lower().endswith('dan') or from_city.lower().endswith('–¥–∞–Ω'):
                    from_city = from_city[:-3]
                if to_city.lower().endswith('ga') or to_city.lower().endswith('–≥–∞'):
                    to_city = to_city[:-2]
            else:
                continue
            
            # –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
            if is_valid_city_or_region(from_city) and is_valid_city_or_region(to_city):
                cargo_text = text
                logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –º–∞—Ä—à—Ä—É—Ç dan_ga: {from_city} ‚Üí {to_city}")
                return from_city, to_city, cargo_text

    # –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ü–æ–ª–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≤ —Å–∫–æ–±–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä "üá∫üáøQoraqalpoq (Qo'ng'irot)")
    country_flag_pattern = r'üá∫üáø(\w+)\s*\(([^)]+)\)'
    for line in lines[:3]:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏
        flag_match = re.search(country_flag_pattern, line)
        if flag_match:
            region_name = flag_match.group(1).strip()
            city_in_brackets = flag_match.group(2).strip()
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –≥–æ—Ä–æ–¥–∞
            if is_valid_city_or_region(region_name) and is_valid_city_or_region(city_in_brackets):
                # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ 2 —Å—Ç—Ä–æ–∫–∏ —Å —Ñ–ª–∞–≥–∞–º–∏ - —ç—Ç–æ –º–∞—Ä—à—Ä—É—Ç
                next_line_idx = lines.index(line) + 1
                if next_line_idx < len(lines):
                    next_flag_match = re.search(country_flag_pattern, lines[next_line_idx])
                    if next_flag_match:
                        next_region = next_flag_match.group(1).strip()
                        next_city = next_flag_match.group(2).strip()
                        if is_valid_city_or_region(next_region) and is_valid_city_or_region(next_city):
                            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ä–æ–¥–∞ –∏–∑ —Å–∫–æ–±–æ–∫ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
                            from_city = city_in_brackets
                            to_city = next_city
                            cargo_text = text
                            logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –º–∞—Ä—à—Ä—É—Ç –ø–æ —Ñ–ª–∞–≥–∞–º: {from_city} ‚Üí {to_city}")
                            return from_city, to_city, cargo_text

    for line in lines:
        # –ö–†–ò–¢–ò–ß–ù–û: —É–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏
        clean_line = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', line)
        
        # –£–õ–£–ß–®–ï–ù–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞: –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –æ—Å—Ç–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤, –í–°–ï –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª—è–µ—Ç
        # Qoraqalpoq(Qo'ng'irot) ‚Üí "Qoraqalpoq Qo'ng'irot" (—Å–∫–æ–±–∫–∏ —Ä–∞–∑–¥–µ–ª—è—é—Ç)
        # Qo'qon –æ—Å—Ç–∞–µ—Ç—Å—è Qo'qon (–∞–ø–æ—Å—Ç—Ä–æ—Ñ –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤–∞)
        aggressive_clean = re.sub(r'[^\w\s\' º ª`]', ' ', clean_line)  # –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã ',  º,  ª, ` –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤
        aggressive_clean = re.sub(r'\s+', ' ', aggressive_clean)     # –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã ‚Üí –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª
        aggressive_clean = aggressive_clean.strip()
        
        logger.info(f"üîß –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞: '{line}' ‚Üí '{aggressive_clean}'")
        
        # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –¥–ª—è —Å–ª—É—á–∞–µ–≤ —Ç–∏–ø–∞ "QARSHI ‚Üí (KOSONGA)"
        bracket_match = re.search(r'(\w+)\s*[‚Üí>-]+\s*\(([^)]+)\)', clean_line)
        if bracket_match:
            from_city = bracket_match.group(1).strip()
            to_city_in_brackets = bracket_match.group(2).strip()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫–æ–±–æ–∫ –≥–æ—Ä–æ–¥–æ–º
            if is_valid_city_or_region(to_city_in_brackets):
                logger.info(f"üéØ –°–∫–æ–±–∫–∏-–º–∞—Ä—à—Ä—É—Ç: {from_city} ‚Üí {to_city_in_brackets}")
                cargo_text = text.replace(line, '').strip()
                return from_city, to_city_in_brackets, cargo_text
            else:
                # KOSONGA = —Ä–∞–π–æ–Ω –≤ –ö–æ—Å–æ–Ω–µ, –Ω–æ –≤–∞–∂–µ–Ω –ò–°–¢–û–ß–ù–ò–ö –≥—Ä—É–∑–∞, –∞ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
                # "QARSHI ‚Üí (KOSONGA)" –≥–¥–µ –≤ –ø–æ–ª–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å Toshkent = –º–∞—Ä—à—Ä—É—Ç Toshkent ‚Üí Qarshi
                full_text_search = normalize_text(text)
                if 'toshkent' in full_text_search or '—Ç–∞—à–∫–µ–Ω—Ç' in full_text_search:
                    logger.info(f"üéØ –ü–†–ò–û–†–ò–¢–ï–¢ –ò–°–¢–û–ß–ù–ò–ö–ê: Toshkent ‚Üí {from_city} (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º {to_city_in_brackets})")
                    cargo_text = text.replace(line, '').strip()
                    return "Toshkent", from_city, cargo_text
        
        # –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ü–†–ò–û–†–ò–¢–ï–¢ –ò–°–¢–û–ß–ù–ò–ö–ê –≥—Ä—É–∑–∞ (–û–¢–ö–£–î–ê) –≤ –ø–æ–ª–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
        full_text_search = normalize_text(text)
        
        # –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ï—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å Toshkent (–∏—Å—Ç–æ—á–Ω–∏–∫), –æ–Ω –í–°–ï–ì–î–ê –≥–ª–∞–≤–Ω–µ–µ –ø—É–Ω–∫—Ç–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        if 'toshkent' in full_text_search or '—Ç–∞—à–∫–µ–Ω—Ç' in full_text_search:
            # –ò—â–µ–º –ø—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ
            destination_found = None
            for city in ['qarshi', '–∫–∞—Ä—à–∏', 'samarqand', '—Å–∞–º–∞—Ä–∫–∞–Ω–¥', 'buxoro', '–±—É—Ö–∞—Ä–∞']:
                if city in aggressive_clean.lower():
                    destination_found = city.title()
                    if city in ['–∫–∞—Ä—à–∏']: destination_found = "Qarshi"
                    elif city in ['—Å–∞–º–∞—Ä–∫–∞–Ω–¥']: destination_found = "Samarqand"  
                    elif city in ['–±—É—Ö–∞—Ä–∞']: destination_found = "Buxoro"
                    break
            
            if destination_found:
                logger.info(f"üéØ –ü–†–ò–û–†–ò–¢–ï–¢ –ò–°–¢–û–ß–ù–ò–ö–ê: Toshkent ‚Üí {destination_found} (—Ç–æ–ø–∏–∫ Toshkent)")
                cargo_text = text.replace(line, '').strip()
                return "Toshkent", destination_found, cargo_text
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –æ—á–∏—â–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
        clean_line = aggressive_clean
        # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç—Ä–µ–ª–∫–∏ 
        clean_line = re.sub(r'[‚Üí>]+', '‚Üí', clean_line)

        # –ü–†–ò–û–†–ò–¢–ï–¢ 2: ROUTE_REGEX (–æ—Å–Ω–æ–≤–Ω–æ–π)
        route_match = ROUTE_REGEX.search(clean_line)
        if route_match:
            from_city = route_match.group(1).strip()
            to_city = route_match.group(2).strip()
            
            # –ö–†–ò–¢–ò–ß–ù–û: –ë–õ–û–ö–ò–†–£–ï–ú —Ç–æ–≤–∞—Ä–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Å–ª—É–∂–µ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            # "–°–ê–õ–ê–§–ê–ù ‚Üí –†–£–õ–û–ù" = –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ (–ø–ª–µ–Ω–∫–∞ –≤ —Ä—É–ª–æ–Ω–∞—Ö)
            # "–ü–†–û–§–ò–õ–î–ê ‚Üí –ì–£–†–£–•" = —Å–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤ –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å—Ç—å –≥—Ä—É–ø–ø–∞)
            non_geographic_terms = [
                # –¢–æ–≤–∞—Ä–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è  
                '—Å–∞–ª–∞—Ñ–∞–Ω', '—Ä—É–ª–æ–Ω', '–ø–ª—ë–Ω–∫–∞', '–ø–ª–µ–Ω–∫–∞', '–ø–æ–ª–∏—ç—Ç–∏–ª–µ–Ω', '–º–∞—Ç–µ—Ä–∏–∞–ª',
                '—Ç–æ–≤–∞—Ä', '–ø—Ä–æ–¥—É–∫—Ç', '–∏–∑–¥–µ–ª–∏–µ', 'salafo', 'rulon', 'plyonka', 
                '—Ç–µ–Ω—Ç', 'tent', '–ø–ª–∞—Å—Ç–∏–∫', 'plastik',
                # –°–ª—É–∂–µ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                '–ø—Ä–æ—Ñ–∏–ª–¥–∞', '–≥—É—Ä—É—Ö', '–ø—Ä–æ—Ñ–∏–ª—å', '–≥—Ä—É–ø–ø–∞', '—á–∞—Ç', '–∫–∞–Ω–∞–ª', '–±–æ—Ç',
                'profildan', 'guruh', 'guruhda', 'profile', 'group', 'chat', 'channel',
                '–ø—Ä–æ—Ñ–∏–ª–¥–µ', '–≥—Ä—É–ø–ø–µ', '—á–∞—Ç–µ', '–∫–∞–Ω–∞–ª–µ', '–±–æ—Ç–µ', '—Å–∞–π—Ç', 'site',
                # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã (–ù–ï –≥–æ—Ä–æ–¥–∞!)
                '–∫–µ—Ä–∞–∫', 'kerak', '–Ω—É–∂–Ω–æ', '–Ω–∞–¥–æ', '—Ç—Ä–µ–±—É–µ—Ç—Å—è', '—Å—Ä–æ—á–Ω–æ', '—Å—É—Ä–æ—á–Ω–∏',
                '–µ—Ä—Ç–∞–ª–∞–±', 'ertalab', '—É—Ç—Ä–æ–º', '—É—Ç—Ä—É', '–∑–∞–≤—Ç—Ä–∞', '—Å–µ–≥–æ–¥–Ω—è', '–≤—á–µ—Ä–∞',
                '–∫–µ–ª–∞—Å–∏', 'kelasi', '—Å–ª–µ–¥—É—é—â–∏–π', '–ø—Ä–æ—à–ª—ã–π', '—ç—Ç–æ—Ç', '—Ç–æ—Ç'
            ]
            
            from_lower = from_city.lower()
            to_lower = to_city.lower()
            
            # –ï—Å–ª–∏ –ª—é–±–æ–π –∏–∑ "–≥–æ—Ä–æ–¥–æ–≤" —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º —Ç–µ—Ä–º–∏–Ω–æ–º - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            if (from_lower in non_geographic_terms or to_lower in non_geographic_terms):
                logger.info(f"üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –Ω–µ-–≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞: '{from_city} ‚Üí {to_city}' - —ç—Ç–æ –Ω–µ –º–∞—Ä—à—Ä—É—Ç!")
                continue
            
            # –£–±–∏—Ä–∞–µ–º —Å–∫–æ–±–∫–∏ –∏ –∏—Ö —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –≥–æ—Ä–æ–¥–æ–≤
            from_city = re.sub(r'\([^)]*\)', '', from_city).strip()
            to_city = re.sub(r'\([^)]*\)', '', to_city).strip()
            
            # –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
            if is_valid_city_or_region(from_city) and is_valid_city_or_region(to_city):
                cargo_text = text.replace(line, '').strip()
                logger.info(f"üéØ ROUTE_REGEX: {from_city} ‚Üí {to_city}")
                return from_city, to_city, cargo_text

        # –ü–†–ò–û–†–ò–¢–ï–¢ 3: Emoji-–ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å —Ñ–ª–∞–≥–∞–º–∏ —Å—Ç—Ä–∞–Ω (–¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤)
        emoji_patterns = [
            r'üá∑üá∫([^üá∑üá∫üá∫üáø]+?)üá∑üá∫[\s\n]+üá∫üáø\s*([^üá∫üáø\n]+?)üá∫üáø',  # üá∑üá∫–°–∞—Ä–∞—Ç–æ–≤üá∑üá∫ üá∫üáø –¢–µ—Ä–º–∏–∑üá∫üáø
            r'üá∫üáø\s*(\w+)\s*üá∫üáø\s*(\w+)',  # üá∫üáø Qoqon üá∫üáø Samarqand
            r'üá∑üá∫\s*([^-]+?)\s*-\s*üá∫üáø\s*([^\n\r]+)',  # üá∑üá∫–ú–æ—Å–∫–≤–∞ - üá∫üáø–¢–∞—à–∫–µ–Ω—Ç
            r'(\w+)\s*üá∫üáø\s*(\w+)',         # Qoqon üá∫üáø Samarqand
            r'(\w+)\s*[-‚Äì‚Üí>>>\-\-\-\-]+\s*(\w+)',  # Tosh----Fargona
            r'(\w+)\s*>\s*(\w+)',            # Tosh>Fargona
        ]
        for pattern in emoji_patterns:
            match = re.search(pattern, clean_line)
            if match and len(match.group(1)) > 2 and len(match.group(2)) > 2:
                from_city = match.group(1).strip()
                to_city = match.group(2).strip()
                
                # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –æ—á–∏—Å—Ç–∫–∞ –æ—Ç —Å–∫–æ–±–æ–∫ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Å—Ç–∞–ª–æ—Å—å
                from_city = re.sub(r'\([^)]*\)', '', from_city).strip()
                to_city = re.sub(r'\([^)]*\)', '', to_city).strip()
                
                # –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
                if is_valid_city_or_region(from_city) and is_valid_city_or_region(to_city):
                    cargo_text = text.replace(line, '').strip()
                    logger.info(f"üéØ Emoji-–ø–∞—Ç—Ç–µ—Ä–Ω: {from_city} ‚Üí {to_city} (–æ—á–∏—â–µ–Ω–æ)")
                    return from_city, to_city, cargo_text

    # –ü–†–ò–û–†–ò–¢–ï–¢ 4: –ü–æ—Å—Ç—Ä–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    if len(lines) >= 2:
        first_line = lines[0]
        second_line = lines[1]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥–∏ —Å—Ç—Ä–∞–Ω –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Å—Ç—Ä–æ–∫–∞—Ö (–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã)
        country_flags = ['üá∑üá∫', 'üá∞üáø', 'üá∫üá¶', 'üáπüá∑', 'üáÆüá∑', 'üá®üá≥', 'üá∞üá¨', 'üáπüáØ', 'üáπüá≤']
        if any(flag in first_line for flag in country_flags) or any(flag in second_line for flag in country_flags):
            return first_line.strip(), second_line.strip(), '\n'.join(lines[2:])
        
        # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–∏–ø–∞ "QO'QON ADMIRALDAN" ‚Üí "ANDIJON MARHAMAT"
        # –ö–†–ò–¢–ò–ß–ù–û: –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –æ—Å—Ç–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤, –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Ä–∞–∑–¥–µ–ª—è–µ—Ç
        first_clean = re.sub(r'[^\w\s\' º ª`]', ' ', first_line)   # –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã ',  º,  ª, ` –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤
        first_clean = re.sub(r'\s+', ' ', first_clean).strip()   # –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã ‚Üí –æ–¥–∏–Ω
        second_clean = re.sub(r'[^\w\s\' º ª`]', ' ', second_line) # –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã ',  º,  ª, ` –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ–≤
        second_clean = re.sub(r'\s+', ' ', second_clean).strip() # –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã ‚Üí –æ–¥–∏–Ω
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –¥–≤–∞ —Å–ª–æ–≤–∞ (–º–æ–≥—É—Ç –±—ã—Ç—å –≥–æ—Ä–æ–¥ + —Ä–∞–π–æ–Ω)
        second_words = second_clean.split()
        if len(second_words) >= 2:
            # –ï—Å–ª–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ 2+ —Å–ª–æ–≤–∞, –±–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ –∫–∞–∫ –≥–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
            actual_to_city = second_words[0]
        else:
            actual_to_city = second_clean
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Å–ª–æ–≤–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏–µ—Å—è –Ω–∞ "dan"/"–¥–∞–Ω"
        first_words = first_clean.split()
        from_city_found = None
        for word in first_words:
            # –£–±–∏—Ä–∞–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ -dan/-–¥–∞–Ω –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –≥–æ—Ä–æ–¥
            clean_word = word
            if word.lower().endswith('dan') or word.lower().endswith('–¥–∞–Ω'):
                clean_word = word[:-3]
            elif word.lower().endswith('ga') or word.lower().endswith('–≥–∞'):
                clean_word = word[:-2]
            
            if len(clean_word) > 2 and is_valid_city_or_region(clean_word):
                from_city_found = clean_word
                break
        
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –≥–æ—Ä–æ–¥ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –≤–∞–ª–∏–¥–Ω—ã–π –≥–æ—Ä–æ–¥ –≤–æ –≤—Ç–æ—Ä–æ–π
        if from_city_found and is_valid_city_or_region(actual_to_city):
            logger.info(f"üéØ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç—Ä–æ—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç: {from_city_found} ‚Üí {actual_to_city}")
            return from_city_found, actual_to_city, '\n'.join(lines[2:])
        
        # –û–±—ã—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ (fallback)
        if (len(first_clean) > 2 and len(second_clean) > 2 and 
            len(first_clean.split()) <= 3 and len(second_clean.split()) <= 3):
            # –í–ê–õ–ò–î–ê–¶–ò–Ø: –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
            if is_valid_city_or_region(first_clean) and is_valid_city_or_region(second_clean):
                return first_line.strip(), second_line.strip(), '\n'.join(lines[2:])

    # –ü–†–ò–û–†–ò–¢–ï–¢ 5: –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
    first_line = lines[0] if lines else text
    clean_first = re.sub(r'[üá∫üáøüá∞üáøüáÆüá∑üööüì¶‚öñÔ∏èüíµ\U0001F1FA-\U0001F1FF\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', first_line)
    
    # –ò–∑–±–µ–≥–∞–µ–º fallback –Ω–∞ —Ü–∏—Ñ—Ä—ã –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã  
    # –ö–†–ò–¢–ò–ß–ù–û: –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –í–°–ï–ú —Å–∏–º–≤–æ–ª–∞–º –∫—Ä–æ–º–µ –±—É–∫–≤, —Ü–∏—Ñ—Ä, –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¢–û–õ–¨–ö–û –∞–ø–æ—Å—Ç—Ä–æ—Ñ–æ–≤
    parts = re.split(r'[^\w\s\' º ª`]+', clean_first, 2)  # —Ä–∞–∑–¥–µ–ª—è–µ–º –ø–æ –≤—Å–µ–º—É –∫—Ä–æ–º–µ –±—É–∫–≤ –∏ –∞–ø–æ—Å—Ç—Ä–æ—Ñ–æ–≤
    if (len(parts) >= 2 and len(parts[0]) > 2 and len(parts[1]) > 2):
        # –°–¢–†–û–ì–ê–Ø –≤–∞–ª–∏–¥–∞—Ü–∏—è - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —á–∞—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
        part1, part2 = parts[0].strip(), parts[1].strip()
        
        # –§–û–ö–£–° –ù–ê –ì–ï–û–ì–†–ê–§–ò–ò: –∏—â–µ–º —Ç–æ–ª—å–∫–æ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –û–¢–ö–£–î–ê ‚Üí –ö–£–î–ê
        if is_valid_city_or_region(part1) and is_valid_city_or_region(part2):
            return part1, part2, text

    return None, None, text

def format_cargo_text(cargo_text):
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ TAVSIF
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (transport, description)
    """
    if not cargo_text:
        return "", cargo_text or ""
    
    # –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    transport_keywords = [
        'furu', 'fura', 'kamaz', 'gazel', 'pritsep', 'mashina', 'avtomobil', 
        'refrigerator', 'tent', 'ochiq', 'ref', 'truck', 'trailer', 'yuk',
        'tentfura', '—Ç–µ–Ω—Ç—Ñ—É—Ä–∞', '—Ñ—É—Ä–∞', '—Ä–µ—Ñ—Ä–∏–∂–µ—Ä–∞—Ç–æ—Ä'
    ]
    
    # –ò—â–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –≤ —Ç–µ–∫—Å—Ç–µ
    transport = ""
    text_lower = cargo_text.lower()
    for keyword in transport_keywords:
        if keyword in text_lower:
            transport = keyword.capitalize()
            break
    
    # TAVSIF - –ø—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
    description = cargo_text.strip()
    
    return transport, description

def send_message(chat_id, text, message_thread_id=None, reply_markup=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–æ–ø–∏–∫–æ–≤ - –ö–ù–û–ü–ö–ê –ê–í–¢–û–†–ê –í–°–ï–ì–î–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê!"""
    try:
        # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –∫–Ω–æ–ø–∫–∞ –∞–≤—Ç–æ—Ä–∞ –¥–æ–ª–∂–Ω–∞ –í–°–ï–ì–î–ê –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
        if not reply_markup:
            logger.critical("üö® –û–®–ò–ë–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –∞–≤—Ç–æ—Ä–∞ - –ù–ï–î–û–ü–£–°–¢–ò–ú–û!")
            return None
            
        payload = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'HTML'
        }
        
        if message_thread_id:
            payload['message_thread_id'] = message_thread_id
            logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–æ–ø–∏–∫ {message_thread_id}")
            
        # –í–°–ï–ì–î–ê –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∞
        payload['reply_markup'] = reply_markup
        logger.info(f"üîò –ö–ù–û–ü–ö–ê –ê–í–¢–û–†–ê –î–û–ë–ê–í–õ–ï–ù–ê –í PAYLOAD: {reply_markup}")
            
        response = requests.post(f"{API_URL}/sendMessage", json=payload, timeout=10)
        result = response.json()
        
        if response.status_code == 200 and result.get('ok'):
            logger.info("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –£–°–ü–ï–®–ù–û —Å –∫–Ω–æ–ø–∫–æ–π –∞–≤—Ç–æ—Ä–∞!")
            return result
        else:
            error_desc = result.get('description', '')
            error_code = result.get('error_code', 0)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ (429)
            if error_code == 429:
                retry_after = result.get('parameters', {}).get('retry_after', 30)
                logger.warning(f"‚è≥ Rate limit exceeded, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {retry_after} —Å–µ–∫—É–Ω–¥...")
                time.sleep(retry_after + 1)  # –î–æ–±–∞–≤–ª—è–µ–º 1 —Å–µ–∫—É–Ω–¥—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                
                # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
                try:
                    response = requests.post(f"{API_URL}/sendMessage", json=payload, timeout=10)
                    result = response.json()
                    if response.status_code == 200 and result.get('ok'):
                        logger.info("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –£–°–ü–ï–®–ù–û –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–∞!")
                        return result
                    else:
                        logger.error(f"‚ùå –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–∞: {result}")
                except Exception as retry_error:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏: {retry_error}")
            
            # –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö —Å –∫–Ω–æ–ø–∫–∞–º–∏ - –≤—Å—ë —Ä–∞–≤–Ω–æ —Å—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º
            if 'BUTTON_USER_PRIVACY_RESTRICTED' in error_desc:
                logger.info(f"‚ÑπÔ∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ —Å –∫–Ω–æ–ø–∫–æ–π")
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ —É—Å–ø–µ—à–Ω–æ–µ - –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞
                return {'ok': True, 'result': result}
            elif 'Bad Request' in error_desc and 'button' in error_desc.lower():
                logger.warning(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–Ω–æ–ø–∫–æ–π, –Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º: {error_desc}")
                return {'ok': True, 'result': result}
            
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ API: {result}")
            return None
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return None

def author_button(user):
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞–≤—Ç–æ—Ä–µ —Å–æ–æ–±—â–µ–Ω–∏—è - –í–°–ï–ì–î–ê –ë–ï–ó –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô!"""
    
    # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í–°–ï–ì–î–ê —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∞
    if not user or not user.get('id'):
        logger.warning("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–Ω–æ–ø–∫—É")
        return {
            "inline_keyboard": [[{
                "text": "üë§ Foydalanuvchi",
                "url": "https://t.me/yukmarkazi_uz"  # –†–µ–∑–µ—Ä–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞
            }]]
        }
        
    user_id = user.get('id')
    logger.info(f"üîò –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è user_id: {user_id}")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    first_name = user.get('first_name', '')
    last_name = user.get('last_name', '')
    username = user.get('username', '')
    
    display_name = ''
    if first_name:
        display_name = first_name[:20]  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
        if last_name:
            display_name += f' {last_name[:20]}'
    elif username:
        display_name = f"@{username[:15]}"
    else:
        display_name = 'Foydalanuvchi'
    
    # –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ user_id - —Ä–∞–±–æ—Ç–∞–µ—Ç –í–°–ï–ì–î–ê
    button_text = f"üë§ {display_name}"
    url = f"tg://user?id={user_id}"
    
    button_data = {
        "inline_keyboard": [[{
            "text": button_text,
            "url": url
        }]]
    }
    
    logger.info(f"‚úÖ –ö–ù–û–ü–ö–ê –ê–í–¢–û–†–ê –ì–û–¢–û–í–ê: {button_text} ‚Üí {url}")
    return button_data

def handle_admin_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    text = message.get('text', '').strip()
    
    if text == '/stats':
        stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:
üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}
‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {datetime.now() - bot_start_time}
üîÑ –°—Ç–∞—Ç—É—Å: {bot_status}
üåê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {datetime.now().strftime('%H:%M:%S')}"""
        
        send_message(ADMIN_USER_ID, stats_text)

def ask_admin_topic(message, from_city, to_city):
    """–°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–¥–º–∏–Ω–∞, –≤ –∫–∞–∫–æ–π —Ç–æ–ø–∏–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    text = message.get('text', '')
    user = message.get('from', {})
    user_data = f"{user.get('id')}:{user.get('first_name', '')}:{user.get('username', '')}"
    
    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –¥–≤–æ–µ—Ç–æ—á–∏—è –¥–ª—è callback_data
    safe_data = f"{text}|||{user_data}".replace(":", "%3A")
    kb = [
        [{"text": k.upper(), "callback_data": f"route:{k}:{safe_data}"}]
        for k in REGION_KEYWORDS
    ]
    kb.append([{"text": "‚ùå –û—Ç–º–µ–Ω–∞", "callback_data": "route:cancel"}])
    requests.post(f"{API_URL}/sendMessage", json={
        "chat_id": ADMIN_USER_ID,
        "text": f"‚ö†Ô∏è –ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç:\n{from_city} ‚Üí {to_city}",
        "reply_markup": {"inline_keyboard": kb}
    }, timeout=10)

def send_telegram_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API"""
    try:
        requests.post(f"{API_URL}/sendMessage", json={
            "chat_id": chat_id,
            "text": text
        }, timeout=10)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

def handle_command(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞"""
    text = message.get('text', '').strip()
    chat_id = message['chat']['id']
    user_id = message['from']['id']
    
    if text == '/start':
        response = "ü§ñ YukMarkazi New Bot –∞–∫—Ç–∏–≤–µ–Ω!\n\nüìç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥—Ä—É–∑–∞—Ö –≤ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–æ–ø–∏–∫–∏.\n\nüîÑ –†–∞–±–æ—Ç–∞—é 24/7 –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ."
        send_telegram_message(chat_id, response)
        
    elif text == '/status':
        if user_id == ADMIN_USER_ID:
            # –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞
            response = f"ü§ñ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:\n‚úÖ –ê–∫—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç\nüìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {message_count}\nüïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M:%S')}\nüåê –°–µ—Ä–≤–µ—Ä: Render\nüíö UptimeRobot –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω"
        else:
            # –ü—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –≤—Å–µ—Ö
            response = f"ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω\nüïê {datetime.now().strftime('%H:%M:%S')}"
        send_telegram_message(chat_id, response)

def process_message(message):
    global last_update_id, message_count
    try:
        text = message.get('text', '')
        chat_id = message['chat']['id']
        user_id = message['from']['id']

        logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ {chat_id}: {text[:50]}...")

        # –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        chat_info = message.get('chat', {})
        chat_title = chat_info.get('title', 'Unknown')
        user_info = message.get('from', {})
        user_name = user_info.get('first_name', '') + ' ' + user_info.get('last_name', '')
        username = user_info.get('username', 'no_username')
        
        logger.info(f"üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–û–û–ë–©–ï–ù–ò–Ø:")
        logger.info(f"üìã –ß–∞—Ç: '{chat_title}' | ID: {chat_id}")
        logger.info(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_name.strip()} (@{username}) | ID: {user_info.get('id', 'unknown')}")
        logger.info(f"üéØ MAIN_GROUP_ID: {MAIN_GROUP_ID}")
        logger.info(f"‚úÖ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: {chat_id == MAIN_GROUP_ID}")
        
        # –ü–†–û–°–¢–ê–Ø –§–ò–õ–¨–¢–†–ê–¶–ò–Ø: —Ç–æ–ª—å–∫–æ —è–≤–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ —Ä–∞–±–æ—Ç–µ
        text_lower = text.lower()
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —è–≤–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏ (–Ω–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –≤ –≥—Ä—É–∑–∞—Ö)
        job_patterns = [
            r'kerak\s*(ish|operator|mashinist|shafyor)',
            r'ish\s*(bor|kerak|qidiryapman)',
            r'(operator|mashinist|shafyor)\s*kerak',
            r'ish\s+izlay\w*',  # ish izlayapman
            r'ishchi\s+kerak'   # ishchi kerak
        ]
        
        # –ë–ª–æ–∫–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –û–°–ù–û–í–ù–ê–Ø —Ç–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≥—Ä—É–∑–∞)
        is_job_posting = False
        for pattern in job_patterns:
            matches = re.findall(pattern, text_lower)
            if matches and not re.search(r'(toshkent|samarqand|buxoro|namangan|fargona|jizzax|qarshi|andijan|xorazm|navoiy|sirdaryo|surxon|qashqa)', text_lower):
                is_job_posting = True
                break
                
        if is_job_posting:
            logger.info(f"üö´ –§–ò–õ–¨–¢–†–ê–¶–ò–Ø: –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ —Ä–∞–±–æ—Ç–µ: {text[:50]}...")
            return
                
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö –∏–ª–∏ –ø–æ—á—Ç–∏ –ø—É—Å—Ç—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        cleaned_text = re.sub(r'[^\w\s]', '', text).strip()
        if len(cleaned_text) < 3 or text.strip() in ['...', '‚Ä¶.', '..', '.', '']:
            logger.info(f"üö´ –§–ò–õ–¨–¢–†–ê–¶–ò–Ø: –ü—É—Å—Ç–æ–µ/—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{text[:20]}...'")
            return

        if text.startswith('/'):
            logger.info(f"üéÆ –ö–û–ú–ê–ù–î–ê: '{text}' –æ—Ç {user_name.strip()} (@{username}) –∏–∑ —á–∞—Ç–∞ '{chat_title}' (ID: {chat_id})")
            handle_command(message)
            message_count += 1
            return

        if chat_id == ADMIN_USER_ID:
            handle_admin_command(message)
            message_count += 1
            return

        if chat_id != MAIN_GROUP_ID:
            logger.info(f"üö´ –ü—Ä–æ–ø—É—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏—è: –Ω–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã {MAIN_GROUP_ID} (–ø–æ–ª—É—á–µ–Ω–æ –∏–∑ '{chat_title}')")
            return

        logger.info("üéØ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã")
        message_count += 1

        # === –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –º–Ω–æ–≥–æ-–º–∞—Ä—à—Ä—É—Ç–Ω—ã–µ –±–ª–æ–∫–∏ —Å —Ñ–ª–∞–≥–∞–º–∏ ===
        blocks = [b.strip() for b in text.split('\n\n') if b.strip()]
        for block in blocks:
            lines = [l.strip() for l in block.split('\n') if l.strip()]
            if not lines:
                continue

            first_line = lines[0]
            if any(flag in first_line for flag in ['üá∑üá∫', 'üáßüáæ', 'üá∞üáø', 'üá∫üá∏', 'üáπüá∑']):
                from_city = first_line
                to_city = "üá∫üáø –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω"
                cargo_text = '\n'.join(lines[1:])
                phone = extract_phone_number(block)
                transport, desc = format_cargo_text(cargo_text)

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—Å–ª–æ–≤–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
                msg_parts = [f"{from_city.upper()} ‚Üí {to_city.upper()}"]
                
                if transport:
                    msg_parts.append(f"TRANSPORT: {transport}")
                
                msg_parts.append(f"TAVSIF: {desc}")
                
                if phone != "Telefon ko'rsatilmagan":
                    msg_parts.append(f"TELEFON: {phone}")
                
                msg_parts.extend([
                    "#XALQARO",
                    "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
                    "Boshqa yuklar: @logistika_marka"
                ])
                
                msg = "\n".join(msg_parts)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫ –∫–Ω–æ–ø–æ–∫
                author_markup = author_button(message.get('from', {}))
                result = send_message(
                    MAIN_GROUP_ID,
                    msg,
                    REGION_KEYWORDS['xalqaro']['topic_id'],
                    reply_markup=author_markup
                )
                
                # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –≤ send_message
                continue  # –±–ª–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω

        # === –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –∏ —Ç–æ–ø–∏–∫–∞ ===
        from_city, to_city, cargo_text = extract_route_and_cargo(text)
        if not from_city or not to_city:
            logger.info("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –º–∞—Ä—à—Ä—É—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è")
            return

        logger.info(f"üìç –ù–∞–π–¥–µ–Ω –º–∞—Ä—à—Ä—É—Ç: {from_city} ‚Üí {to_city}")

        # –£–õ–£–ß–®–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê: 
        # - –ü—Ä–æ–≤–µ—Ä—è–µ–º –û–ë–ê –≥–æ—Ä–æ–¥–∞ (–û–¢–ö–£–î–ê –∏ –ö–£–î–ê)
        # - –í—ã–±–∏—Ä–∞–µ–º –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–æ–ø–∏–∫
        # - –•—ç—à—Ç–µ–≥ —É–∫–∞–∑—ã–≤–∞–µ—Ç TO_CITY (–∫—É–¥–∞ –µ–¥–µ—Ç —Ç–æ–≤–∞—Ä)
        
        # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã –¥–ª—è –æ–±–æ–∏—Ö –≥–æ—Ä–æ–¥–æ–≤
        from_region_code = find_region(from_city)
        to_region_code = find_region(to_city)
        
        logger.info(f"üîç –†–µ–≥–∏–æ–Ω—ã: {from_city} ‚Üí {from_region_code} | {to_city} ‚Üí {to_region_code}")
        
        # 2. –ü–†–ò–û–†–ò–¢–ï–¢: –ö–æ–∫–∞–Ω–¥ –í–°–ï–ì–î–ê –∏–¥–µ—Ç –≤ —Ç–æ–ø–∏–∫ –§–µ—Ä–≥–∞–Ω–∞
        normalized_from = normalize_text(from_city)
        is_kokand = (normalized_from.find("qoqon") != -1 or normalized_from.find("–∫—É–∫–æ") != -1 or 
                    normalized_from.find("–∫–æ–∫–æ") != -1 or normalized_from.find("–∫–æ–∫–∞–Ω–¥") != -1 or
                    normalized_from.find("qo'qon") != -1 or normalized_from.find("kokand") != -1 or
                    normalized_from.find("kokon") != -1)
        
        if is_kokand:
            topic_region_code = "kokand"  # –ö–æ–∫–∞–Ω–¥ –∏–¥–µ—Ç –≤ —Ç–æ–ø–∏–∫ –§–µ—Ä–≥–∞–Ω–∞
            logger.info(f"üéØ –ü–†–ò–û–†–ò–¢–ï–¢ –ö–û–ö–ê–ù–îA: {from_city} ‚Üí —Ç–æ–ø–∏–∫ –§–µ—Ä–≥–∞–Ω–∞")
        else:
            # –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ –û–¢–ö–£–î–ê
            topic_region_code = from_region_code
            if not topic_region_code:
                topic_region_code = find_region(text)
                logger.info(f"üéØ Fallback –ø–æ–∏—Å–∫ –≤ —Ç–µ–∫—Å—Ç–µ: {topic_region_code}")
            else:
                logger.info(f"üéØ –¢–æ–ø–∏–∫ –ø–æ –û–¢–ö–£–î–ê: {from_city} ‚Üí {from_region_code}")
            
        # 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ö—ç—à—Ç–µ–≥ –ø–æ TO_CITY (–∫—É–¥–∞)
        hashtag_region_code = to_region_code
        
        # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê: "–ù–ê–ú–ê–ù" –∫–∞–∫ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª—è Namangan (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ö—ç—à—Ç–µ–≥–∞!)
        if not hashtag_region_code and to_city.upper() in ['–ù–ê–ú–ê–ù', 'NAMAN']:
            hashtag_region_code = 'namangan_city'
            logger.info(f"üîç –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: '{to_city}' ‚Üí Namangan –¥–ª—è —Ö—ç—à—Ç–µ–≥–∞")
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–±—É–µ–º —É–±—Ä–∞—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è -ga/-–¥–∞–Ω/-ga –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        if not hashtag_region_code:
            clean_to_city = to_city
            # –£–±–∏—Ä–∞–µ–º —É–∑–±–µ–∫—Å–∫–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
            if clean_to_city.lower().endswith('ga') or clean_to_city.lower().endswith('–≥–∞'):
                clean_to_city = clean_to_city[:-2]
            elif clean_to_city.lower().endswith('dan') or clean_to_city.lower().endswith('–¥–∞–Ω'):
                clean_to_city = clean_to_city[:-3]
            elif clean_to_city.lower().endswith('da') or clean_to_city.lower().endswith('–¥–∞'):
                clean_to_city = clean_to_city[:-2]
            
            hashtag_region_code = find_region(clean_to_city)
            logger.info(f"üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è —Ö—ç—à—Ç–µ–≥–∞: '{to_city}' ‚Üí '{clean_to_city}' ‚Üí {hashtag_region_code}")
        
        if not hashtag_region_code:
            hashtag_region_code = topic_region_code  # fallback —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ–≤—Å–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω
            logger.info(f"‚ö†Ô∏è –•—ç—à—Ç–µ–≥ fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ø–∏–∫ —Ä–µ–≥–∏–æ–Ω–∞ {hashtag_region_code}")
            
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ø–∏–∫ ID
        topic_id = None
        region_code = topic_region_code
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ä–µ–≥–∏–æ–Ω –¥–ª—è —Ç–æ–ø–∏–∫–∞
        if region_code:
            # –î–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–æ–ø–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö ID –Ω–∞–ø—Ä—è–º—É—é
            if region_code == 'xalqaro':
                topic_id = 101367
            elif region_code == 'reklama':
                topic_id = 101360
            elif region_code == 'yangiliklar':
                topic_id = 101359
            elif region_code == 'furabozor':
                topic_id = 101361
            elif region_code in REGION_KEYWORDS:
                topic_id = REGION_KEYWORDS[region_code]["topic_id"]
            else:
                logger.info(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞: {region_code}")
                ask_admin_topic(message, from_city, to_city)
                return
                
            logger.info(f"üéØ –¢–æ–ø–∏–∫ –ø–æ –û–¢–ö–£–î–ê ({from_city}): {region_code} ‚Üí topic {topic_id}")
        else:
            logger.info(f"‚ùå –†–µ–≥–∏–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è: {from_city} ‚Üí {to_city}")
            ask_admin_topic(message, from_city, to_city)
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        phone = extract_phone_number(text)
        transport, description = format_cargo_text(text)  # –ü–µ—Ä–µ–¥–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ö—ç—à—Ç–µ–≥ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–ö–£–î–ê –µ–¥–µ—Ç —Ç–æ–≤–∞—Ä)
        if hashtag_region_code:
            hashtag = hashtag_region_code.upper().replace('_CITY', '').replace('_', '_')
            logger.info(f"üè∑Ô∏è –•—ç—à—Ç–µ–≥ –ø–æ –ö–£–î–ê ({to_city}): #{hashtag}")
        elif region_code:
            hashtag = region_code.upper().replace('_CITY', '').replace('_', '_')
            logger.info(f"üè∑Ô∏è –•—ç—à—Ç–µ–≥ fallback: #{hashtag}")
        else:
            hashtag = "YUKMARKAZI"  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ö—ç—à—Ç–µ–≥ –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ö—ç—à—Ç–µ–≥ –¥–ª—è {to_city}, –∏—Å–ø–æ–ª—å–∑—É–µ–º #{hashtag}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—Å–ª–æ–≤–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
        message_parts = [f"{from_city.upper()} ‚Üí {to_city.upper()}"]
        
        if transport:
            message_parts.append(f"TRANSPORT: {transport}")
        
        message_parts.append(f"TAVSIF: {description}")
        
        if phone != "Telefon ko'rsatilmagan":
            message_parts.append(f"TELEFON: {phone}")
        
        message_parts.extend([
            f"#{hashtag}",
            "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ",
            "Boshqa yuklar: @logistika_marka"
        ])
        
        formatted_message = "\n".join(message_parts)

        # –í–°–ï–ì–î–ê —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∞ - –ë–ï–ó –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô!
        author_markup = author_button(message.get('from', {}))
        logger.info(f"üîò –ö–ù–û–ü–ö–ê –ê–í–¢–û–†–ê –°–û–ó–î–ê–ù–ê: {author_markup}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ç–æ–ø–∏–∫ - –∫–Ω–æ–ø–∫–∞ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–ê –≤—Å–µ–≥–¥–∞
        result = send_message(
            MAIN_GROUP_ID,
            formatted_message,
            topic_id,
            reply_markup=author_markup
        )
        
        if result:
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {message_count} ‚Üí —Ç–æ–ø–∏–∫ {topic_id}")
        else:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ç–æ–ø–∏–∫ {topic_id}")

        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        globals()['last_activity'] = datetime.now()

    except Exception:
        logging.exception("process_message error")


# === –í–°–¨ –û–°–¢–ê–õ–¨–ù–û–ô –ö–û–î (normalize_text, find_region, handle_callback) ‚Äî
# –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–æ–¥—É–ª—è, –ù–ï –≤–Ω—É—Ç—Ä–∏ process_message ===
import unicodedata
import re

def normalize_text_legacy(s: str) -> str:
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ (–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∞ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞)."""
    s = s.lower()
    s = re.sub(r"[ º ª‚Äô`¬¥]", "'", s)
    s = s.replace("ƒ±", "i").replace("ƒ∞", "i")
    trans_map = {
        "“õ": "q", "—û": "o'", "“ì": "g'", "“≥": "h",
        "—ë": "yo", "–π": "y", "—â": "sh", "—à": "sh", "—á": "ch",
        "—é": "yu", "—è": "ya", "—ç": "e", "—ä": "", "—å": "",
        "—ã": "i", "”ô": "a", "“Ø": "u", "”±": "u"
    }
    for cyr, lat in trans_map.items():
        s = s.replace(cyr, lat)
    s = unicodedata.normalize('NFKD', s)
    s = ''.join(ch for ch in s if not unicodedata.combining(ch))
    s = re.sub(r"\s+", " ", s).strip()
    return s

def normalize_apostrophes_for_search(text):
    """
    –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –¥–ª—è –ø–æ–∏—Å–∫–∞, –Ω–µ –º–µ–Ω—è—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
    """
    if not text:
        return text
    
    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —Ç–∏–ø—ã –∞–ø–æ—Å—Ç—Ä–æ—Ñ–æ–≤ –Ω–∞ –æ–±—ã—á–Ω—ã–π ' –¥–ª—è —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    apostrophe_replacements = {
        ' º': "'",   # –ø—Ä–∞–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –æ–±—ã—á–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ
        ' ª': "'",   # –ª–µ–≤—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –æ–±—ã—á–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ  
        '`': "'",   # –æ–±—Ä–∞—Ç–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ ‚Üí –æ–±—ã—á–Ω—ã–π –∞–ø–æ—Å—Ç—Ä–æ—Ñ
    }
    
    for old, new in apostrophe_replacements.items():
        text = text.replace(old, new)
    
    return text

def find_region(text: str) -> str | None:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ –í–°–ï–ú –¥–∞–Ω–Ω—ã–º: aliases, keywords, –Ω–∞–∑–≤–∞–Ω–∏—è–º."""
    if not text:
        return None
    
    # –°–Ω–∞—á–∞–ª–∞ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã, –ø–æ—Ç–æ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
    text_normalized_apostrophes = normalize_apostrophes_for_search(text)
    text_norm = normalize_text(text_normalized_apostrophes)
    
    # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Å —Ñ–ª–∞–≥–∞–º–∏ —Å—Ç—Ä–∞–Ω
    # –§–ª–∞–≥–∏ —Å—Ç—Ä–∞–Ω (üá∑üá∫üá∞üáøüá∫üá¶üáπüá∑ –∏ –¥—Ä.) —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
    country_flags = ['üá∑üá∫', 'üá∞üáø', 'üá∫üá¶', 'üáπüá∑', 'üáÆüá∑', 'üá®üá≥', 'üá∞üá¨', 'üáπüáØ', 'üáπüá≤', 'üá¶üá´', 'üáÆüá≥', 'üáµüá±', 'üá©üá™', 'üá´üá∑', 'üáÆüáπ', 'üá™üá∏']
    
    has_country_flag = any(flag in text for flag in country_flags)
    
    # 1. –ü–æ–∏—Å–∫ –≤ REGION_KEYWORDS (aliases)
    for code, data in REGION_KEYWORDS.items():
        for kw in data.get('aliases', []):
            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∞–ª–∏–∞—Å —Ç–æ–∂–µ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏
            kw_normalized_apostrophes = normalize_apostrophes_for_search(kw)
            kw_norm = normalize_text(kw_normalized_apostrophes)
            if kw_norm in text_norm or re.search(rf"\b{re.escape(kw_norm)}\b", text_norm):
                return code
                
        # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
        for field in ['cyrillic_uz', 'latin_uz', 'russian']:
            if field in data:
                # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–æ–ª—è —Ç–æ–∂–µ —Å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏
                field_normalized_apostrophes = normalize_apostrophes_for_search(data[field])
                field_norm = normalize_text(field_normalized_apostrophes)
                if field_norm in text_norm:
                    return code
    
    # 2. –ü–æ–∏—Å–∫ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ç–æ–ø–∏–∫–∞—Ö (–∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ + —Ñ–ª–∞–≥–∏ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö)
    special_mappings = {
        'xalqaro': ['international', 'xalqaro', '—Ä–æ—Å—Å–∏—è', 'russia', '–º–æ—Å–∫–≤–∞', 'moscow', '–∫–∞–∑–∞—Ö—Å—Ç–∞–Ω', 'kazakhstan', 
                    '–ø–æ–ª—à–∞', '–ø–æ–ª—å—à–∞', 'poland', 'polsha', '–∞–ª–º–∞—Ç—ã', 'almaty', '–∞–ª–º–∞—Ç–∞', '—Å–∞—Ä–∞—Ç–æ–≤', 'saratov',
                    'belarus', '–±–µ–ª–∞—Ä—É—Å—å', '–º–∏–Ω—Å–∫', 'minsk', 'borisov', '–±–æ—Ä–∏—Å–æ–≤', 'vitebsk', '–≤–∏—Ç–µ–±—Å–∫',
                    'ukraina', '—É–∫—Ä–∞–∏–Ω–∞', 'kiev', '–∫–∏–µ–≤', 'odessa', '–æ–¥–µ—Å—Å–∞', 'lvov', '–ª—å–≤–æ–≤',
                    'turkiya', '—Ç—É—Ä—Ü–∏—è', 'istanbul', '—Å—Ç–∞–º–±—É–ª', 'ankara', '–∞–Ω–∫–∞—Ä–∞',
                    'import', 'eksport', '—ç–∫—Å–ø–æ—Ä—Ç', '–∏–º–ø–æ—Ä—Ç', 'cis', '—Å–Ω–≥', 'europa', '–µ–≤—Ä–æ–ø–∞'],
        'reklama': ['reklama', '—Ä–µ–∫–ª–∞–º–∞', 'sotiladi', 'sotuvda', '–ø—Ä–æ–¥–∞–µ—Ç—Å—è', '–ø—Ä–æ–¥–∞—é'],
        'yangiliklar': ['yangilik', 'yangiliklar', '–Ω–æ–≤–æ—Å—Ç–∏', 'news', 'xabar'],
        'furabozor': ['furabozor', 'fura bozor', '—Ñ—É—Ä–∞–±–æ–∑–æ—Ä', '—Ä—ã–Ω–æ–∫ —Ñ—É—Ä']
    }
    
    for code, keywords in special_mappings.items():
        for kw in keywords:
            kw_norm = normalize_text(kw)
            if kw_norm in text_norm:
                # –î–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤: –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –ò–õ–ò —Ñ–ª–∞–≥–∏ —Å—Ç—Ä–∞–Ω
                if code == 'xalqaro':
                    return code
                else:
                    return code
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–ª—å–∫–æ —Ñ–ª–∞–≥–æ–≤ –¥–ª—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ (–µ—Å–ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã)
    if has_country_flag:
        return 'xalqaro'
    
    # 3. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    region_extras = {
        'tashkent_city': ['—Å—Ç–æ–ª–∏—Ü–∞', 'stolitsa', 'poytaxt', 'capital'],
        'samarqand_city': ['—Å–∞–º–∞—Ä–∫–∞–Ω–¥', 'samarkand', 'samarqand'],
        'buxoro_city': ['–±—É—Ö–∞—Ä–∞', 'bukhara', 'buxoro'],
        'fargona_city': ['—Ñ–µ—Ä–≥–∞–Ω–∞', 'fergana', 'kokand', '–∫–æ–∫–∞–Ω–¥', 'qo\'qon']
    }
    
    for code, keywords in region_extras.items():
        for kw in keywords:
            kw_norm = normalize_text(kw)
            if kw_norm in text_norm:
                return code
                
    return None

# --- callback handler ---
def handle_callback(update):
    try:
        query = update['callback_query']
        data = query['data']
        user_id = query['from']['id']
        if user_id != ADMIN_USER_ID:
            return
        if not data.startswith("route:"):
            return

        parts = data.split(":", 2)
        action = parts[1]
        payload = parts[2].replace("%3A", ":")
        original_text, user_info = payload.split("|||", 1)
        uid, name, username = user_info.split(":", 2)

        if action == "cancel":
            requests.post(f"{API_URL}/answerCallbackQuery", json={
                "callback_query_id": query['id'],
                "text": "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
            })
            return

        from_city, to_city, cargo_text = extract_route_and_cargo(original_text)
        if not from_city or not to_city:
            requests.post(f"{API_URL}/answerCallbackQuery", json={
                "callback_query_id": query['id'],
                "text": "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–∞—Ä—à—Ä—É—Ç"
            })
            return

        topic_key = action
        topic_id = REGION_KEYWORDS[topic_key]['topic_id']

        phone = extract_phone_number(original_text)
        cargo_clean = re.sub(PHONE_REGEX, '', original_text).strip()
        cargo_clean = re.sub(ROUTE_REGEX, '', cargo_clean).strip()
        transport, desc = format_cargo_text(cargo_clean)

        msg = (
            f"{from_city.upper()} ‚Üí {to_city.upper()}\n"
            f"TRANSPORT: {transport}\n"
            f"TAVSIF: {desc}\n"
            f"TELEFON: {phone}\n"
            f"#{to_city.upper()}\n"
            f"-------\n"
            f"Boshqa yuklar: @logistika_marka"
        )

        send_message(
            MAIN_GROUP_ID,
            msg,
            topic_id,
            reply_markup=author_button({"id": uid, "first_name": name, "username": username})
        )

        requests.post(f"{API_URL}/answerCallbackQuery", json={
            "callback_query_id": query['id'],
            "text": f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫ {topic_key}"
        })
    except Exception:
        logging.exception("callback error")

def get_updates():
    global last_update_id, stop_polling
    if not BOT_TOKEN or stop_polling:
        return []
    
    # –ê–í–¢–û–ù–û–ú–ù–û–ï –£–õ–£–ß–®–ï–ù–ò–ï: Retry –ª–æ–≥–∏–∫–∞
    for attempt in range(3):
        try:
            params = {'offset': last_update_id + 1, 'timeout': 30,
                      'allowed_updates': ['message', 'callback_query']}
            resp = requests.get(f"{API_URL}/getUpdates", params=params, timeout=35)
            if resp.status_code == 401:
                stop_polling = True
                return []
            data = resp.json()
            return data.get('result', []) if data.get('ok') else []
        except requests.exceptions.Timeout:
            logger.warning(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3: –¢–∞–π–º–∞—É—Ç getUpdates")
            time.sleep(2)
        except Exception as e:
            logger.error(f"üö® –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/3: {e}")
            if attempt == 2:
                return []
            time.sleep(5)
    return []

def bot_main_loop():
    global last_update_id, bot_status, message_count, stop_polling
    logger.info("ü§ñ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω")
    
    # –ê–í–¢–û–ù–û–ú–ù–û–ï –£–õ–£–ß–®–ï–ù–ò–ï: Heartbeat
    last_heartbeat = time.time()
    max_errors = 5
    consecutive_errors = 0
    restart_count = 0
    
    while not stop_polling:
        try:
            # Heartbeat –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
            if time.time() - last_heartbeat > 60:
                logger.info("üíì Bot heartbeat - ready for messages")
                last_heartbeat = time.time()
            
            updates = get_updates()
            if not updates:
                time.sleep(1)
                continue
                
            for update in updates:
                try:
                    update_id = update.get('update_id', 0)
                    
                    if 'message' in update:
                        msg = update['message']
                        chat_id = msg.get('chat', {}).get('id')
                        text = msg.get('text', '')
                        thread_id = msg.get('message_thread_id')
                        
                        logger.info(f"üîç Update {update_id}: —á–∞—Ç {chat_id}, —Ç–µ–∫—Å—Ç: {text[:30]}...")
                        
                        process_message(msg)
                        # –£–±–∏—Ä–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ thread_id
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
                        globals()['last_activity'] = datetime.now()
                        
                    if 'callback_query' in update:
                        handle_callback(update)
                        
                    last_update_id = max(last_update_id, update_id)
                    consecutive_errors = 0  # –°–±—Ä–æ—Å –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    
                except Exception as e:
                    logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ update: {e}")
                    logger.error(f"Update —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: {update}")
                    
        except Exception as e:
            consecutive_errors += 1
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Ü–∏–∫–ª–∞ #{consecutive_errors}: {e}")
            
            if consecutive_errors >= max_errors:
                logger.critical("üÜò –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ - –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫")
                restart_count += 1
                bot_status = "–ü–ï–†–ï–ó–ê–ü–£–°–ö"
                
                # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
                try:
                    requests.post(f"{API_URL}/sendMessage", json={
                        "chat_id": ADMIN_USER_ID,
                        "text": f"üîÑ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ #{restart_count}\n–ü—Ä–∏—á–∏–Ω–∞: {e}"
                    }, timeout=5)
                except:
                    pass
                
                time.sleep(10)
                consecutive_errors = 0
                bot_status = "–ê–ö–¢–ò–í–ï–ù"
            else:
                bot_status = "–û–®–ò–ë–ö–ê"
                time.sleep(5)
                bot_status = "–ê–ö–¢–ò–í–ï–ù"
                
        time.sleep(1)

# Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è Gunicorn
app = Flask(__name__)

# === –§–ò–õ–¨–¢–† –ü–û USER-AGENT (–¥–æ–±–∞–≤–ª—è–µ–º –∑–¥–µ—Å—å) ===
from flask import request

ALLOWED_UA = ("UptimeRobot", "TelegramBot")

@app.before_request
def block_noise():
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if request.path == '/':
        return None
        
    ua = request.headers.get("User-Agent", "")
    if not any(key in ua for key in ALLOWED_UA):
        return "", 204  # –º–æ–ª—á–∞ –æ—Ç–∫–ª–æ–Ω—è–µ–º –≤—Å—ë –ª–∏—à–Ω–µ–µ
# ==============================================

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –¥–ª—è Gunicorn
if BOT_TOKEN:
    init_logging()
    logger.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –±–æ—Ç–∞ –¥–ª—è Gunicorn...")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    bot_thread = threading.Thread(target=bot_main_loop, daemon=True)
    bot_thread.start()
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ")

@app.route('/')
def home():
    uptime = datetime.now() - bot_start_time
    h, m = divmod(int(uptime.total_seconds() // 60), 60)
    return f"<h1>YukMarkazi Bot ‚Äì {bot_status}</h1><p>–°–æ–æ–±—â–µ–Ω–∏–π: {message_count}</p><p>Uptime: {h}—á {m}–º</p>"

@app.route('/health')
def health():
    uptime_seconds = (datetime.now() - bot_start_time).total_seconds()
    last_activity = globals().get('last_activity', bot_start_time)
    last_activity_seconds = (datetime.now() - last_activity).total_seconds()
    
    is_healthy = True
    status_code = 200 if is_healthy else 503
    
    health_data = {
        "status": "healthy" if is_healthy else "unhealthy",
        "bot_status": bot_status,
        "uptime_seconds": int(uptime_seconds),
        "messages_processed": message_count,
        "last_activity_seconds_ago": int(last_activity_seconds),
        "timestamp": datetime.now().isoformat()
    }
    
    return health_data, status_code

@app.route('/ping')
def ping():
    return "pong", 200

@app.route('/telegram', methods=['POST'])
def telegram_webhook():
    try:
        update = request.get_json(force=True)
        if 'message' in update:
            process_message(update['message'])
        if 'callback_query' in update:
            handle_callback(update)
        return jsonify(ok=True), 200
    except Exception:
        logger.exception("Webhook error")
        return jsonify(ok=False), 500

if __name__ == '__main__':
    init_logging()
    
    # Graceful shutdown
    def shutdown_handler(signum, frame):
        global stop_polling, bot_status
        stop_polling = True
        bot_status = "–û–°–¢–ê–ù–û–í–õ–ï–ù"
        logger.info("üõë Graceful shutdown")
        sys.exit(0)
    
    signal.signal(signal.SIGTERM, shutdown_handler)
    signal.signal(signal.SIGINT, shutdown_handler)
    
    # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–≥–æ –±–æ—Ç–∞
    threading.Thread(target=bot_main_loop, daemon=True).start()
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
    try:
        requests.post(f"{API_URL}/sendMessage", json={
            "chat_id": ADMIN_USER_ID,
            "text": "üöÄ –ê–í–¢–û–ù–û–ú–ù–´–ô –ë–û–¢ v2.0\n\n‚úÖ –ü–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π\n‚úÖ –ê–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ\n‚úÖ Heartbeat —Å–∏—Å—Ç–µ–º–∞\n\n–†–∞–±–æ—Ç–∞—é 24/7 –±–µ–∑ Replit Agent!"
        }, timeout=5)
    except:
        pass
    
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=False)
