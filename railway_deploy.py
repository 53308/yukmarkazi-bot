# ... (–≤—Å—ë –¥–æ REGION_KEYWORDS –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

# === –î–û–ë–ê–í–õ–ï–ù–û: —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ ===
import unicodedata

def normalize_text(text):
    text = unicodedata.normalize('NFKD', text)  # –†–∞–∑–ª–æ–∂–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤
    text = text.replace('ƒ∞', 'I').replace('ƒ±', 'i')  # –¢—É—Ä–µ—Ü–∫–∏–µ –±—É–∫–≤—ã ‚Üí –æ–±—ã—á–Ω—ã–µ
    return text.lower().strip()

# ... (–≤—Å—ë –¥–æ process_message –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

def process_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        if not message.get('text'):
            return
            
        text = message['text']
        chat_id = message['chat']['id']
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –≤ –õ–°
        if chat_id == ADMIN_USER_ID:
            handle_admin_command(message)
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –≥—Ä—É–ø–ø—ã
        if chat_id != MAIN_GROUP_ID:
            return
        
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
        from_city, to_city, cargo_text = extract_route_and_cargo(text)
        if not from_city or not to_city:
            return
            
        # –ü–æ–∏—Å–∫ —Ä–µ–≥–∏–æ–Ω–∞ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        def find_region_by_text(text):
            text_lower = normalize_text(text)  # ‚Üê –∑–∞–º–µ–Ω–∏–ª–∏ –Ω–∞ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            words = re.findall(r'\b\w+\b', text_lower)
            
            # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ —Å–ª–æ–≤–∞–º
            for region_key, region_data in REGION_KEYWORDS.items():
                for keyword in region_data['keywords']:
                    keyword_lower = normalize_text(keyword)  # ‚Üê —Ç–æ–∂–µ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–ª—é—á
                    # –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å–ª–æ–≤–∞
                    if keyword_lower in words:
                        return region_key
                    # –í—Ö–æ–∂–¥–µ–Ω–∏–µ –¥–ª—è —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
                    if len(keyword_lower) > 4 and keyword_lower in text_lower:
                        return region_key
            return None
        
        # –ü–†–ò–û–†–ò–¢–ï–¢–ù–ê–Ø –õ–û–ì–ò–ö–ê: –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ ‚Üí –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Üí –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
        from_city_region = find_region_by_text(from_city)
        to_city_region = find_region_by_text(to_city)
        
        topic_keyword = None
        
        # 1. –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ—é—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        if from_city_region == 'xalqaro' or to_city_region == 'xalqaro':
            topic_keyword = 'xalqaro'
        # 2. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ –ø—É–Ω–∫—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        elif from_city_region and from_city_region != 'xalqaro':
            topic_keyword = from_city_region
        # 3. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø–æ –ø—É–Ω–∫—Ç—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
        elif to_city_region and to_city_region != 'xalqaro':
            topic_keyword = to_city_region
        # 4. –ü–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º—É —Ç–µ–∫—Å—Ç—É
        else:
            topic_keyword = find_region_by_text(text)
                    
        if not topic_keyword:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
            send_message(ADMIN_USER_ID, f"‚ö†Ô∏è –ù–ï–û–ü–û–ó–ù–ê–ù–ù–´–ô –ú–ê–†–®–†–£–¢:\n{from_city} ‚Üí {to_city}\n\n–¢–µ–∫—Å—Ç: {text[:200]}...")
            return
            
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        sender_name = message.get('from', {}).get('first_name', 'Anonim')
        sender_username = message.get('from', {}).get('username')
        sender_link = f"https://t.me/{sender_username}" if sender_username else sender_name
        
        phone = extract_phone_number(text)
        transport_type, cargo_description = format_cargo_text(cargo_text)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        formatted_text = f"""{from_city.upper()} - {to_city.upper()}

üöõ {transport_type}

üí¨ {cargo_description}

‚òéÔ∏è {phone}

üë§ {sender_link}

#{to_city.upper()}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
Boshqa yuklar: @logistika_marka"""

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–æ–ø–∏–∫
        topic_id = REGION_KEYWORDS[topic_keyword]['topic_id']
        success = send_message(MAIN_GROUP_ID, formatted_text, topic_id)
        
        if success:
            logger.info(f"üéØ {from_city} -> {to_city} ‚Üí {topic_keyword.upper()} ({topic_id})")
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ Xorazm
            if topic_keyword == 'xorazm':
                send_message(ADMIN_USER_ID, f"‚úÖ XORAZM –†–ê–ë–û–¢–ê–ï–¢!\n{from_city} ‚Üí {to_city} ‚Üí XORAZM (101660)")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")

# ... (–≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
